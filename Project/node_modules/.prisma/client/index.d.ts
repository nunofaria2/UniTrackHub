
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model disciplinas
 * 
 */
export type disciplinas = $Result.DefaultSelection<Prisma.$disciplinasPayload>
/**
 * Model disciplinas_horarios
 * 
 */
export type disciplinas_horarios = $Result.DefaultSelection<Prisma.$disciplinas_horariosPayload>
/**
 * Model disciplinas_professores
 * 
 */
export type disciplinas_professores = $Result.DefaultSelection<Prisma.$disciplinas_professoresPayload>
/**
 * Model disciplinas_utilizadores
 * 
 */
export type disciplinas_utilizadores = $Result.DefaultSelection<Prisma.$disciplinas_utilizadoresPayload>
/**
 * Model horarios
 * 
 */
export type horarios = $Result.DefaultSelection<Prisma.$horariosPayload>
/**
 * Model professores
 * 
 */
export type professores = $Result.DefaultSelection<Prisma.$professoresPayload>
/**
 * Model salas
 * 
 */
export type salas = $Result.DefaultSelection<Prisma.$salasPayload>
/**
 * Model salas_horarios
 * 
 */
export type salas_horarios = $Result.DefaultSelection<Prisma.$salas_horariosPayload>
/**
 * Model semestres
 * 
 */
export type semestres = $Result.DefaultSelection<Prisma.$semestresPayload>
/**
 * Model utilizadores
 * 
 */
export type utilizadores = $Result.DefaultSelection<Prisma.$utilizadoresPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Disciplinas
 * const disciplinas = await prisma.disciplinas.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Disciplinas
   * const disciplinas = await prisma.disciplinas.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.disciplinas`: Exposes CRUD operations for the **disciplinas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disciplinas
    * const disciplinas = await prisma.disciplinas.findMany()
    * ```
    */
  get disciplinas(): Prisma.disciplinasDelegate<ExtArgs>;

  /**
   * `prisma.disciplinas_horarios`: Exposes CRUD operations for the **disciplinas_horarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disciplinas_horarios
    * const disciplinas_horarios = await prisma.disciplinas_horarios.findMany()
    * ```
    */
  get disciplinas_horarios(): Prisma.disciplinas_horariosDelegate<ExtArgs>;

  /**
   * `prisma.disciplinas_professores`: Exposes CRUD operations for the **disciplinas_professores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disciplinas_professores
    * const disciplinas_professores = await prisma.disciplinas_professores.findMany()
    * ```
    */
  get disciplinas_professores(): Prisma.disciplinas_professoresDelegate<ExtArgs>;

  /**
   * `prisma.disciplinas_utilizadores`: Exposes CRUD operations for the **disciplinas_utilizadores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disciplinas_utilizadores
    * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findMany()
    * ```
    */
  get disciplinas_utilizadores(): Prisma.disciplinas_utilizadoresDelegate<ExtArgs>;

  /**
   * `prisma.horarios`: Exposes CRUD operations for the **horarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Horarios
    * const horarios = await prisma.horarios.findMany()
    * ```
    */
  get horarios(): Prisma.horariosDelegate<ExtArgs>;

  /**
   * `prisma.professores`: Exposes CRUD operations for the **professores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Professores
    * const professores = await prisma.professores.findMany()
    * ```
    */
  get professores(): Prisma.professoresDelegate<ExtArgs>;

  /**
   * `prisma.salas`: Exposes CRUD operations for the **salas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Salas
    * const salas = await prisma.salas.findMany()
    * ```
    */
  get salas(): Prisma.salasDelegate<ExtArgs>;

  /**
   * `prisma.salas_horarios`: Exposes CRUD operations for the **salas_horarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Salas_horarios
    * const salas_horarios = await prisma.salas_horarios.findMany()
    * ```
    */
  get salas_horarios(): Prisma.salas_horariosDelegate<ExtArgs>;

  /**
   * `prisma.semestres`: Exposes CRUD operations for the **semestres** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Semestres
    * const semestres = await prisma.semestres.findMany()
    * ```
    */
  get semestres(): Prisma.semestresDelegate<ExtArgs>;

  /**
   * `prisma.utilizadores`: Exposes CRUD operations for the **utilizadores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Utilizadores
    * const utilizadores = await prisma.utilizadores.findMany()
    * ```
    */
  get utilizadores(): Prisma.utilizadoresDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    disciplinas: 'disciplinas',
    disciplinas_horarios: 'disciplinas_horarios',
    disciplinas_professores: 'disciplinas_professores',
    disciplinas_utilizadores: 'disciplinas_utilizadores',
    horarios: 'horarios',
    professores: 'professores',
    salas: 'salas',
    salas_horarios: 'salas_horarios',
    semestres: 'semestres',
    utilizadores: 'utilizadores'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'disciplinas' | 'disciplinas_horarios' | 'disciplinas_professores' | 'disciplinas_utilizadores' | 'horarios' | 'professores' | 'salas' | 'salas_horarios' | 'semestres' | 'utilizadores'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      disciplinas: {
        payload: Prisma.$disciplinasPayload<ExtArgs>
        fields: Prisma.disciplinasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disciplinasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disciplinasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>
          }
          findFirst: {
            args: Prisma.disciplinasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disciplinasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>
          }
          findMany: {
            args: Prisma.disciplinasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>[]
          }
          create: {
            args: Prisma.disciplinasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>
          }
          createMany: {
            args: Prisma.disciplinasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.disciplinasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>
          }
          update: {
            args: Prisma.disciplinasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>
          }
          deleteMany: {
            args: Prisma.disciplinasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.disciplinasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.disciplinasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinasPayload>
          }
          aggregate: {
            args: Prisma.DisciplinasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDisciplinas>
          }
          groupBy: {
            args: Prisma.disciplinasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<DisciplinasGroupByOutputType>[]
          }
          count: {
            args: Prisma.disciplinasCountArgs<ExtArgs>,
            result: $Utils.Optional<DisciplinasCountAggregateOutputType> | number
          }
        }
      }
      disciplinas_horarios: {
        payload: Prisma.$disciplinas_horariosPayload<ExtArgs>
        fields: Prisma.disciplinas_horariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disciplinas_horariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disciplinas_horariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>
          }
          findFirst: {
            args: Prisma.disciplinas_horariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disciplinas_horariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>
          }
          findMany: {
            args: Prisma.disciplinas_horariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>[]
          }
          create: {
            args: Prisma.disciplinas_horariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>
          }
          createMany: {
            args: Prisma.disciplinas_horariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.disciplinas_horariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>
          }
          update: {
            args: Prisma.disciplinas_horariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>
          }
          deleteMany: {
            args: Prisma.disciplinas_horariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.disciplinas_horariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.disciplinas_horariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_horariosPayload>
          }
          aggregate: {
            args: Prisma.Disciplinas_horariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDisciplinas_horarios>
          }
          groupBy: {
            args: Prisma.disciplinas_horariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Disciplinas_horariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.disciplinas_horariosCountArgs<ExtArgs>,
            result: $Utils.Optional<Disciplinas_horariosCountAggregateOutputType> | number
          }
        }
      }
      disciplinas_professores: {
        payload: Prisma.$disciplinas_professoresPayload<ExtArgs>
        fields: Prisma.disciplinas_professoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disciplinas_professoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disciplinas_professoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>
          }
          findFirst: {
            args: Prisma.disciplinas_professoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disciplinas_professoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>
          }
          findMany: {
            args: Prisma.disciplinas_professoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>[]
          }
          create: {
            args: Prisma.disciplinas_professoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>
          }
          createMany: {
            args: Prisma.disciplinas_professoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.disciplinas_professoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>
          }
          update: {
            args: Prisma.disciplinas_professoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>
          }
          deleteMany: {
            args: Prisma.disciplinas_professoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.disciplinas_professoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.disciplinas_professoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_professoresPayload>
          }
          aggregate: {
            args: Prisma.Disciplinas_professoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDisciplinas_professores>
          }
          groupBy: {
            args: Prisma.disciplinas_professoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Disciplinas_professoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.disciplinas_professoresCountArgs<ExtArgs>,
            result: $Utils.Optional<Disciplinas_professoresCountAggregateOutputType> | number
          }
        }
      }
      disciplinas_utilizadores: {
        payload: Prisma.$disciplinas_utilizadoresPayload<ExtArgs>
        fields: Prisma.disciplinas_utilizadoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.disciplinas_utilizadoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.disciplinas_utilizadoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>
          }
          findFirst: {
            args: Prisma.disciplinas_utilizadoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.disciplinas_utilizadoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>
          }
          findMany: {
            args: Prisma.disciplinas_utilizadoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>[]
          }
          create: {
            args: Prisma.disciplinas_utilizadoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>
          }
          createMany: {
            args: Prisma.disciplinas_utilizadoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.disciplinas_utilizadoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>
          }
          update: {
            args: Prisma.disciplinas_utilizadoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>
          }
          deleteMany: {
            args: Prisma.disciplinas_utilizadoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.disciplinas_utilizadoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.disciplinas_utilizadoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$disciplinas_utilizadoresPayload>
          }
          aggregate: {
            args: Prisma.Disciplinas_utilizadoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateDisciplinas_utilizadores>
          }
          groupBy: {
            args: Prisma.disciplinas_utilizadoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Disciplinas_utilizadoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.disciplinas_utilizadoresCountArgs<ExtArgs>,
            result: $Utils.Optional<Disciplinas_utilizadoresCountAggregateOutputType> | number
          }
        }
      }
      horarios: {
        payload: Prisma.$horariosPayload<ExtArgs>
        fields: Prisma.horariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.horariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.horariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>
          }
          findFirst: {
            args: Prisma.horariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.horariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>
          }
          findMany: {
            args: Prisma.horariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>[]
          }
          create: {
            args: Prisma.horariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>
          }
          createMany: {
            args: Prisma.horariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.horariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>
          }
          update: {
            args: Prisma.horariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>
          }
          deleteMany: {
            args: Prisma.horariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.horariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.horariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$horariosPayload>
          }
          aggregate: {
            args: Prisma.HorariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateHorarios>
          }
          groupBy: {
            args: Prisma.horariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<HorariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.horariosCountArgs<ExtArgs>,
            result: $Utils.Optional<HorariosCountAggregateOutputType> | number
          }
        }
      }
      professores: {
        payload: Prisma.$professoresPayload<ExtArgs>
        fields: Prisma.professoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.professoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.professoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>
          }
          findFirst: {
            args: Prisma.professoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.professoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>
          }
          findMany: {
            args: Prisma.professoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>[]
          }
          create: {
            args: Prisma.professoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>
          }
          createMany: {
            args: Prisma.professoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.professoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>
          }
          update: {
            args: Prisma.professoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>
          }
          deleteMany: {
            args: Prisma.professoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.professoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.professoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$professoresPayload>
          }
          aggregate: {
            args: Prisma.ProfessoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateProfessores>
          }
          groupBy: {
            args: Prisma.professoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ProfessoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.professoresCountArgs<ExtArgs>,
            result: $Utils.Optional<ProfessoresCountAggregateOutputType> | number
          }
        }
      }
      salas: {
        payload: Prisma.$salasPayload<ExtArgs>
        fields: Prisma.salasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.salasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.salasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          findFirst: {
            args: Prisma.salasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.salasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          findMany: {
            args: Prisma.salasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>[]
          }
          create: {
            args: Prisma.salasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          createMany: {
            args: Prisma.salasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.salasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          update: {
            args: Prisma.salasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          deleteMany: {
            args: Prisma.salasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.salasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.salasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salasPayload>
          }
          aggregate: {
            args: Prisma.SalasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSalas>
          }
          groupBy: {
            args: Prisma.salasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SalasGroupByOutputType>[]
          }
          count: {
            args: Prisma.salasCountArgs<ExtArgs>,
            result: $Utils.Optional<SalasCountAggregateOutputType> | number
          }
        }
      }
      salas_horarios: {
        payload: Prisma.$salas_horariosPayload<ExtArgs>
        fields: Prisma.salas_horariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.salas_horariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.salas_horariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>
          }
          findFirst: {
            args: Prisma.salas_horariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.salas_horariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>
          }
          findMany: {
            args: Prisma.salas_horariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>[]
          }
          create: {
            args: Prisma.salas_horariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>
          }
          createMany: {
            args: Prisma.salas_horariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.salas_horariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>
          }
          update: {
            args: Prisma.salas_horariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>
          }
          deleteMany: {
            args: Prisma.salas_horariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.salas_horariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.salas_horariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$salas_horariosPayload>
          }
          aggregate: {
            args: Prisma.Salas_horariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSalas_horarios>
          }
          groupBy: {
            args: Prisma.salas_horariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Salas_horariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.salas_horariosCountArgs<ExtArgs>,
            result: $Utils.Optional<Salas_horariosCountAggregateOutputType> | number
          }
        }
      }
      semestres: {
        payload: Prisma.$semestresPayload<ExtArgs>
        fields: Prisma.semestresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.semestresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.semestresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>
          }
          findFirst: {
            args: Prisma.semestresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.semestresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>
          }
          findMany: {
            args: Prisma.semestresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>[]
          }
          create: {
            args: Prisma.semestresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>
          }
          createMany: {
            args: Prisma.semestresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.semestresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>
          }
          update: {
            args: Prisma.semestresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>
          }
          deleteMany: {
            args: Prisma.semestresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.semestresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.semestresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$semestresPayload>
          }
          aggregate: {
            args: Prisma.SemestresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSemestres>
          }
          groupBy: {
            args: Prisma.semestresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SemestresGroupByOutputType>[]
          }
          count: {
            args: Prisma.semestresCountArgs<ExtArgs>,
            result: $Utils.Optional<SemestresCountAggregateOutputType> | number
          }
        }
      }
      utilizadores: {
        payload: Prisma.$utilizadoresPayload<ExtArgs>
        fields: Prisma.utilizadoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.utilizadoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.utilizadoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>
          }
          findFirst: {
            args: Prisma.utilizadoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.utilizadoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>
          }
          findMany: {
            args: Prisma.utilizadoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>[]
          }
          create: {
            args: Prisma.utilizadoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>
          }
          createMany: {
            args: Prisma.utilizadoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.utilizadoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>
          }
          update: {
            args: Prisma.utilizadoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>
          }
          deleteMany: {
            args: Prisma.utilizadoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.utilizadoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.utilizadoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$utilizadoresPayload>
          }
          aggregate: {
            args: Prisma.UtilizadoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUtilizadores>
          }
          groupBy: {
            args: Prisma.utilizadoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UtilizadoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.utilizadoresCountArgs<ExtArgs>,
            result: $Utils.Optional<UtilizadoresCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DisciplinasCountOutputType
   */

  export type DisciplinasCountOutputType = {
    disciplinas_horarios: number
    disciplinas_professores: number
    disciplinas_utilizadores: number
  }

  export type DisciplinasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas_horarios?: boolean | DisciplinasCountOutputTypeCountDisciplinas_horariosArgs
    disciplinas_professores?: boolean | DisciplinasCountOutputTypeCountDisciplinas_professoresArgs
    disciplinas_utilizadores?: boolean | DisciplinasCountOutputTypeCountDisciplinas_utilizadoresArgs
  }

  // Custom InputTypes
  /**
   * DisciplinasCountOutputType without action
   */
  export type DisciplinasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DisciplinasCountOutputType
     */
    select?: DisciplinasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DisciplinasCountOutputType without action
   */
  export type DisciplinasCountOutputTypeCountDisciplinas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_horariosWhereInput
  }

  /**
   * DisciplinasCountOutputType without action
   */
  export type DisciplinasCountOutputTypeCountDisciplinas_professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_professoresWhereInput
  }

  /**
   * DisciplinasCountOutputType without action
   */
  export type DisciplinasCountOutputTypeCountDisciplinas_utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_utilizadoresWhereInput
  }


  /**
   * Count Type HorariosCountOutputType
   */

  export type HorariosCountOutputType = {
    disciplinas_horarios: number
    salas_horarios: number
  }

  export type HorariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas_horarios?: boolean | HorariosCountOutputTypeCountDisciplinas_horariosArgs
    salas_horarios?: boolean | HorariosCountOutputTypeCountSalas_horariosArgs
  }

  // Custom InputTypes
  /**
   * HorariosCountOutputType without action
   */
  export type HorariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HorariosCountOutputType
     */
    select?: HorariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HorariosCountOutputType without action
   */
  export type HorariosCountOutputTypeCountDisciplinas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_horariosWhereInput
  }

  /**
   * HorariosCountOutputType without action
   */
  export type HorariosCountOutputTypeCountSalas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salas_horariosWhereInput
  }


  /**
   * Count Type ProfessoresCountOutputType
   */

  export type ProfessoresCountOutputType = {
    disciplinas: number
    disciplinas_professores: number
  }

  export type ProfessoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas?: boolean | ProfessoresCountOutputTypeCountDisciplinasArgs
    disciplinas_professores?: boolean | ProfessoresCountOutputTypeCountDisciplinas_professoresArgs
  }

  // Custom InputTypes
  /**
   * ProfessoresCountOutputType without action
   */
  export type ProfessoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfessoresCountOutputType
     */
    select?: ProfessoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfessoresCountOutputType without action
   */
  export type ProfessoresCountOutputTypeCountDisciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinasWhereInput
  }

  /**
   * ProfessoresCountOutputType without action
   */
  export type ProfessoresCountOutputTypeCountDisciplinas_professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_professoresWhereInput
  }


  /**
   * Count Type SalasCountOutputType
   */

  export type SalasCountOutputType = {
    horarios: number
    salas_horarios: number
  }

  export type SalasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horarios?: boolean | SalasCountOutputTypeCountHorariosArgs
    salas_horarios?: boolean | SalasCountOutputTypeCountSalas_horariosArgs
  }

  // Custom InputTypes
  /**
   * SalasCountOutputType without action
   */
  export type SalasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalasCountOutputType
     */
    select?: SalasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalasCountOutputType without action
   */
  export type SalasCountOutputTypeCountHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: horariosWhereInput
  }

  /**
   * SalasCountOutputType without action
   */
  export type SalasCountOutputTypeCountSalas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salas_horariosWhereInput
  }


  /**
   * Count Type UtilizadoresCountOutputType
   */

  export type UtilizadoresCountOutputType = {
    disciplinas_utilizadores: number
    horarios: number
  }

  export type UtilizadoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas_utilizadores?: boolean | UtilizadoresCountOutputTypeCountDisciplinas_utilizadoresArgs
    horarios?: boolean | UtilizadoresCountOutputTypeCountHorariosArgs
  }

  // Custom InputTypes
  /**
   * UtilizadoresCountOutputType without action
   */
  export type UtilizadoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UtilizadoresCountOutputType
     */
    select?: UtilizadoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UtilizadoresCountOutputType without action
   */
  export type UtilizadoresCountOutputTypeCountDisciplinas_utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_utilizadoresWhereInput
  }

  /**
   * UtilizadoresCountOutputType without action
   */
  export type UtilizadoresCountOutputTypeCountHorariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: horariosWhereInput
  }


  /**
   * Models
   */

  /**
   * Model disciplinas
   */

  export type AggregateDisciplinas = {
    _count: DisciplinasCountAggregateOutputType | null
    _avg: DisciplinasAvgAggregateOutputType | null
    _sum: DisciplinasSumAggregateOutputType | null
    _min: DisciplinasMinAggregateOutputType | null
    _max: DisciplinasMaxAggregateOutputType | null
  }

  export type DisciplinasAvgAggregateOutputType = {
    id_disciplina: number | null
    Numero: number | null
    id_professor: number | null
  }

  export type DisciplinasSumAggregateOutputType = {
    id_disciplina: number | null
    Numero: number | null
    id_professor: number | null
  }

  export type DisciplinasMinAggregateOutputType = {
    id_disciplina: number | null
    Nome: string | null
    Numero: number | null
    id_professor: number | null
  }

  export type DisciplinasMaxAggregateOutputType = {
    id_disciplina: number | null
    Nome: string | null
    Numero: number | null
    id_professor: number | null
  }

  export type DisciplinasCountAggregateOutputType = {
    id_disciplina: number
    Nome: number
    Numero: number
    id_professor: number
    _all: number
  }


  export type DisciplinasAvgAggregateInputType = {
    id_disciplina?: true
    Numero?: true
    id_professor?: true
  }

  export type DisciplinasSumAggregateInputType = {
    id_disciplina?: true
    Numero?: true
    id_professor?: true
  }

  export type DisciplinasMinAggregateInputType = {
    id_disciplina?: true
    Nome?: true
    Numero?: true
    id_professor?: true
  }

  export type DisciplinasMaxAggregateInputType = {
    id_disciplina?: true
    Nome?: true
    Numero?: true
    id_professor?: true
  }

  export type DisciplinasCountAggregateInputType = {
    id_disciplina?: true
    Nome?: true
    Numero?: true
    id_professor?: true
    _all?: true
  }

  export type DisciplinasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas to aggregate.
     */
    where?: disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas to fetch.
     */
    orderBy?: disciplinasOrderByWithRelationInput | disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disciplinas
    **/
    _count?: true | DisciplinasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisciplinasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisciplinasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisciplinasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisciplinasMaxAggregateInputType
  }

  export type GetDisciplinasAggregateType<T extends DisciplinasAggregateArgs> = {
        [P in keyof T & keyof AggregateDisciplinas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisciplinas[P]>
      : GetScalarType<T[P], AggregateDisciplinas[P]>
  }




  export type disciplinasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinasWhereInput
    orderBy?: disciplinasOrderByWithAggregationInput | disciplinasOrderByWithAggregationInput[]
    by: DisciplinasScalarFieldEnum[] | DisciplinasScalarFieldEnum
    having?: disciplinasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisciplinasCountAggregateInputType | true
    _avg?: DisciplinasAvgAggregateInputType
    _sum?: DisciplinasSumAggregateInputType
    _min?: DisciplinasMinAggregateInputType
    _max?: DisciplinasMaxAggregateInputType
  }

  export type DisciplinasGroupByOutputType = {
    id_disciplina: number
    Nome: string | null
    Numero: number | null
    id_professor: number | null
    _count: DisciplinasCountAggregateOutputType | null
    _avg: DisciplinasAvgAggregateOutputType | null
    _sum: DisciplinasSumAggregateOutputType | null
    _min: DisciplinasMinAggregateOutputType | null
    _max: DisciplinasMaxAggregateOutputType | null
  }

  type GetDisciplinasGroupByPayload<T extends disciplinasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisciplinasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisciplinasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisciplinasGroupByOutputType[P]>
            : GetScalarType<T[P], DisciplinasGroupByOutputType[P]>
        }
      >
    >


  export type disciplinasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_disciplina?: boolean
    Nome?: boolean
    Numero?: boolean
    id_professor?: boolean
    professores?: boolean | disciplinas$professoresArgs<ExtArgs>
    disciplinas_horarios?: boolean | disciplinas$disciplinas_horariosArgs<ExtArgs>
    disciplinas_professores?: boolean | disciplinas$disciplinas_professoresArgs<ExtArgs>
    disciplinas_utilizadores?: boolean | disciplinas$disciplinas_utilizadoresArgs<ExtArgs>
    _count?: boolean | DisciplinasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disciplinas"]>

  export type disciplinasSelectScalar = {
    id_disciplina?: boolean
    Nome?: boolean
    Numero?: boolean
    id_professor?: boolean
  }


  export type disciplinasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    professores?: boolean | disciplinas$professoresArgs<ExtArgs>
    disciplinas_horarios?: boolean | disciplinas$disciplinas_horariosArgs<ExtArgs>
    disciplinas_professores?: boolean | disciplinas$disciplinas_professoresArgs<ExtArgs>
    disciplinas_utilizadores?: boolean | disciplinas$disciplinas_utilizadoresArgs<ExtArgs>
    _count?: boolean | DisciplinasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $disciplinasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disciplinas"
    objects: {
      professores: Prisma.$professoresPayload<ExtArgs> | null
      disciplinas_horarios: Prisma.$disciplinas_horariosPayload<ExtArgs>[]
      disciplinas_professores: Prisma.$disciplinas_professoresPayload<ExtArgs>[]
      disciplinas_utilizadores: Prisma.$disciplinas_utilizadoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_disciplina: number
      Nome: string | null
      Numero: number | null
      id_professor: number | null
    }, ExtArgs["result"]["disciplinas"]>
    composites: {}
  }


  type disciplinasGetPayload<S extends boolean | null | undefined | disciplinasDefaultArgs> = $Result.GetResult<Prisma.$disciplinasPayload, S>

  type disciplinasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<disciplinasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DisciplinasCountAggregateInputType | true
    }

  export interface disciplinasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disciplinas'], meta: { name: 'disciplinas' } }
    /**
     * Find zero or one Disciplinas that matches the filter.
     * @param {disciplinasFindUniqueArgs} args - Arguments to find a Disciplinas
     * @example
     * // Get one Disciplinas
     * const disciplinas = await prisma.disciplinas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends disciplinasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinasFindUniqueArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Disciplinas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {disciplinasFindUniqueOrThrowArgs} args - Arguments to find a Disciplinas
     * @example
     * // Get one Disciplinas
     * const disciplinas = await prisma.disciplinas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends disciplinasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinasFindFirstArgs} args - Arguments to find a Disciplinas
     * @example
     * // Get one Disciplinas
     * const disciplinas = await prisma.disciplinas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends disciplinasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinasFindFirstArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Disciplinas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinasFindFirstOrThrowArgs} args - Arguments to find a Disciplinas
     * @example
     * // Get one Disciplinas
     * const disciplinas = await prisma.disciplinas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends disciplinasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Disciplinas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disciplinas
     * const disciplinas = await prisma.disciplinas.findMany()
     * 
     * // Get first 10 Disciplinas
     * const disciplinas = await prisma.disciplinas.findMany({ take: 10 })
     * 
     * // Only select the `id_disciplina`
     * const disciplinasWithId_disciplinaOnly = await prisma.disciplinas.findMany({ select: { id_disciplina: true } })
     * 
    **/
    findMany<T extends disciplinasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Disciplinas.
     * @param {disciplinasCreateArgs} args - Arguments to create a Disciplinas.
     * @example
     * // Create one Disciplinas
     * const Disciplinas = await prisma.disciplinas.create({
     *   data: {
     *     // ... data to create a Disciplinas
     *   }
     * })
     * 
    **/
    create<T extends disciplinasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinasCreateArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Disciplinas.
     * @param {disciplinasCreateManyArgs} args - Arguments to create many Disciplinas.
     * @example
     * // Create many Disciplinas
     * const disciplinas = await prisma.disciplinas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends disciplinasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Disciplinas.
     * @param {disciplinasDeleteArgs} args - Arguments to delete one Disciplinas.
     * @example
     * // Delete one Disciplinas
     * const Disciplinas = await prisma.disciplinas.delete({
     *   where: {
     *     // ... filter to delete one Disciplinas
     *   }
     * })
     * 
    **/
    delete<T extends disciplinasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinasDeleteArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Disciplinas.
     * @param {disciplinasUpdateArgs} args - Arguments to update one Disciplinas.
     * @example
     * // Update one Disciplinas
     * const disciplinas = await prisma.disciplinas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends disciplinasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinasUpdateArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Disciplinas.
     * @param {disciplinasDeleteManyArgs} args - Arguments to filter Disciplinas to delete.
     * @example
     * // Delete a few Disciplinas
     * const { count } = await prisma.disciplinas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends disciplinasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disciplinas
     * const disciplinas = await prisma.disciplinas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends disciplinasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Disciplinas.
     * @param {disciplinasUpsertArgs} args - Arguments to update or create a Disciplinas.
     * @example
     * // Update or create a Disciplinas
     * const disciplinas = await prisma.disciplinas.upsert({
     *   create: {
     *     // ... data to create a Disciplinas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disciplinas we want to update
     *   }
     * })
    **/
    upsert<T extends disciplinasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinasUpsertArgs<ExtArgs>>
    ): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinasCountArgs} args - Arguments to filter Disciplinas to count.
     * @example
     * // Count the number of Disciplinas
     * const count = await prisma.disciplinas.count({
     *   where: {
     *     // ... the filter for the Disciplinas we want to count
     *   }
     * })
    **/
    count<T extends disciplinasCountArgs>(
      args?: Subset<T, disciplinasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisciplinasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisciplinasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisciplinasAggregateArgs>(args: Subset<T, DisciplinasAggregateArgs>): Prisma.PrismaPromise<GetDisciplinasAggregateType<T>>

    /**
     * Group by Disciplinas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disciplinasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disciplinasGroupByArgs['orderBy'] }
        : { orderBy?: disciplinasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disciplinasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisciplinasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disciplinas model
   */
  readonly fields: disciplinasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disciplinas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disciplinasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    professores<T extends disciplinas$professoresArgs<ExtArgs> = {}>(args?: Subset<T, disciplinas$professoresArgs<ExtArgs>>): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    disciplinas_horarios<T extends disciplinas$disciplinas_horariosArgs<ExtArgs> = {}>(args?: Subset<T, disciplinas$disciplinas_horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    disciplinas_professores<T extends disciplinas$disciplinas_professoresArgs<ExtArgs> = {}>(args?: Subset<T, disciplinas$disciplinas_professoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    disciplinas_utilizadores<T extends disciplinas$disciplinas_utilizadoresArgs<ExtArgs> = {}>(args?: Subset<T, disciplinas$disciplinas_utilizadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the disciplinas model
   */ 
  interface disciplinasFieldRefs {
    readonly id_disciplina: FieldRef<"disciplinas", 'Int'>
    readonly Nome: FieldRef<"disciplinas", 'String'>
    readonly Numero: FieldRef<"disciplinas", 'Int'>
    readonly id_professor: FieldRef<"disciplinas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * disciplinas findUnique
   */
  export type disciplinasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas to fetch.
     */
    where: disciplinasWhereUniqueInput
  }

  /**
   * disciplinas findUniqueOrThrow
   */
  export type disciplinasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas to fetch.
     */
    where: disciplinasWhereUniqueInput
  }

  /**
   * disciplinas findFirst
   */
  export type disciplinasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas to fetch.
     */
    where?: disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas to fetch.
     */
    orderBy?: disciplinasOrderByWithRelationInput | disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas.
     */
    cursor?: disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas.
     */
    distinct?: DisciplinasScalarFieldEnum | DisciplinasScalarFieldEnum[]
  }

  /**
   * disciplinas findFirstOrThrow
   */
  export type disciplinasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas to fetch.
     */
    where?: disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas to fetch.
     */
    orderBy?: disciplinasOrderByWithRelationInput | disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas.
     */
    cursor?: disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas.
     */
    distinct?: DisciplinasScalarFieldEnum | DisciplinasScalarFieldEnum[]
  }

  /**
   * disciplinas findMany
   */
  export type disciplinasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas to fetch.
     */
    where?: disciplinasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas to fetch.
     */
    orderBy?: disciplinasOrderByWithRelationInput | disciplinasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disciplinas.
     */
    cursor?: disciplinasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas.
     */
    skip?: number
    distinct?: DisciplinasScalarFieldEnum | DisciplinasScalarFieldEnum[]
  }

  /**
   * disciplinas create
   */
  export type disciplinasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * The data needed to create a disciplinas.
     */
    data: XOR<disciplinasCreateInput, disciplinasUncheckedCreateInput>
  }

  /**
   * disciplinas createMany
   */
  export type disciplinasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disciplinas.
     */
    data: disciplinasCreateManyInput | disciplinasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disciplinas update
   */
  export type disciplinasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * The data needed to update a disciplinas.
     */
    data: XOR<disciplinasUpdateInput, disciplinasUncheckedUpdateInput>
    /**
     * Choose, which disciplinas to update.
     */
    where: disciplinasWhereUniqueInput
  }

  /**
   * disciplinas updateMany
   */
  export type disciplinasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disciplinas.
     */
    data: XOR<disciplinasUpdateManyMutationInput, disciplinasUncheckedUpdateManyInput>
    /**
     * Filter which disciplinas to update
     */
    where?: disciplinasWhereInput
  }

  /**
   * disciplinas upsert
   */
  export type disciplinasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * The filter to search for the disciplinas to update in case it exists.
     */
    where: disciplinasWhereUniqueInput
    /**
     * In case the disciplinas found by the `where` argument doesn't exist, create a new disciplinas with this data.
     */
    create: XOR<disciplinasCreateInput, disciplinasUncheckedCreateInput>
    /**
     * In case the disciplinas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disciplinasUpdateInput, disciplinasUncheckedUpdateInput>
  }

  /**
   * disciplinas delete
   */
  export type disciplinasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    /**
     * Filter which disciplinas to delete.
     */
    where: disciplinasWhereUniqueInput
  }

  /**
   * disciplinas deleteMany
   */
  export type disciplinasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas to delete
     */
    where?: disciplinasWhereInput
  }

  /**
   * disciplinas.professores
   */
  export type disciplinas$professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    where?: professoresWhereInput
  }

  /**
   * disciplinas.disciplinas_horarios
   */
  export type disciplinas$disciplinas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    where?: disciplinas_horariosWhereInput
    orderBy?: disciplinas_horariosOrderByWithRelationInput | disciplinas_horariosOrderByWithRelationInput[]
    cursor?: disciplinas_horariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disciplinas_horariosScalarFieldEnum | Disciplinas_horariosScalarFieldEnum[]
  }

  /**
   * disciplinas.disciplinas_professores
   */
  export type disciplinas$disciplinas_professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    where?: disciplinas_professoresWhereInput
    orderBy?: disciplinas_professoresOrderByWithRelationInput | disciplinas_professoresOrderByWithRelationInput[]
    cursor?: disciplinas_professoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disciplinas_professoresScalarFieldEnum | Disciplinas_professoresScalarFieldEnum[]
  }

  /**
   * disciplinas.disciplinas_utilizadores
   */
  export type disciplinas$disciplinas_utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    where?: disciplinas_utilizadoresWhereInput
    orderBy?: disciplinas_utilizadoresOrderByWithRelationInput | disciplinas_utilizadoresOrderByWithRelationInput[]
    cursor?: disciplinas_utilizadoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disciplinas_utilizadoresScalarFieldEnum | Disciplinas_utilizadoresScalarFieldEnum[]
  }

  /**
   * disciplinas without action
   */
  export type disciplinasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
  }


  /**
   * Model disciplinas_horarios
   */

  export type AggregateDisciplinas_horarios = {
    _count: Disciplinas_horariosCountAggregateOutputType | null
    _avg: Disciplinas_horariosAvgAggregateOutputType | null
    _sum: Disciplinas_horariosSumAggregateOutputType | null
    _min: Disciplinas_horariosMinAggregateOutputType | null
    _max: Disciplinas_horariosMaxAggregateOutputType | null
  }

  export type Disciplinas_horariosAvgAggregateOutputType = {
    id_disciplina: number | null
    id_horario: number | null
  }

  export type Disciplinas_horariosSumAggregateOutputType = {
    id_disciplina: number | null
    id_horario: number | null
  }

  export type Disciplinas_horariosMinAggregateOutputType = {
    id_disciplina: number | null
    id_horario: number | null
  }

  export type Disciplinas_horariosMaxAggregateOutputType = {
    id_disciplina: number | null
    id_horario: number | null
  }

  export type Disciplinas_horariosCountAggregateOutputType = {
    id_disciplina: number
    id_horario: number
    _all: number
  }


  export type Disciplinas_horariosAvgAggregateInputType = {
    id_disciplina?: true
    id_horario?: true
  }

  export type Disciplinas_horariosSumAggregateInputType = {
    id_disciplina?: true
    id_horario?: true
  }

  export type Disciplinas_horariosMinAggregateInputType = {
    id_disciplina?: true
    id_horario?: true
  }

  export type Disciplinas_horariosMaxAggregateInputType = {
    id_disciplina?: true
    id_horario?: true
  }

  export type Disciplinas_horariosCountAggregateInputType = {
    id_disciplina?: true
    id_horario?: true
    _all?: true
  }

  export type Disciplinas_horariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas_horarios to aggregate.
     */
    where?: disciplinas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_horarios to fetch.
     */
    orderBy?: disciplinas_horariosOrderByWithRelationInput | disciplinas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disciplinas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disciplinas_horarios
    **/
    _count?: true | Disciplinas_horariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Disciplinas_horariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Disciplinas_horariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Disciplinas_horariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Disciplinas_horariosMaxAggregateInputType
  }

  export type GetDisciplinas_horariosAggregateType<T extends Disciplinas_horariosAggregateArgs> = {
        [P in keyof T & keyof AggregateDisciplinas_horarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisciplinas_horarios[P]>
      : GetScalarType<T[P], AggregateDisciplinas_horarios[P]>
  }




  export type disciplinas_horariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_horariosWhereInput
    orderBy?: disciplinas_horariosOrderByWithAggregationInput | disciplinas_horariosOrderByWithAggregationInput[]
    by: Disciplinas_horariosScalarFieldEnum[] | Disciplinas_horariosScalarFieldEnum
    having?: disciplinas_horariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Disciplinas_horariosCountAggregateInputType | true
    _avg?: Disciplinas_horariosAvgAggregateInputType
    _sum?: Disciplinas_horariosSumAggregateInputType
    _min?: Disciplinas_horariosMinAggregateInputType
    _max?: Disciplinas_horariosMaxAggregateInputType
  }

  export type Disciplinas_horariosGroupByOutputType = {
    id_disciplina: number
    id_horario: number
    _count: Disciplinas_horariosCountAggregateOutputType | null
    _avg: Disciplinas_horariosAvgAggregateOutputType | null
    _sum: Disciplinas_horariosSumAggregateOutputType | null
    _min: Disciplinas_horariosMinAggregateOutputType | null
    _max: Disciplinas_horariosMaxAggregateOutputType | null
  }

  type GetDisciplinas_horariosGroupByPayload<T extends disciplinas_horariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Disciplinas_horariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Disciplinas_horariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Disciplinas_horariosGroupByOutputType[P]>
            : GetScalarType<T[P], Disciplinas_horariosGroupByOutputType[P]>
        }
      >
    >


  export type disciplinas_horariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_disciplina?: boolean
    id_horario?: boolean
    disciplinas?: boolean | disciplinasDefaultArgs<ExtArgs>
    horarios?: boolean | horariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disciplinas_horarios"]>

  export type disciplinas_horariosSelectScalar = {
    id_disciplina?: boolean
    id_horario?: boolean
  }


  export type disciplinas_horariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas?: boolean | disciplinasDefaultArgs<ExtArgs>
    horarios?: boolean | horariosDefaultArgs<ExtArgs>
  }


  export type $disciplinas_horariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disciplinas_horarios"
    objects: {
      disciplinas: Prisma.$disciplinasPayload<ExtArgs>
      horarios: Prisma.$horariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_disciplina: number
      id_horario: number
    }, ExtArgs["result"]["disciplinas_horarios"]>
    composites: {}
  }


  type disciplinas_horariosGetPayload<S extends boolean | null | undefined | disciplinas_horariosDefaultArgs> = $Result.GetResult<Prisma.$disciplinas_horariosPayload, S>

  type disciplinas_horariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<disciplinas_horariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Disciplinas_horariosCountAggregateInputType | true
    }

  export interface disciplinas_horariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disciplinas_horarios'], meta: { name: 'disciplinas_horarios' } }
    /**
     * Find zero or one Disciplinas_horarios that matches the filter.
     * @param {disciplinas_horariosFindUniqueArgs} args - Arguments to find a Disciplinas_horarios
     * @example
     * // Get one Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends disciplinas_horariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_horariosFindUniqueArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Disciplinas_horarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {disciplinas_horariosFindUniqueOrThrowArgs} args - Arguments to find a Disciplinas_horarios
     * @example
     * // Get one Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends disciplinas_horariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_horariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Disciplinas_horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_horariosFindFirstArgs} args - Arguments to find a Disciplinas_horarios
     * @example
     * // Get one Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends disciplinas_horariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_horariosFindFirstArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Disciplinas_horarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_horariosFindFirstOrThrowArgs} args - Arguments to find a Disciplinas_horarios
     * @example
     * // Get one Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends disciplinas_horariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_horariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Disciplinas_horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_horariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.findMany()
     * 
     * // Get first 10 Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.findMany({ take: 10 })
     * 
     * // Only select the `id_disciplina`
     * const disciplinas_horariosWithId_disciplinaOnly = await prisma.disciplinas_horarios.findMany({ select: { id_disciplina: true } })
     * 
    **/
    findMany<T extends disciplinas_horariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_horariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Disciplinas_horarios.
     * @param {disciplinas_horariosCreateArgs} args - Arguments to create a Disciplinas_horarios.
     * @example
     * // Create one Disciplinas_horarios
     * const Disciplinas_horarios = await prisma.disciplinas_horarios.create({
     *   data: {
     *     // ... data to create a Disciplinas_horarios
     *   }
     * })
     * 
    **/
    create<T extends disciplinas_horariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_horariosCreateArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Disciplinas_horarios.
     * @param {disciplinas_horariosCreateManyArgs} args - Arguments to create many Disciplinas_horarios.
     * @example
     * // Create many Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends disciplinas_horariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_horariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Disciplinas_horarios.
     * @param {disciplinas_horariosDeleteArgs} args - Arguments to delete one Disciplinas_horarios.
     * @example
     * // Delete one Disciplinas_horarios
     * const Disciplinas_horarios = await prisma.disciplinas_horarios.delete({
     *   where: {
     *     // ... filter to delete one Disciplinas_horarios
     *   }
     * })
     * 
    **/
    delete<T extends disciplinas_horariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_horariosDeleteArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Disciplinas_horarios.
     * @param {disciplinas_horariosUpdateArgs} args - Arguments to update one Disciplinas_horarios.
     * @example
     * // Update one Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends disciplinas_horariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_horariosUpdateArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Disciplinas_horarios.
     * @param {disciplinas_horariosDeleteManyArgs} args - Arguments to filter Disciplinas_horarios to delete.
     * @example
     * // Delete a few Disciplinas_horarios
     * const { count } = await prisma.disciplinas_horarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends disciplinas_horariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_horariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disciplinas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_horariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends disciplinas_horariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_horariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Disciplinas_horarios.
     * @param {disciplinas_horariosUpsertArgs} args - Arguments to update or create a Disciplinas_horarios.
     * @example
     * // Update or create a Disciplinas_horarios
     * const disciplinas_horarios = await prisma.disciplinas_horarios.upsert({
     *   create: {
     *     // ... data to create a Disciplinas_horarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disciplinas_horarios we want to update
     *   }
     * })
    **/
    upsert<T extends disciplinas_horariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_horariosUpsertArgs<ExtArgs>>
    ): Prisma__disciplinas_horariosClient<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Disciplinas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_horariosCountArgs} args - Arguments to filter Disciplinas_horarios to count.
     * @example
     * // Count the number of Disciplinas_horarios
     * const count = await prisma.disciplinas_horarios.count({
     *   where: {
     *     // ... the filter for the Disciplinas_horarios we want to count
     *   }
     * })
    **/
    count<T extends disciplinas_horariosCountArgs>(
      args?: Subset<T, disciplinas_horariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Disciplinas_horariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disciplinas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Disciplinas_horariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Disciplinas_horariosAggregateArgs>(args: Subset<T, Disciplinas_horariosAggregateArgs>): Prisma.PrismaPromise<GetDisciplinas_horariosAggregateType<T>>

    /**
     * Group by Disciplinas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_horariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disciplinas_horariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disciplinas_horariosGroupByArgs['orderBy'] }
        : { orderBy?: disciplinas_horariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disciplinas_horariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisciplinas_horariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disciplinas_horarios model
   */
  readonly fields: disciplinas_horariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disciplinas_horarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disciplinas_horariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    disciplinas<T extends disciplinasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, disciplinasDefaultArgs<ExtArgs>>): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    horarios<T extends horariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, horariosDefaultArgs<ExtArgs>>): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the disciplinas_horarios model
   */ 
  interface disciplinas_horariosFieldRefs {
    readonly id_disciplina: FieldRef<"disciplinas_horarios", 'Int'>
    readonly id_horario: FieldRef<"disciplinas_horarios", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * disciplinas_horarios findUnique
   */
  export type disciplinas_horariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_horarios to fetch.
     */
    where: disciplinas_horariosWhereUniqueInput
  }

  /**
   * disciplinas_horarios findUniqueOrThrow
   */
  export type disciplinas_horariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_horarios to fetch.
     */
    where: disciplinas_horariosWhereUniqueInput
  }

  /**
   * disciplinas_horarios findFirst
   */
  export type disciplinas_horariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_horarios to fetch.
     */
    where?: disciplinas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_horarios to fetch.
     */
    orderBy?: disciplinas_horariosOrderByWithRelationInput | disciplinas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas_horarios.
     */
    cursor?: disciplinas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas_horarios.
     */
    distinct?: Disciplinas_horariosScalarFieldEnum | Disciplinas_horariosScalarFieldEnum[]
  }

  /**
   * disciplinas_horarios findFirstOrThrow
   */
  export type disciplinas_horariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_horarios to fetch.
     */
    where?: disciplinas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_horarios to fetch.
     */
    orderBy?: disciplinas_horariosOrderByWithRelationInput | disciplinas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas_horarios.
     */
    cursor?: disciplinas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas_horarios.
     */
    distinct?: Disciplinas_horariosScalarFieldEnum | Disciplinas_horariosScalarFieldEnum[]
  }

  /**
   * disciplinas_horarios findMany
   */
  export type disciplinas_horariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_horarios to fetch.
     */
    where?: disciplinas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_horarios to fetch.
     */
    orderBy?: disciplinas_horariosOrderByWithRelationInput | disciplinas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disciplinas_horarios.
     */
    cursor?: disciplinas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_horarios.
     */
    skip?: number
    distinct?: Disciplinas_horariosScalarFieldEnum | Disciplinas_horariosScalarFieldEnum[]
  }

  /**
   * disciplinas_horarios create
   */
  export type disciplinas_horariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * The data needed to create a disciplinas_horarios.
     */
    data: XOR<disciplinas_horariosCreateInput, disciplinas_horariosUncheckedCreateInput>
  }

  /**
   * disciplinas_horarios createMany
   */
  export type disciplinas_horariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disciplinas_horarios.
     */
    data: disciplinas_horariosCreateManyInput | disciplinas_horariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disciplinas_horarios update
   */
  export type disciplinas_horariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * The data needed to update a disciplinas_horarios.
     */
    data: XOR<disciplinas_horariosUpdateInput, disciplinas_horariosUncheckedUpdateInput>
    /**
     * Choose, which disciplinas_horarios to update.
     */
    where: disciplinas_horariosWhereUniqueInput
  }

  /**
   * disciplinas_horarios updateMany
   */
  export type disciplinas_horariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disciplinas_horarios.
     */
    data: XOR<disciplinas_horariosUpdateManyMutationInput, disciplinas_horariosUncheckedUpdateManyInput>
    /**
     * Filter which disciplinas_horarios to update
     */
    where?: disciplinas_horariosWhereInput
  }

  /**
   * disciplinas_horarios upsert
   */
  export type disciplinas_horariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * The filter to search for the disciplinas_horarios to update in case it exists.
     */
    where: disciplinas_horariosWhereUniqueInput
    /**
     * In case the disciplinas_horarios found by the `where` argument doesn't exist, create a new disciplinas_horarios with this data.
     */
    create: XOR<disciplinas_horariosCreateInput, disciplinas_horariosUncheckedCreateInput>
    /**
     * In case the disciplinas_horarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disciplinas_horariosUpdateInput, disciplinas_horariosUncheckedUpdateInput>
  }

  /**
   * disciplinas_horarios delete
   */
  export type disciplinas_horariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    /**
     * Filter which disciplinas_horarios to delete.
     */
    where: disciplinas_horariosWhereUniqueInput
  }

  /**
   * disciplinas_horarios deleteMany
   */
  export type disciplinas_horariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas_horarios to delete
     */
    where?: disciplinas_horariosWhereInput
  }

  /**
   * disciplinas_horarios without action
   */
  export type disciplinas_horariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
  }


  /**
   * Model disciplinas_professores
   */

  export type AggregateDisciplinas_professores = {
    _count: Disciplinas_professoresCountAggregateOutputType | null
    _avg: Disciplinas_professoresAvgAggregateOutputType | null
    _sum: Disciplinas_professoresSumAggregateOutputType | null
    _min: Disciplinas_professoresMinAggregateOutputType | null
    _max: Disciplinas_professoresMaxAggregateOutputType | null
  }

  export type Disciplinas_professoresAvgAggregateOutputType = {
    id_disciplina: number | null
    id_professor: number | null
  }

  export type Disciplinas_professoresSumAggregateOutputType = {
    id_disciplina: number | null
    id_professor: number | null
  }

  export type Disciplinas_professoresMinAggregateOutputType = {
    id_disciplina: number | null
    id_professor: number | null
  }

  export type Disciplinas_professoresMaxAggregateOutputType = {
    id_disciplina: number | null
    id_professor: number | null
  }

  export type Disciplinas_professoresCountAggregateOutputType = {
    id_disciplina: number
    id_professor: number
    _all: number
  }


  export type Disciplinas_professoresAvgAggregateInputType = {
    id_disciplina?: true
    id_professor?: true
  }

  export type Disciplinas_professoresSumAggregateInputType = {
    id_disciplina?: true
    id_professor?: true
  }

  export type Disciplinas_professoresMinAggregateInputType = {
    id_disciplina?: true
    id_professor?: true
  }

  export type Disciplinas_professoresMaxAggregateInputType = {
    id_disciplina?: true
    id_professor?: true
  }

  export type Disciplinas_professoresCountAggregateInputType = {
    id_disciplina?: true
    id_professor?: true
    _all?: true
  }

  export type Disciplinas_professoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas_professores to aggregate.
     */
    where?: disciplinas_professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_professores to fetch.
     */
    orderBy?: disciplinas_professoresOrderByWithRelationInput | disciplinas_professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disciplinas_professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_professores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disciplinas_professores
    **/
    _count?: true | Disciplinas_professoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Disciplinas_professoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Disciplinas_professoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Disciplinas_professoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Disciplinas_professoresMaxAggregateInputType
  }

  export type GetDisciplinas_professoresAggregateType<T extends Disciplinas_professoresAggregateArgs> = {
        [P in keyof T & keyof AggregateDisciplinas_professores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisciplinas_professores[P]>
      : GetScalarType<T[P], AggregateDisciplinas_professores[P]>
  }




  export type disciplinas_professoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_professoresWhereInput
    orderBy?: disciplinas_professoresOrderByWithAggregationInput | disciplinas_professoresOrderByWithAggregationInput[]
    by: Disciplinas_professoresScalarFieldEnum[] | Disciplinas_professoresScalarFieldEnum
    having?: disciplinas_professoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Disciplinas_professoresCountAggregateInputType | true
    _avg?: Disciplinas_professoresAvgAggregateInputType
    _sum?: Disciplinas_professoresSumAggregateInputType
    _min?: Disciplinas_professoresMinAggregateInputType
    _max?: Disciplinas_professoresMaxAggregateInputType
  }

  export type Disciplinas_professoresGroupByOutputType = {
    id_disciplina: number
    id_professor: number
    _count: Disciplinas_professoresCountAggregateOutputType | null
    _avg: Disciplinas_professoresAvgAggregateOutputType | null
    _sum: Disciplinas_professoresSumAggregateOutputType | null
    _min: Disciplinas_professoresMinAggregateOutputType | null
    _max: Disciplinas_professoresMaxAggregateOutputType | null
  }

  type GetDisciplinas_professoresGroupByPayload<T extends disciplinas_professoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Disciplinas_professoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Disciplinas_professoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Disciplinas_professoresGroupByOutputType[P]>
            : GetScalarType<T[P], Disciplinas_professoresGroupByOutputType[P]>
        }
      >
    >


  export type disciplinas_professoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_disciplina?: boolean
    id_professor?: boolean
    disciplinas?: boolean | disciplinasDefaultArgs<ExtArgs>
    professores?: boolean | professoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disciplinas_professores"]>

  export type disciplinas_professoresSelectScalar = {
    id_disciplina?: boolean
    id_professor?: boolean
  }


  export type disciplinas_professoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas?: boolean | disciplinasDefaultArgs<ExtArgs>
    professores?: boolean | professoresDefaultArgs<ExtArgs>
  }


  export type $disciplinas_professoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disciplinas_professores"
    objects: {
      disciplinas: Prisma.$disciplinasPayload<ExtArgs>
      professores: Prisma.$professoresPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_disciplina: number
      id_professor: number
    }, ExtArgs["result"]["disciplinas_professores"]>
    composites: {}
  }


  type disciplinas_professoresGetPayload<S extends boolean | null | undefined | disciplinas_professoresDefaultArgs> = $Result.GetResult<Prisma.$disciplinas_professoresPayload, S>

  type disciplinas_professoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<disciplinas_professoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Disciplinas_professoresCountAggregateInputType | true
    }

  export interface disciplinas_professoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disciplinas_professores'], meta: { name: 'disciplinas_professores' } }
    /**
     * Find zero or one Disciplinas_professores that matches the filter.
     * @param {disciplinas_professoresFindUniqueArgs} args - Arguments to find a Disciplinas_professores
     * @example
     * // Get one Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends disciplinas_professoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_professoresFindUniqueArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Disciplinas_professores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {disciplinas_professoresFindUniqueOrThrowArgs} args - Arguments to find a Disciplinas_professores
     * @example
     * // Get one Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends disciplinas_professoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_professoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Disciplinas_professores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_professoresFindFirstArgs} args - Arguments to find a Disciplinas_professores
     * @example
     * // Get one Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends disciplinas_professoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_professoresFindFirstArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Disciplinas_professores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_professoresFindFirstOrThrowArgs} args - Arguments to find a Disciplinas_professores
     * @example
     * // Get one Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends disciplinas_professoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_professoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Disciplinas_professores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_professoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.findMany()
     * 
     * // Get first 10 Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.findMany({ take: 10 })
     * 
     * // Only select the `id_disciplina`
     * const disciplinas_professoresWithId_disciplinaOnly = await prisma.disciplinas_professores.findMany({ select: { id_disciplina: true } })
     * 
    **/
    findMany<T extends disciplinas_professoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_professoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Disciplinas_professores.
     * @param {disciplinas_professoresCreateArgs} args - Arguments to create a Disciplinas_professores.
     * @example
     * // Create one Disciplinas_professores
     * const Disciplinas_professores = await prisma.disciplinas_professores.create({
     *   data: {
     *     // ... data to create a Disciplinas_professores
     *   }
     * })
     * 
    **/
    create<T extends disciplinas_professoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_professoresCreateArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Disciplinas_professores.
     * @param {disciplinas_professoresCreateManyArgs} args - Arguments to create many Disciplinas_professores.
     * @example
     * // Create many Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends disciplinas_professoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_professoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Disciplinas_professores.
     * @param {disciplinas_professoresDeleteArgs} args - Arguments to delete one Disciplinas_professores.
     * @example
     * // Delete one Disciplinas_professores
     * const Disciplinas_professores = await prisma.disciplinas_professores.delete({
     *   where: {
     *     // ... filter to delete one Disciplinas_professores
     *   }
     * })
     * 
    **/
    delete<T extends disciplinas_professoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_professoresDeleteArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Disciplinas_professores.
     * @param {disciplinas_professoresUpdateArgs} args - Arguments to update one Disciplinas_professores.
     * @example
     * // Update one Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends disciplinas_professoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_professoresUpdateArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Disciplinas_professores.
     * @param {disciplinas_professoresDeleteManyArgs} args - Arguments to filter Disciplinas_professores to delete.
     * @example
     * // Delete a few Disciplinas_professores
     * const { count } = await prisma.disciplinas_professores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends disciplinas_professoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_professoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disciplinas_professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_professoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends disciplinas_professoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_professoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Disciplinas_professores.
     * @param {disciplinas_professoresUpsertArgs} args - Arguments to update or create a Disciplinas_professores.
     * @example
     * // Update or create a Disciplinas_professores
     * const disciplinas_professores = await prisma.disciplinas_professores.upsert({
     *   create: {
     *     // ... data to create a Disciplinas_professores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disciplinas_professores we want to update
     *   }
     * })
    **/
    upsert<T extends disciplinas_professoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_professoresUpsertArgs<ExtArgs>>
    ): Prisma__disciplinas_professoresClient<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Disciplinas_professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_professoresCountArgs} args - Arguments to filter Disciplinas_professores to count.
     * @example
     * // Count the number of Disciplinas_professores
     * const count = await prisma.disciplinas_professores.count({
     *   where: {
     *     // ... the filter for the Disciplinas_professores we want to count
     *   }
     * })
    **/
    count<T extends disciplinas_professoresCountArgs>(
      args?: Subset<T, disciplinas_professoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Disciplinas_professoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disciplinas_professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Disciplinas_professoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Disciplinas_professoresAggregateArgs>(args: Subset<T, Disciplinas_professoresAggregateArgs>): Prisma.PrismaPromise<GetDisciplinas_professoresAggregateType<T>>

    /**
     * Group by Disciplinas_professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_professoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disciplinas_professoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disciplinas_professoresGroupByArgs['orderBy'] }
        : { orderBy?: disciplinas_professoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disciplinas_professoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisciplinas_professoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disciplinas_professores model
   */
  readonly fields: disciplinas_professoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disciplinas_professores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disciplinas_professoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    disciplinas<T extends disciplinasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, disciplinasDefaultArgs<ExtArgs>>): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    professores<T extends professoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, professoresDefaultArgs<ExtArgs>>): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the disciplinas_professores model
   */ 
  interface disciplinas_professoresFieldRefs {
    readonly id_disciplina: FieldRef<"disciplinas_professores", 'Int'>
    readonly id_professor: FieldRef<"disciplinas_professores", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * disciplinas_professores findUnique
   */
  export type disciplinas_professoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_professores to fetch.
     */
    where: disciplinas_professoresWhereUniqueInput
  }

  /**
   * disciplinas_professores findUniqueOrThrow
   */
  export type disciplinas_professoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_professores to fetch.
     */
    where: disciplinas_professoresWhereUniqueInput
  }

  /**
   * disciplinas_professores findFirst
   */
  export type disciplinas_professoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_professores to fetch.
     */
    where?: disciplinas_professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_professores to fetch.
     */
    orderBy?: disciplinas_professoresOrderByWithRelationInput | disciplinas_professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas_professores.
     */
    cursor?: disciplinas_professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_professores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas_professores.
     */
    distinct?: Disciplinas_professoresScalarFieldEnum | Disciplinas_professoresScalarFieldEnum[]
  }

  /**
   * disciplinas_professores findFirstOrThrow
   */
  export type disciplinas_professoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_professores to fetch.
     */
    where?: disciplinas_professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_professores to fetch.
     */
    orderBy?: disciplinas_professoresOrderByWithRelationInput | disciplinas_professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas_professores.
     */
    cursor?: disciplinas_professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_professores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas_professores.
     */
    distinct?: Disciplinas_professoresScalarFieldEnum | Disciplinas_professoresScalarFieldEnum[]
  }

  /**
   * disciplinas_professores findMany
   */
  export type disciplinas_professoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_professores to fetch.
     */
    where?: disciplinas_professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_professores to fetch.
     */
    orderBy?: disciplinas_professoresOrderByWithRelationInput | disciplinas_professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disciplinas_professores.
     */
    cursor?: disciplinas_professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_professores.
     */
    skip?: number
    distinct?: Disciplinas_professoresScalarFieldEnum | Disciplinas_professoresScalarFieldEnum[]
  }

  /**
   * disciplinas_professores create
   */
  export type disciplinas_professoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * The data needed to create a disciplinas_professores.
     */
    data: XOR<disciplinas_professoresCreateInput, disciplinas_professoresUncheckedCreateInput>
  }

  /**
   * disciplinas_professores createMany
   */
  export type disciplinas_professoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disciplinas_professores.
     */
    data: disciplinas_professoresCreateManyInput | disciplinas_professoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disciplinas_professores update
   */
  export type disciplinas_professoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * The data needed to update a disciplinas_professores.
     */
    data: XOR<disciplinas_professoresUpdateInput, disciplinas_professoresUncheckedUpdateInput>
    /**
     * Choose, which disciplinas_professores to update.
     */
    where: disciplinas_professoresWhereUniqueInput
  }

  /**
   * disciplinas_professores updateMany
   */
  export type disciplinas_professoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disciplinas_professores.
     */
    data: XOR<disciplinas_professoresUpdateManyMutationInput, disciplinas_professoresUncheckedUpdateManyInput>
    /**
     * Filter which disciplinas_professores to update
     */
    where?: disciplinas_professoresWhereInput
  }

  /**
   * disciplinas_professores upsert
   */
  export type disciplinas_professoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * The filter to search for the disciplinas_professores to update in case it exists.
     */
    where: disciplinas_professoresWhereUniqueInput
    /**
     * In case the disciplinas_professores found by the `where` argument doesn't exist, create a new disciplinas_professores with this data.
     */
    create: XOR<disciplinas_professoresCreateInput, disciplinas_professoresUncheckedCreateInput>
    /**
     * In case the disciplinas_professores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disciplinas_professoresUpdateInput, disciplinas_professoresUncheckedUpdateInput>
  }

  /**
   * disciplinas_professores delete
   */
  export type disciplinas_professoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    /**
     * Filter which disciplinas_professores to delete.
     */
    where: disciplinas_professoresWhereUniqueInput
  }

  /**
   * disciplinas_professores deleteMany
   */
  export type disciplinas_professoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas_professores to delete
     */
    where?: disciplinas_professoresWhereInput
  }

  /**
   * disciplinas_professores without action
   */
  export type disciplinas_professoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
  }


  /**
   * Model disciplinas_utilizadores
   */

  export type AggregateDisciplinas_utilizadores = {
    _count: Disciplinas_utilizadoresCountAggregateOutputType | null
    _avg: Disciplinas_utilizadoresAvgAggregateOutputType | null
    _sum: Disciplinas_utilizadoresSumAggregateOutputType | null
    _min: Disciplinas_utilizadoresMinAggregateOutputType | null
    _max: Disciplinas_utilizadoresMaxAggregateOutputType | null
  }

  export type Disciplinas_utilizadoresAvgAggregateOutputType = {
    id_disciplina: number | null
    id_utilizador: number | null
  }

  export type Disciplinas_utilizadoresSumAggregateOutputType = {
    id_disciplina: number | null
    id_utilizador: number | null
  }

  export type Disciplinas_utilizadoresMinAggregateOutputType = {
    id_disciplina: number | null
    id_utilizador: number | null
  }

  export type Disciplinas_utilizadoresMaxAggregateOutputType = {
    id_disciplina: number | null
    id_utilizador: number | null
  }

  export type Disciplinas_utilizadoresCountAggregateOutputType = {
    id_disciplina: number
    id_utilizador: number
    _all: number
  }


  export type Disciplinas_utilizadoresAvgAggregateInputType = {
    id_disciplina?: true
    id_utilizador?: true
  }

  export type Disciplinas_utilizadoresSumAggregateInputType = {
    id_disciplina?: true
    id_utilizador?: true
  }

  export type Disciplinas_utilizadoresMinAggregateInputType = {
    id_disciplina?: true
    id_utilizador?: true
  }

  export type Disciplinas_utilizadoresMaxAggregateInputType = {
    id_disciplina?: true
    id_utilizador?: true
  }

  export type Disciplinas_utilizadoresCountAggregateInputType = {
    id_disciplina?: true
    id_utilizador?: true
    _all?: true
  }

  export type Disciplinas_utilizadoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas_utilizadores to aggregate.
     */
    where?: disciplinas_utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_utilizadores to fetch.
     */
    orderBy?: disciplinas_utilizadoresOrderByWithRelationInput | disciplinas_utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: disciplinas_utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_utilizadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned disciplinas_utilizadores
    **/
    _count?: true | Disciplinas_utilizadoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Disciplinas_utilizadoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Disciplinas_utilizadoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Disciplinas_utilizadoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Disciplinas_utilizadoresMaxAggregateInputType
  }

  export type GetDisciplinas_utilizadoresAggregateType<T extends Disciplinas_utilizadoresAggregateArgs> = {
        [P in keyof T & keyof AggregateDisciplinas_utilizadores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisciplinas_utilizadores[P]>
      : GetScalarType<T[P], AggregateDisciplinas_utilizadores[P]>
  }




  export type disciplinas_utilizadoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: disciplinas_utilizadoresWhereInput
    orderBy?: disciplinas_utilizadoresOrderByWithAggregationInput | disciplinas_utilizadoresOrderByWithAggregationInput[]
    by: Disciplinas_utilizadoresScalarFieldEnum[] | Disciplinas_utilizadoresScalarFieldEnum
    having?: disciplinas_utilizadoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Disciplinas_utilizadoresCountAggregateInputType | true
    _avg?: Disciplinas_utilizadoresAvgAggregateInputType
    _sum?: Disciplinas_utilizadoresSumAggregateInputType
    _min?: Disciplinas_utilizadoresMinAggregateInputType
    _max?: Disciplinas_utilizadoresMaxAggregateInputType
  }

  export type Disciplinas_utilizadoresGroupByOutputType = {
    id_disciplina: number
    id_utilizador: number
    _count: Disciplinas_utilizadoresCountAggregateOutputType | null
    _avg: Disciplinas_utilizadoresAvgAggregateOutputType | null
    _sum: Disciplinas_utilizadoresSumAggregateOutputType | null
    _min: Disciplinas_utilizadoresMinAggregateOutputType | null
    _max: Disciplinas_utilizadoresMaxAggregateOutputType | null
  }

  type GetDisciplinas_utilizadoresGroupByPayload<T extends disciplinas_utilizadoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Disciplinas_utilizadoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Disciplinas_utilizadoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Disciplinas_utilizadoresGroupByOutputType[P]>
            : GetScalarType<T[P], Disciplinas_utilizadoresGroupByOutputType[P]>
        }
      >
    >


  export type disciplinas_utilizadoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_disciplina?: boolean
    id_utilizador?: boolean
    disciplinas?: boolean | disciplinasDefaultArgs<ExtArgs>
    utilizadores?: boolean | utilizadoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disciplinas_utilizadores"]>

  export type disciplinas_utilizadoresSelectScalar = {
    id_disciplina?: boolean
    id_utilizador?: boolean
  }


  export type disciplinas_utilizadoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas?: boolean | disciplinasDefaultArgs<ExtArgs>
    utilizadores?: boolean | utilizadoresDefaultArgs<ExtArgs>
  }


  export type $disciplinas_utilizadoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "disciplinas_utilizadores"
    objects: {
      disciplinas: Prisma.$disciplinasPayload<ExtArgs>
      utilizadores: Prisma.$utilizadoresPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_disciplina: number
      id_utilizador: number
    }, ExtArgs["result"]["disciplinas_utilizadores"]>
    composites: {}
  }


  type disciplinas_utilizadoresGetPayload<S extends boolean | null | undefined | disciplinas_utilizadoresDefaultArgs> = $Result.GetResult<Prisma.$disciplinas_utilizadoresPayload, S>

  type disciplinas_utilizadoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<disciplinas_utilizadoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Disciplinas_utilizadoresCountAggregateInputType | true
    }

  export interface disciplinas_utilizadoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['disciplinas_utilizadores'], meta: { name: 'disciplinas_utilizadores' } }
    /**
     * Find zero or one Disciplinas_utilizadores that matches the filter.
     * @param {disciplinas_utilizadoresFindUniqueArgs} args - Arguments to find a Disciplinas_utilizadores
     * @example
     * // Get one Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends disciplinas_utilizadoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_utilizadoresFindUniqueArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Disciplinas_utilizadores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {disciplinas_utilizadoresFindUniqueOrThrowArgs} args - Arguments to find a Disciplinas_utilizadores
     * @example
     * // Get one Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends disciplinas_utilizadoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_utilizadoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Disciplinas_utilizadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_utilizadoresFindFirstArgs} args - Arguments to find a Disciplinas_utilizadores
     * @example
     * // Get one Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends disciplinas_utilizadoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_utilizadoresFindFirstArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Disciplinas_utilizadores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_utilizadoresFindFirstOrThrowArgs} args - Arguments to find a Disciplinas_utilizadores
     * @example
     * // Get one Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends disciplinas_utilizadoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_utilizadoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Disciplinas_utilizadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_utilizadoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findMany()
     * 
     * // Get first 10 Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.findMany({ take: 10 })
     * 
     * // Only select the `id_disciplina`
     * const disciplinas_utilizadoresWithId_disciplinaOnly = await prisma.disciplinas_utilizadores.findMany({ select: { id_disciplina: true } })
     * 
    **/
    findMany<T extends disciplinas_utilizadoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_utilizadoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Disciplinas_utilizadores.
     * @param {disciplinas_utilizadoresCreateArgs} args - Arguments to create a Disciplinas_utilizadores.
     * @example
     * // Create one Disciplinas_utilizadores
     * const Disciplinas_utilizadores = await prisma.disciplinas_utilizadores.create({
     *   data: {
     *     // ... data to create a Disciplinas_utilizadores
     *   }
     * })
     * 
    **/
    create<T extends disciplinas_utilizadoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_utilizadoresCreateArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Disciplinas_utilizadores.
     * @param {disciplinas_utilizadoresCreateManyArgs} args - Arguments to create many Disciplinas_utilizadores.
     * @example
     * // Create many Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends disciplinas_utilizadoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_utilizadoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Disciplinas_utilizadores.
     * @param {disciplinas_utilizadoresDeleteArgs} args - Arguments to delete one Disciplinas_utilizadores.
     * @example
     * // Delete one Disciplinas_utilizadores
     * const Disciplinas_utilizadores = await prisma.disciplinas_utilizadores.delete({
     *   where: {
     *     // ... filter to delete one Disciplinas_utilizadores
     *   }
     * })
     * 
    **/
    delete<T extends disciplinas_utilizadoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_utilizadoresDeleteArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Disciplinas_utilizadores.
     * @param {disciplinas_utilizadoresUpdateArgs} args - Arguments to update one Disciplinas_utilizadores.
     * @example
     * // Update one Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends disciplinas_utilizadoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_utilizadoresUpdateArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Disciplinas_utilizadores.
     * @param {disciplinas_utilizadoresDeleteManyArgs} args - Arguments to filter Disciplinas_utilizadores to delete.
     * @example
     * // Delete a few Disciplinas_utilizadores
     * const { count } = await prisma.disciplinas_utilizadores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends disciplinas_utilizadoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, disciplinas_utilizadoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disciplinas_utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_utilizadoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends disciplinas_utilizadoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_utilizadoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Disciplinas_utilizadores.
     * @param {disciplinas_utilizadoresUpsertArgs} args - Arguments to update or create a Disciplinas_utilizadores.
     * @example
     * // Update or create a Disciplinas_utilizadores
     * const disciplinas_utilizadores = await prisma.disciplinas_utilizadores.upsert({
     *   create: {
     *     // ... data to create a Disciplinas_utilizadores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disciplinas_utilizadores we want to update
     *   }
     * })
    **/
    upsert<T extends disciplinas_utilizadoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, disciplinas_utilizadoresUpsertArgs<ExtArgs>>
    ): Prisma__disciplinas_utilizadoresClient<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Disciplinas_utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_utilizadoresCountArgs} args - Arguments to filter Disciplinas_utilizadores to count.
     * @example
     * // Count the number of Disciplinas_utilizadores
     * const count = await prisma.disciplinas_utilizadores.count({
     *   where: {
     *     // ... the filter for the Disciplinas_utilizadores we want to count
     *   }
     * })
    **/
    count<T extends disciplinas_utilizadoresCountArgs>(
      args?: Subset<T, disciplinas_utilizadoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Disciplinas_utilizadoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disciplinas_utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Disciplinas_utilizadoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Disciplinas_utilizadoresAggregateArgs>(args: Subset<T, Disciplinas_utilizadoresAggregateArgs>): Prisma.PrismaPromise<GetDisciplinas_utilizadoresAggregateType<T>>

    /**
     * Group by Disciplinas_utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {disciplinas_utilizadoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends disciplinas_utilizadoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: disciplinas_utilizadoresGroupByArgs['orderBy'] }
        : { orderBy?: disciplinas_utilizadoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, disciplinas_utilizadoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisciplinas_utilizadoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the disciplinas_utilizadores model
   */
  readonly fields: disciplinas_utilizadoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for disciplinas_utilizadores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__disciplinas_utilizadoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    disciplinas<T extends disciplinasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, disciplinasDefaultArgs<ExtArgs>>): Prisma__disciplinasClient<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    utilizadores<T extends utilizadoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, utilizadoresDefaultArgs<ExtArgs>>): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the disciplinas_utilizadores model
   */ 
  interface disciplinas_utilizadoresFieldRefs {
    readonly id_disciplina: FieldRef<"disciplinas_utilizadores", 'Int'>
    readonly id_utilizador: FieldRef<"disciplinas_utilizadores", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * disciplinas_utilizadores findUnique
   */
  export type disciplinas_utilizadoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_utilizadores to fetch.
     */
    where: disciplinas_utilizadoresWhereUniqueInput
  }

  /**
   * disciplinas_utilizadores findUniqueOrThrow
   */
  export type disciplinas_utilizadoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_utilizadores to fetch.
     */
    where: disciplinas_utilizadoresWhereUniqueInput
  }

  /**
   * disciplinas_utilizadores findFirst
   */
  export type disciplinas_utilizadoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_utilizadores to fetch.
     */
    where?: disciplinas_utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_utilizadores to fetch.
     */
    orderBy?: disciplinas_utilizadoresOrderByWithRelationInput | disciplinas_utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas_utilizadores.
     */
    cursor?: disciplinas_utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_utilizadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas_utilizadores.
     */
    distinct?: Disciplinas_utilizadoresScalarFieldEnum | Disciplinas_utilizadoresScalarFieldEnum[]
  }

  /**
   * disciplinas_utilizadores findFirstOrThrow
   */
  export type disciplinas_utilizadoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_utilizadores to fetch.
     */
    where?: disciplinas_utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_utilizadores to fetch.
     */
    orderBy?: disciplinas_utilizadoresOrderByWithRelationInput | disciplinas_utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for disciplinas_utilizadores.
     */
    cursor?: disciplinas_utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_utilizadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of disciplinas_utilizadores.
     */
    distinct?: Disciplinas_utilizadoresScalarFieldEnum | Disciplinas_utilizadoresScalarFieldEnum[]
  }

  /**
   * disciplinas_utilizadores findMany
   */
  export type disciplinas_utilizadoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which disciplinas_utilizadores to fetch.
     */
    where?: disciplinas_utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of disciplinas_utilizadores to fetch.
     */
    orderBy?: disciplinas_utilizadoresOrderByWithRelationInput | disciplinas_utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing disciplinas_utilizadores.
     */
    cursor?: disciplinas_utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` disciplinas_utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` disciplinas_utilizadores.
     */
    skip?: number
    distinct?: Disciplinas_utilizadoresScalarFieldEnum | Disciplinas_utilizadoresScalarFieldEnum[]
  }

  /**
   * disciplinas_utilizadores create
   */
  export type disciplinas_utilizadoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * The data needed to create a disciplinas_utilizadores.
     */
    data: XOR<disciplinas_utilizadoresCreateInput, disciplinas_utilizadoresUncheckedCreateInput>
  }

  /**
   * disciplinas_utilizadores createMany
   */
  export type disciplinas_utilizadoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many disciplinas_utilizadores.
     */
    data: disciplinas_utilizadoresCreateManyInput | disciplinas_utilizadoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * disciplinas_utilizadores update
   */
  export type disciplinas_utilizadoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * The data needed to update a disciplinas_utilizadores.
     */
    data: XOR<disciplinas_utilizadoresUpdateInput, disciplinas_utilizadoresUncheckedUpdateInput>
    /**
     * Choose, which disciplinas_utilizadores to update.
     */
    where: disciplinas_utilizadoresWhereUniqueInput
  }

  /**
   * disciplinas_utilizadores updateMany
   */
  export type disciplinas_utilizadoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update disciplinas_utilizadores.
     */
    data: XOR<disciplinas_utilizadoresUpdateManyMutationInput, disciplinas_utilizadoresUncheckedUpdateManyInput>
    /**
     * Filter which disciplinas_utilizadores to update
     */
    where?: disciplinas_utilizadoresWhereInput
  }

  /**
   * disciplinas_utilizadores upsert
   */
  export type disciplinas_utilizadoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * The filter to search for the disciplinas_utilizadores to update in case it exists.
     */
    where: disciplinas_utilizadoresWhereUniqueInput
    /**
     * In case the disciplinas_utilizadores found by the `where` argument doesn't exist, create a new disciplinas_utilizadores with this data.
     */
    create: XOR<disciplinas_utilizadoresCreateInput, disciplinas_utilizadoresUncheckedCreateInput>
    /**
     * In case the disciplinas_utilizadores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<disciplinas_utilizadoresUpdateInput, disciplinas_utilizadoresUncheckedUpdateInput>
  }

  /**
   * disciplinas_utilizadores delete
   */
  export type disciplinas_utilizadoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    /**
     * Filter which disciplinas_utilizadores to delete.
     */
    where: disciplinas_utilizadoresWhereUniqueInput
  }

  /**
   * disciplinas_utilizadores deleteMany
   */
  export type disciplinas_utilizadoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which disciplinas_utilizadores to delete
     */
    where?: disciplinas_utilizadoresWhereInput
  }

  /**
   * disciplinas_utilizadores without action
   */
  export type disciplinas_utilizadoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
  }


  /**
   * Model horarios
   */

  export type AggregateHorarios = {
    _count: HorariosCountAggregateOutputType | null
    _avg: HorariosAvgAggregateOutputType | null
    _sum: HorariosSumAggregateOutputType | null
    _min: HorariosMinAggregateOutputType | null
    _max: HorariosMaxAggregateOutputType | null
  }

  export type HorariosAvgAggregateOutputType = {
    id_horario: number | null
    id_utilizador: number | null
    id_sala: number | null
  }

  export type HorariosSumAggregateOutputType = {
    id_horario: number | null
    id_utilizador: number | null
    id_sala: number | null
  }

  export type HorariosMinAggregateOutputType = {
    id_horario: number | null
    Data_inicio: Date | null
    Data_fim: Date | null
    id_utilizador: number | null
    id_sala: number | null
  }

  export type HorariosMaxAggregateOutputType = {
    id_horario: number | null
    Data_inicio: Date | null
    Data_fim: Date | null
    id_utilizador: number | null
    id_sala: number | null
  }

  export type HorariosCountAggregateOutputType = {
    id_horario: number
    Data_inicio: number
    Data_fim: number
    id_utilizador: number
    id_sala: number
    _all: number
  }


  export type HorariosAvgAggregateInputType = {
    id_horario?: true
    id_utilizador?: true
    id_sala?: true
  }

  export type HorariosSumAggregateInputType = {
    id_horario?: true
    id_utilizador?: true
    id_sala?: true
  }

  export type HorariosMinAggregateInputType = {
    id_horario?: true
    Data_inicio?: true
    Data_fim?: true
    id_utilizador?: true
    id_sala?: true
  }

  export type HorariosMaxAggregateInputType = {
    id_horario?: true
    Data_inicio?: true
    Data_fim?: true
    id_utilizador?: true
    id_sala?: true
  }

  export type HorariosCountAggregateInputType = {
    id_horario?: true
    Data_inicio?: true
    Data_fim?: true
    id_utilizador?: true
    id_sala?: true
    _all?: true
  }

  export type HorariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which horarios to aggregate.
     */
    where?: horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of horarios to fetch.
     */
    orderBy?: horariosOrderByWithRelationInput | horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned horarios
    **/
    _count?: true | HorariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HorariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HorariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HorariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HorariosMaxAggregateInputType
  }

  export type GetHorariosAggregateType<T extends HorariosAggregateArgs> = {
        [P in keyof T & keyof AggregateHorarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHorarios[P]>
      : GetScalarType<T[P], AggregateHorarios[P]>
  }




  export type horariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: horariosWhereInput
    orderBy?: horariosOrderByWithAggregationInput | horariosOrderByWithAggregationInput[]
    by: HorariosScalarFieldEnum[] | HorariosScalarFieldEnum
    having?: horariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HorariosCountAggregateInputType | true
    _avg?: HorariosAvgAggregateInputType
    _sum?: HorariosSumAggregateInputType
    _min?: HorariosMinAggregateInputType
    _max?: HorariosMaxAggregateInputType
  }

  export type HorariosGroupByOutputType = {
    id_horario: number
    Data_inicio: Date | null
    Data_fim: Date | null
    id_utilizador: number | null
    id_sala: number | null
    _count: HorariosCountAggregateOutputType | null
    _avg: HorariosAvgAggregateOutputType | null
    _sum: HorariosSumAggregateOutputType | null
    _min: HorariosMinAggregateOutputType | null
    _max: HorariosMaxAggregateOutputType | null
  }

  type GetHorariosGroupByPayload<T extends horariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HorariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HorariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HorariosGroupByOutputType[P]>
            : GetScalarType<T[P], HorariosGroupByOutputType[P]>
        }
      >
    >


  export type horariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_horario?: boolean
    Data_inicio?: boolean
    Data_fim?: boolean
    id_utilizador?: boolean
    id_sala?: boolean
    disciplinas_horarios?: boolean | horarios$disciplinas_horariosArgs<ExtArgs>
    utilizadores?: boolean | horarios$utilizadoresArgs<ExtArgs>
    salas?: boolean | horarios$salasArgs<ExtArgs>
    salas_horarios?: boolean | horarios$salas_horariosArgs<ExtArgs>
    _count?: boolean | HorariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["horarios"]>

  export type horariosSelectScalar = {
    id_horario?: boolean
    Data_inicio?: boolean
    Data_fim?: boolean
    id_utilizador?: boolean
    id_sala?: boolean
  }


  export type horariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas_horarios?: boolean | horarios$disciplinas_horariosArgs<ExtArgs>
    utilizadores?: boolean | horarios$utilizadoresArgs<ExtArgs>
    salas?: boolean | horarios$salasArgs<ExtArgs>
    salas_horarios?: boolean | horarios$salas_horariosArgs<ExtArgs>
    _count?: boolean | HorariosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $horariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "horarios"
    objects: {
      disciplinas_horarios: Prisma.$disciplinas_horariosPayload<ExtArgs>[]
      utilizadores: Prisma.$utilizadoresPayload<ExtArgs> | null
      salas: Prisma.$salasPayload<ExtArgs> | null
      salas_horarios: Prisma.$salas_horariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_horario: number
      Data_inicio: Date | null
      Data_fim: Date | null
      id_utilizador: number | null
      id_sala: number | null
    }, ExtArgs["result"]["horarios"]>
    composites: {}
  }


  type horariosGetPayload<S extends boolean | null | undefined | horariosDefaultArgs> = $Result.GetResult<Prisma.$horariosPayload, S>

  type horariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<horariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HorariosCountAggregateInputType | true
    }

  export interface horariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['horarios'], meta: { name: 'horarios' } }
    /**
     * Find zero or one Horarios that matches the filter.
     * @param {horariosFindUniqueArgs} args - Arguments to find a Horarios
     * @example
     * // Get one Horarios
     * const horarios = await prisma.horarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends horariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, horariosFindUniqueArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Horarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {horariosFindUniqueOrThrowArgs} args - Arguments to find a Horarios
     * @example
     * // Get one Horarios
     * const horarios = await prisma.horarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends horariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, horariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {horariosFindFirstArgs} args - Arguments to find a Horarios
     * @example
     * // Get one Horarios
     * const horarios = await prisma.horarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends horariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, horariosFindFirstArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Horarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {horariosFindFirstOrThrowArgs} args - Arguments to find a Horarios
     * @example
     * // Get one Horarios
     * const horarios = await prisma.horarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends horariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, horariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {horariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Horarios
     * const horarios = await prisma.horarios.findMany()
     * 
     * // Get first 10 Horarios
     * const horarios = await prisma.horarios.findMany({ take: 10 })
     * 
     * // Only select the `id_horario`
     * const horariosWithId_horarioOnly = await prisma.horarios.findMany({ select: { id_horario: true } })
     * 
    **/
    findMany<T extends horariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, horariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Horarios.
     * @param {horariosCreateArgs} args - Arguments to create a Horarios.
     * @example
     * // Create one Horarios
     * const Horarios = await prisma.horarios.create({
     *   data: {
     *     // ... data to create a Horarios
     *   }
     * })
     * 
    **/
    create<T extends horariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, horariosCreateArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Horarios.
     * @param {horariosCreateManyArgs} args - Arguments to create many Horarios.
     * @example
     * // Create many Horarios
     * const horarios = await prisma.horarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends horariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, horariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Horarios.
     * @param {horariosDeleteArgs} args - Arguments to delete one Horarios.
     * @example
     * // Delete one Horarios
     * const Horarios = await prisma.horarios.delete({
     *   where: {
     *     // ... filter to delete one Horarios
     *   }
     * })
     * 
    **/
    delete<T extends horariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, horariosDeleteArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Horarios.
     * @param {horariosUpdateArgs} args - Arguments to update one Horarios.
     * @example
     * // Update one Horarios
     * const horarios = await prisma.horarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends horariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, horariosUpdateArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Horarios.
     * @param {horariosDeleteManyArgs} args - Arguments to filter Horarios to delete.
     * @example
     * // Delete a few Horarios
     * const { count } = await prisma.horarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends horariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, horariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {horariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Horarios
     * const horarios = await prisma.horarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends horariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, horariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Horarios.
     * @param {horariosUpsertArgs} args - Arguments to update or create a Horarios.
     * @example
     * // Update or create a Horarios
     * const horarios = await prisma.horarios.upsert({
     *   create: {
     *     // ... data to create a Horarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Horarios we want to update
     *   }
     * })
    **/
    upsert<T extends horariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, horariosUpsertArgs<ExtArgs>>
    ): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {horariosCountArgs} args - Arguments to filter Horarios to count.
     * @example
     * // Count the number of Horarios
     * const count = await prisma.horarios.count({
     *   where: {
     *     // ... the filter for the Horarios we want to count
     *   }
     * })
    **/
    count<T extends horariosCountArgs>(
      args?: Subset<T, horariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HorariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HorariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HorariosAggregateArgs>(args: Subset<T, HorariosAggregateArgs>): Prisma.PrismaPromise<GetHorariosAggregateType<T>>

    /**
     * Group by Horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {horariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends horariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: horariosGroupByArgs['orderBy'] }
        : { orderBy?: horariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, horariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHorariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the horarios model
   */
  readonly fields: horariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for horarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__horariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    disciplinas_horarios<T extends horarios$disciplinas_horariosArgs<ExtArgs> = {}>(args?: Subset<T, horarios$disciplinas_horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_horariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    utilizadores<T extends horarios$utilizadoresArgs<ExtArgs> = {}>(args?: Subset<T, horarios$utilizadoresArgs<ExtArgs>>): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    salas<T extends horarios$salasArgs<ExtArgs> = {}>(args?: Subset<T, horarios$salasArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    salas_horarios<T extends horarios$salas_horariosArgs<ExtArgs> = {}>(args?: Subset<T, horarios$salas_horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the horarios model
   */ 
  interface horariosFieldRefs {
    readonly id_horario: FieldRef<"horarios", 'Int'>
    readonly Data_inicio: FieldRef<"horarios", 'DateTime'>
    readonly Data_fim: FieldRef<"horarios", 'DateTime'>
    readonly id_utilizador: FieldRef<"horarios", 'Int'>
    readonly id_sala: FieldRef<"horarios", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * horarios findUnique
   */
  export type horariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * Filter, which horarios to fetch.
     */
    where: horariosWhereUniqueInput
  }

  /**
   * horarios findUniqueOrThrow
   */
  export type horariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * Filter, which horarios to fetch.
     */
    where: horariosWhereUniqueInput
  }

  /**
   * horarios findFirst
   */
  export type horariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * Filter, which horarios to fetch.
     */
    where?: horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of horarios to fetch.
     */
    orderBy?: horariosOrderByWithRelationInput | horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for horarios.
     */
    cursor?: horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of horarios.
     */
    distinct?: HorariosScalarFieldEnum | HorariosScalarFieldEnum[]
  }

  /**
   * horarios findFirstOrThrow
   */
  export type horariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * Filter, which horarios to fetch.
     */
    where?: horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of horarios to fetch.
     */
    orderBy?: horariosOrderByWithRelationInput | horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for horarios.
     */
    cursor?: horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of horarios.
     */
    distinct?: HorariosScalarFieldEnum | HorariosScalarFieldEnum[]
  }

  /**
   * horarios findMany
   */
  export type horariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * Filter, which horarios to fetch.
     */
    where?: horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of horarios to fetch.
     */
    orderBy?: horariosOrderByWithRelationInput | horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing horarios.
     */
    cursor?: horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` horarios.
     */
    skip?: number
    distinct?: HorariosScalarFieldEnum | HorariosScalarFieldEnum[]
  }

  /**
   * horarios create
   */
  export type horariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * The data needed to create a horarios.
     */
    data: XOR<horariosCreateInput, horariosUncheckedCreateInput>
  }

  /**
   * horarios createMany
   */
  export type horariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many horarios.
     */
    data: horariosCreateManyInput | horariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * horarios update
   */
  export type horariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * The data needed to update a horarios.
     */
    data: XOR<horariosUpdateInput, horariosUncheckedUpdateInput>
    /**
     * Choose, which horarios to update.
     */
    where: horariosWhereUniqueInput
  }

  /**
   * horarios updateMany
   */
  export type horariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update horarios.
     */
    data: XOR<horariosUpdateManyMutationInput, horariosUncheckedUpdateManyInput>
    /**
     * Filter which horarios to update
     */
    where?: horariosWhereInput
  }

  /**
   * horarios upsert
   */
  export type horariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * The filter to search for the horarios to update in case it exists.
     */
    where: horariosWhereUniqueInput
    /**
     * In case the horarios found by the `where` argument doesn't exist, create a new horarios with this data.
     */
    create: XOR<horariosCreateInput, horariosUncheckedCreateInput>
    /**
     * In case the horarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<horariosUpdateInput, horariosUncheckedUpdateInput>
  }

  /**
   * horarios delete
   */
  export type horariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    /**
     * Filter which horarios to delete.
     */
    where: horariosWhereUniqueInput
  }

  /**
   * horarios deleteMany
   */
  export type horariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which horarios to delete
     */
    where?: horariosWhereInput
  }

  /**
   * horarios.disciplinas_horarios
   */
  export type horarios$disciplinas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_horarios
     */
    select?: disciplinas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_horariosInclude<ExtArgs> | null
    where?: disciplinas_horariosWhereInput
    orderBy?: disciplinas_horariosOrderByWithRelationInput | disciplinas_horariosOrderByWithRelationInput[]
    cursor?: disciplinas_horariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disciplinas_horariosScalarFieldEnum | Disciplinas_horariosScalarFieldEnum[]
  }

  /**
   * horarios.utilizadores
   */
  export type horarios$utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    where?: utilizadoresWhereInput
  }

  /**
   * horarios.salas
   */
  export type horarios$salasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    where?: salasWhereInput
  }

  /**
   * horarios.salas_horarios
   */
  export type horarios$salas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    where?: salas_horariosWhereInput
    orderBy?: salas_horariosOrderByWithRelationInput | salas_horariosOrderByWithRelationInput[]
    cursor?: salas_horariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Salas_horariosScalarFieldEnum | Salas_horariosScalarFieldEnum[]
  }

  /**
   * horarios without action
   */
  export type horariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
  }


  /**
   * Model professores
   */

  export type AggregateProfessores = {
    _count: ProfessoresCountAggregateOutputType | null
    _avg: ProfessoresAvgAggregateOutputType | null
    _sum: ProfessoresSumAggregateOutputType | null
    _min: ProfessoresMinAggregateOutputType | null
    _max: ProfessoresMaxAggregateOutputType | null
  }

  export type ProfessoresAvgAggregateOutputType = {
    id_professor: number | null
    Carga: number | null
  }

  export type ProfessoresSumAggregateOutputType = {
    id_professor: number | null
    Carga: number | null
  }

  export type ProfessoresMinAggregateOutputType = {
    id_professor: number | null
    Nome: string | null
    Email: string | null
    Carga: number | null
    Descricao: string | null
  }

  export type ProfessoresMaxAggregateOutputType = {
    id_professor: number | null
    Nome: string | null
    Email: string | null
    Carga: number | null
    Descricao: string | null
  }

  export type ProfessoresCountAggregateOutputType = {
    id_professor: number
    Nome: number
    Email: number
    Carga: number
    Descricao: number
    _all: number
  }


  export type ProfessoresAvgAggregateInputType = {
    id_professor?: true
    Carga?: true
  }

  export type ProfessoresSumAggregateInputType = {
    id_professor?: true
    Carga?: true
  }

  export type ProfessoresMinAggregateInputType = {
    id_professor?: true
    Nome?: true
    Email?: true
    Carga?: true
    Descricao?: true
  }

  export type ProfessoresMaxAggregateInputType = {
    id_professor?: true
    Nome?: true
    Email?: true
    Carga?: true
    Descricao?: true
  }

  export type ProfessoresCountAggregateInputType = {
    id_professor?: true
    Nome?: true
    Email?: true
    Carga?: true
    Descricao?: true
    _all?: true
  }

  export type ProfessoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which professores to aggregate.
     */
    where?: professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of professores to fetch.
     */
    orderBy?: professoresOrderByWithRelationInput | professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` professores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned professores
    **/
    _count?: true | ProfessoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfessoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfessoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfessoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfessoresMaxAggregateInputType
  }

  export type GetProfessoresAggregateType<T extends ProfessoresAggregateArgs> = {
        [P in keyof T & keyof AggregateProfessores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfessores[P]>
      : GetScalarType<T[P], AggregateProfessores[P]>
  }




  export type professoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: professoresWhereInput
    orderBy?: professoresOrderByWithAggregationInput | professoresOrderByWithAggregationInput[]
    by: ProfessoresScalarFieldEnum[] | ProfessoresScalarFieldEnum
    having?: professoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfessoresCountAggregateInputType | true
    _avg?: ProfessoresAvgAggregateInputType
    _sum?: ProfessoresSumAggregateInputType
    _min?: ProfessoresMinAggregateInputType
    _max?: ProfessoresMaxAggregateInputType
  }

  export type ProfessoresGroupByOutputType = {
    id_professor: number
    Nome: string | null
    Email: string | null
    Carga: number | null
    Descricao: string | null
    _count: ProfessoresCountAggregateOutputType | null
    _avg: ProfessoresAvgAggregateOutputType | null
    _sum: ProfessoresSumAggregateOutputType | null
    _min: ProfessoresMinAggregateOutputType | null
    _max: ProfessoresMaxAggregateOutputType | null
  }

  type GetProfessoresGroupByPayload<T extends professoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfessoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfessoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfessoresGroupByOutputType[P]>
            : GetScalarType<T[P], ProfessoresGroupByOutputType[P]>
        }
      >
    >


  export type professoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_professor?: boolean
    Nome?: boolean
    Email?: boolean
    Carga?: boolean
    Descricao?: boolean
    disciplinas?: boolean | professores$disciplinasArgs<ExtArgs>
    disciplinas_professores?: boolean | professores$disciplinas_professoresArgs<ExtArgs>
    _count?: boolean | ProfessoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["professores"]>

  export type professoresSelectScalar = {
    id_professor?: boolean
    Nome?: boolean
    Email?: boolean
    Carga?: boolean
    Descricao?: boolean
  }


  export type professoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas?: boolean | professores$disciplinasArgs<ExtArgs>
    disciplinas_professores?: boolean | professores$disciplinas_professoresArgs<ExtArgs>
    _count?: boolean | ProfessoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $professoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "professores"
    objects: {
      disciplinas: Prisma.$disciplinasPayload<ExtArgs>[]
      disciplinas_professores: Prisma.$disciplinas_professoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_professor: number
      Nome: string | null
      Email: string | null
      Carga: number | null
      Descricao: string | null
    }, ExtArgs["result"]["professores"]>
    composites: {}
  }


  type professoresGetPayload<S extends boolean | null | undefined | professoresDefaultArgs> = $Result.GetResult<Prisma.$professoresPayload, S>

  type professoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<professoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProfessoresCountAggregateInputType | true
    }

  export interface professoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['professores'], meta: { name: 'professores' } }
    /**
     * Find zero or one Professores that matches the filter.
     * @param {professoresFindUniqueArgs} args - Arguments to find a Professores
     * @example
     * // Get one Professores
     * const professores = await prisma.professores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends professoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, professoresFindUniqueArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Professores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {professoresFindUniqueOrThrowArgs} args - Arguments to find a Professores
     * @example
     * // Get one Professores
     * const professores = await prisma.professores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends professoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, professoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Professores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {professoresFindFirstArgs} args - Arguments to find a Professores
     * @example
     * // Get one Professores
     * const professores = await prisma.professores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends professoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, professoresFindFirstArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Professores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {professoresFindFirstOrThrowArgs} args - Arguments to find a Professores
     * @example
     * // Get one Professores
     * const professores = await prisma.professores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends professoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, professoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Professores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {professoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Professores
     * const professores = await prisma.professores.findMany()
     * 
     * // Get first 10 Professores
     * const professores = await prisma.professores.findMany({ take: 10 })
     * 
     * // Only select the `id_professor`
     * const professoresWithId_professorOnly = await prisma.professores.findMany({ select: { id_professor: true } })
     * 
    **/
    findMany<T extends professoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, professoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Professores.
     * @param {professoresCreateArgs} args - Arguments to create a Professores.
     * @example
     * // Create one Professores
     * const Professores = await prisma.professores.create({
     *   data: {
     *     // ... data to create a Professores
     *   }
     * })
     * 
    **/
    create<T extends professoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, professoresCreateArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Professores.
     * @param {professoresCreateManyArgs} args - Arguments to create many Professores.
     * @example
     * // Create many Professores
     * const professores = await prisma.professores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends professoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, professoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Professores.
     * @param {professoresDeleteArgs} args - Arguments to delete one Professores.
     * @example
     * // Delete one Professores
     * const Professores = await prisma.professores.delete({
     *   where: {
     *     // ... filter to delete one Professores
     *   }
     * })
     * 
    **/
    delete<T extends professoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, professoresDeleteArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Professores.
     * @param {professoresUpdateArgs} args - Arguments to update one Professores.
     * @example
     * // Update one Professores
     * const professores = await prisma.professores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends professoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, professoresUpdateArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Professores.
     * @param {professoresDeleteManyArgs} args - Arguments to filter Professores to delete.
     * @example
     * // Delete a few Professores
     * const { count } = await prisma.professores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends professoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, professoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {professoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Professores
     * const professores = await prisma.professores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends professoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, professoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Professores.
     * @param {professoresUpsertArgs} args - Arguments to update or create a Professores.
     * @example
     * // Update or create a Professores
     * const professores = await prisma.professores.upsert({
     *   create: {
     *     // ... data to create a Professores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Professores we want to update
     *   }
     * })
    **/
    upsert<T extends professoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, professoresUpsertArgs<ExtArgs>>
    ): Prisma__professoresClient<$Result.GetResult<Prisma.$professoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {professoresCountArgs} args - Arguments to filter Professores to count.
     * @example
     * // Count the number of Professores
     * const count = await prisma.professores.count({
     *   where: {
     *     // ... the filter for the Professores we want to count
     *   }
     * })
    **/
    count<T extends professoresCountArgs>(
      args?: Subset<T, professoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfessoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfessoresAggregateArgs>(args: Subset<T, ProfessoresAggregateArgs>): Prisma.PrismaPromise<GetProfessoresAggregateType<T>>

    /**
     * Group by Professores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {professoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends professoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: professoresGroupByArgs['orderBy'] }
        : { orderBy?: professoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, professoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfessoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the professores model
   */
  readonly fields: professoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for professores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__professoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    disciplinas<T extends professores$disciplinasArgs<ExtArgs> = {}>(args?: Subset<T, professores$disciplinasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinasPayload<ExtArgs>, T, 'findMany'> | Null>;

    disciplinas_professores<T extends professores$disciplinas_professoresArgs<ExtArgs> = {}>(args?: Subset<T, professores$disciplinas_professoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_professoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the professores model
   */ 
  interface professoresFieldRefs {
    readonly id_professor: FieldRef<"professores", 'Int'>
    readonly Nome: FieldRef<"professores", 'String'>
    readonly Email: FieldRef<"professores", 'String'>
    readonly Carga: FieldRef<"professores", 'Int'>
    readonly Descricao: FieldRef<"professores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * professores findUnique
   */
  export type professoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * Filter, which professores to fetch.
     */
    where: professoresWhereUniqueInput
  }

  /**
   * professores findUniqueOrThrow
   */
  export type professoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * Filter, which professores to fetch.
     */
    where: professoresWhereUniqueInput
  }

  /**
   * professores findFirst
   */
  export type professoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * Filter, which professores to fetch.
     */
    where?: professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of professores to fetch.
     */
    orderBy?: professoresOrderByWithRelationInput | professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for professores.
     */
    cursor?: professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` professores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of professores.
     */
    distinct?: ProfessoresScalarFieldEnum | ProfessoresScalarFieldEnum[]
  }

  /**
   * professores findFirstOrThrow
   */
  export type professoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * Filter, which professores to fetch.
     */
    where?: professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of professores to fetch.
     */
    orderBy?: professoresOrderByWithRelationInput | professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for professores.
     */
    cursor?: professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` professores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of professores.
     */
    distinct?: ProfessoresScalarFieldEnum | ProfessoresScalarFieldEnum[]
  }

  /**
   * professores findMany
   */
  export type professoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * Filter, which professores to fetch.
     */
    where?: professoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of professores to fetch.
     */
    orderBy?: professoresOrderByWithRelationInput | professoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing professores.
     */
    cursor?: professoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` professores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` professores.
     */
    skip?: number
    distinct?: ProfessoresScalarFieldEnum | ProfessoresScalarFieldEnum[]
  }

  /**
   * professores create
   */
  export type professoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * The data needed to create a professores.
     */
    data: XOR<professoresCreateInput, professoresUncheckedCreateInput>
  }

  /**
   * professores createMany
   */
  export type professoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many professores.
     */
    data: professoresCreateManyInput | professoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * professores update
   */
  export type professoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * The data needed to update a professores.
     */
    data: XOR<professoresUpdateInput, professoresUncheckedUpdateInput>
    /**
     * Choose, which professores to update.
     */
    where: professoresWhereUniqueInput
  }

  /**
   * professores updateMany
   */
  export type professoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update professores.
     */
    data: XOR<professoresUpdateManyMutationInput, professoresUncheckedUpdateManyInput>
    /**
     * Filter which professores to update
     */
    where?: professoresWhereInput
  }

  /**
   * professores upsert
   */
  export type professoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * The filter to search for the professores to update in case it exists.
     */
    where: professoresWhereUniqueInput
    /**
     * In case the professores found by the `where` argument doesn't exist, create a new professores with this data.
     */
    create: XOR<professoresCreateInput, professoresUncheckedCreateInput>
    /**
     * In case the professores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<professoresUpdateInput, professoresUncheckedUpdateInput>
  }

  /**
   * professores delete
   */
  export type professoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
    /**
     * Filter which professores to delete.
     */
    where: professoresWhereUniqueInput
  }

  /**
   * professores deleteMany
   */
  export type professoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which professores to delete
     */
    where?: professoresWhereInput
  }

  /**
   * professores.disciplinas
   */
  export type professores$disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas
     */
    select?: disciplinasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinasInclude<ExtArgs> | null
    where?: disciplinasWhereInput
    orderBy?: disciplinasOrderByWithRelationInput | disciplinasOrderByWithRelationInput[]
    cursor?: disciplinasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisciplinasScalarFieldEnum | DisciplinasScalarFieldEnum[]
  }

  /**
   * professores.disciplinas_professores
   */
  export type professores$disciplinas_professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_professores
     */
    select?: disciplinas_professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_professoresInclude<ExtArgs> | null
    where?: disciplinas_professoresWhereInput
    orderBy?: disciplinas_professoresOrderByWithRelationInput | disciplinas_professoresOrderByWithRelationInput[]
    cursor?: disciplinas_professoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disciplinas_professoresScalarFieldEnum | Disciplinas_professoresScalarFieldEnum[]
  }

  /**
   * professores without action
   */
  export type professoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the professores
     */
    select?: professoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: professoresInclude<ExtArgs> | null
  }


  /**
   * Model salas
   */

  export type AggregateSalas = {
    _count: SalasCountAggregateOutputType | null
    _avg: SalasAvgAggregateOutputType | null
    _sum: SalasSumAggregateOutputType | null
    _min: SalasMinAggregateOutputType | null
    _max: SalasMaxAggregateOutputType | null
  }

  export type SalasAvgAggregateOutputType = {
    id_sala: number | null
  }

  export type SalasSumAggregateOutputType = {
    id_sala: number | null
  }

  export type SalasMinAggregateOutputType = {
    id_sala: number | null
    Detalhe: string | null
  }

  export type SalasMaxAggregateOutputType = {
    id_sala: number | null
    Detalhe: string | null
  }

  export type SalasCountAggregateOutputType = {
    id_sala: number
    Detalhe: number
    _all: number
  }


  export type SalasAvgAggregateInputType = {
    id_sala?: true
  }

  export type SalasSumAggregateInputType = {
    id_sala?: true
  }

  export type SalasMinAggregateInputType = {
    id_sala?: true
    Detalhe?: true
  }

  export type SalasMaxAggregateInputType = {
    id_sala?: true
    Detalhe?: true
  }

  export type SalasCountAggregateInputType = {
    id_sala?: true
    Detalhe?: true
    _all?: true
  }

  export type SalasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas to aggregate.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned salas
    **/
    _count?: true | SalasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalasMaxAggregateInputType
  }

  export type GetSalasAggregateType<T extends SalasAggregateArgs> = {
        [P in keyof T & keyof AggregateSalas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalas[P]>
      : GetScalarType<T[P], AggregateSalas[P]>
  }




  export type salasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salasWhereInput
    orderBy?: salasOrderByWithAggregationInput | salasOrderByWithAggregationInput[]
    by: SalasScalarFieldEnum[] | SalasScalarFieldEnum
    having?: salasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalasCountAggregateInputType | true
    _avg?: SalasAvgAggregateInputType
    _sum?: SalasSumAggregateInputType
    _min?: SalasMinAggregateInputType
    _max?: SalasMaxAggregateInputType
  }

  export type SalasGroupByOutputType = {
    id_sala: number
    Detalhe: string | null
    _count: SalasCountAggregateOutputType | null
    _avg: SalasAvgAggregateOutputType | null
    _sum: SalasSumAggregateOutputType | null
    _min: SalasMinAggregateOutputType | null
    _max: SalasMaxAggregateOutputType | null
  }

  type GetSalasGroupByPayload<T extends salasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalasGroupByOutputType[P]>
            : GetScalarType<T[P], SalasGroupByOutputType[P]>
        }
      >
    >


  export type salasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sala?: boolean
    Detalhe?: boolean
    horarios?: boolean | salas$horariosArgs<ExtArgs>
    salas_horarios?: boolean | salas$salas_horariosArgs<ExtArgs>
    _count?: boolean | SalasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salas"]>

  export type salasSelectScalar = {
    id_sala?: boolean
    Detalhe?: boolean
  }


  export type salasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    horarios?: boolean | salas$horariosArgs<ExtArgs>
    salas_horarios?: boolean | salas$salas_horariosArgs<ExtArgs>
    _count?: boolean | SalasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $salasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "salas"
    objects: {
      horarios: Prisma.$horariosPayload<ExtArgs>[]
      salas_horarios: Prisma.$salas_horariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sala: number
      Detalhe: string | null
    }, ExtArgs["result"]["salas"]>
    composites: {}
  }


  type salasGetPayload<S extends boolean | null | undefined | salasDefaultArgs> = $Result.GetResult<Prisma.$salasPayload, S>

  type salasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<salasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SalasCountAggregateInputType | true
    }

  export interface salasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['salas'], meta: { name: 'salas' } }
    /**
     * Find zero or one Salas that matches the filter.
     * @param {salasFindUniqueArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends salasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, salasFindUniqueArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Salas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {salasFindUniqueOrThrowArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends salasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, salasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Salas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasFindFirstArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends salasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, salasFindFirstArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Salas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasFindFirstOrThrowArgs} args - Arguments to find a Salas
     * @example
     * // Get one Salas
     * const salas = await prisma.salas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends salasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, salasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Salas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Salas
     * const salas = await prisma.salas.findMany()
     * 
     * // Get first 10 Salas
     * const salas = await prisma.salas.findMany({ take: 10 })
     * 
     * // Only select the `id_sala`
     * const salasWithId_salaOnly = await prisma.salas.findMany({ select: { id_sala: true } })
     * 
    **/
    findMany<T extends salasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, salasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Salas.
     * @param {salasCreateArgs} args - Arguments to create a Salas.
     * @example
     * // Create one Salas
     * const Salas = await prisma.salas.create({
     *   data: {
     *     // ... data to create a Salas
     *   }
     * })
     * 
    **/
    create<T extends salasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, salasCreateArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Salas.
     * @param {salasCreateManyArgs} args - Arguments to create many Salas.
     * @example
     * // Create many Salas
     * const salas = await prisma.salas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends salasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, salasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Salas.
     * @param {salasDeleteArgs} args - Arguments to delete one Salas.
     * @example
     * // Delete one Salas
     * const Salas = await prisma.salas.delete({
     *   where: {
     *     // ... filter to delete one Salas
     *   }
     * })
     * 
    **/
    delete<T extends salasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, salasDeleteArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Salas.
     * @param {salasUpdateArgs} args - Arguments to update one Salas.
     * @example
     * // Update one Salas
     * const salas = await prisma.salas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends salasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, salasUpdateArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Salas.
     * @param {salasDeleteManyArgs} args - Arguments to filter Salas to delete.
     * @example
     * // Delete a few Salas
     * const { count } = await prisma.salas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends salasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, salasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Salas
     * const salas = await prisma.salas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends salasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, salasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Salas.
     * @param {salasUpsertArgs} args - Arguments to update or create a Salas.
     * @example
     * // Update or create a Salas
     * const salas = await prisma.salas.upsert({
     *   create: {
     *     // ... data to create a Salas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Salas we want to update
     *   }
     * })
    **/
    upsert<T extends salasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, salasUpsertArgs<ExtArgs>>
    ): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasCountArgs} args - Arguments to filter Salas to count.
     * @example
     * // Count the number of Salas
     * const count = await prisma.salas.count({
     *   where: {
     *     // ... the filter for the Salas we want to count
     *   }
     * })
    **/
    count<T extends salasCountArgs>(
      args?: Subset<T, salasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalasAggregateArgs>(args: Subset<T, SalasAggregateArgs>): Prisma.PrismaPromise<GetSalasAggregateType<T>>

    /**
     * Group by Salas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends salasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: salasGroupByArgs['orderBy'] }
        : { orderBy?: salasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, salasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the salas model
   */
  readonly fields: salasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for salas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__salasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    horarios<T extends salas$horariosArgs<ExtArgs> = {}>(args?: Subset<T, salas$horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    salas_horarios<T extends salas$salas_horariosArgs<ExtArgs> = {}>(args?: Subset<T, salas$salas_horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the salas model
   */ 
  interface salasFieldRefs {
    readonly id_sala: FieldRef<"salas", 'Int'>
    readonly Detalhe: FieldRef<"salas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * salas findUnique
   */
  export type salasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas findUniqueOrThrow
   */
  export type salasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas findFirst
   */
  export type salasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas.
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas.
     */
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * salas findFirstOrThrow
   */
  export type salasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas.
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas.
     */
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * salas findMany
   */
  export type salasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter, which salas to fetch.
     */
    where?: salasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas to fetch.
     */
    orderBy?: salasOrderByWithRelationInput | salasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing salas.
     */
    cursor?: salasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas.
     */
    skip?: number
    distinct?: SalasScalarFieldEnum | SalasScalarFieldEnum[]
  }

  /**
   * salas create
   */
  export type salasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * The data needed to create a salas.
     */
    data: XOR<salasCreateInput, salasUncheckedCreateInput>
  }

  /**
   * salas createMany
   */
  export type salasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many salas.
     */
    data: salasCreateManyInput | salasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * salas update
   */
  export type salasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * The data needed to update a salas.
     */
    data: XOR<salasUpdateInput, salasUncheckedUpdateInput>
    /**
     * Choose, which salas to update.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas updateMany
   */
  export type salasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update salas.
     */
    data: XOR<salasUpdateManyMutationInput, salasUncheckedUpdateManyInput>
    /**
     * Filter which salas to update
     */
    where?: salasWhereInput
  }

  /**
   * salas upsert
   */
  export type salasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * The filter to search for the salas to update in case it exists.
     */
    where: salasWhereUniqueInput
    /**
     * In case the salas found by the `where` argument doesn't exist, create a new salas with this data.
     */
    create: XOR<salasCreateInput, salasUncheckedCreateInput>
    /**
     * In case the salas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<salasUpdateInput, salasUncheckedUpdateInput>
  }

  /**
   * salas delete
   */
  export type salasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
    /**
     * Filter which salas to delete.
     */
    where: salasWhereUniqueInput
  }

  /**
   * salas deleteMany
   */
  export type salasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas to delete
     */
    where?: salasWhereInput
  }

  /**
   * salas.horarios
   */
  export type salas$horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    where?: horariosWhereInput
    orderBy?: horariosOrderByWithRelationInput | horariosOrderByWithRelationInput[]
    cursor?: horariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorariosScalarFieldEnum | HorariosScalarFieldEnum[]
  }

  /**
   * salas.salas_horarios
   */
  export type salas$salas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    where?: salas_horariosWhereInput
    orderBy?: salas_horariosOrderByWithRelationInput | salas_horariosOrderByWithRelationInput[]
    cursor?: salas_horariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Salas_horariosScalarFieldEnum | Salas_horariosScalarFieldEnum[]
  }

  /**
   * salas without action
   */
  export type salasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas
     */
    select?: salasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salasInclude<ExtArgs> | null
  }


  /**
   * Model salas_horarios
   */

  export type AggregateSalas_horarios = {
    _count: Salas_horariosCountAggregateOutputType | null
    _avg: Salas_horariosAvgAggregateOutputType | null
    _sum: Salas_horariosSumAggregateOutputType | null
    _min: Salas_horariosMinAggregateOutputType | null
    _max: Salas_horariosMaxAggregateOutputType | null
  }

  export type Salas_horariosAvgAggregateOutputType = {
    id_sala: number | null
    id_horario: number | null
  }

  export type Salas_horariosSumAggregateOutputType = {
    id_sala: number | null
    id_horario: number | null
  }

  export type Salas_horariosMinAggregateOutputType = {
    id_sala: number | null
    id_horario: number | null
  }

  export type Salas_horariosMaxAggregateOutputType = {
    id_sala: number | null
    id_horario: number | null
  }

  export type Salas_horariosCountAggregateOutputType = {
    id_sala: number
    id_horario: number
    _all: number
  }


  export type Salas_horariosAvgAggregateInputType = {
    id_sala?: true
    id_horario?: true
  }

  export type Salas_horariosSumAggregateInputType = {
    id_sala?: true
    id_horario?: true
  }

  export type Salas_horariosMinAggregateInputType = {
    id_sala?: true
    id_horario?: true
  }

  export type Salas_horariosMaxAggregateInputType = {
    id_sala?: true
    id_horario?: true
  }

  export type Salas_horariosCountAggregateInputType = {
    id_sala?: true
    id_horario?: true
    _all?: true
  }

  export type Salas_horariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas_horarios to aggregate.
     */
    where?: salas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas_horarios to fetch.
     */
    orderBy?: salas_horariosOrderByWithRelationInput | salas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: salas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned salas_horarios
    **/
    _count?: true | Salas_horariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Salas_horariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Salas_horariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Salas_horariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Salas_horariosMaxAggregateInputType
  }

  export type GetSalas_horariosAggregateType<T extends Salas_horariosAggregateArgs> = {
        [P in keyof T & keyof AggregateSalas_horarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalas_horarios[P]>
      : GetScalarType<T[P], AggregateSalas_horarios[P]>
  }




  export type salas_horariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salas_horariosWhereInput
    orderBy?: salas_horariosOrderByWithAggregationInput | salas_horariosOrderByWithAggregationInput[]
    by: Salas_horariosScalarFieldEnum[] | Salas_horariosScalarFieldEnum
    having?: salas_horariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Salas_horariosCountAggregateInputType | true
    _avg?: Salas_horariosAvgAggregateInputType
    _sum?: Salas_horariosSumAggregateInputType
    _min?: Salas_horariosMinAggregateInputType
    _max?: Salas_horariosMaxAggregateInputType
  }

  export type Salas_horariosGroupByOutputType = {
    id_sala: number
    id_horario: number
    _count: Salas_horariosCountAggregateOutputType | null
    _avg: Salas_horariosAvgAggregateOutputType | null
    _sum: Salas_horariosSumAggregateOutputType | null
    _min: Salas_horariosMinAggregateOutputType | null
    _max: Salas_horariosMaxAggregateOutputType | null
  }

  type GetSalas_horariosGroupByPayload<T extends salas_horariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Salas_horariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Salas_horariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Salas_horariosGroupByOutputType[P]>
            : GetScalarType<T[P], Salas_horariosGroupByOutputType[P]>
        }
      >
    >


  export type salas_horariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sala?: boolean
    id_horario?: boolean
    salas?: boolean | salasDefaultArgs<ExtArgs>
    horarios?: boolean | horariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salas_horarios"]>

  export type salas_horariosSelectScalar = {
    id_sala?: boolean
    id_horario?: boolean
  }


  export type salas_horariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salas?: boolean | salasDefaultArgs<ExtArgs>
    horarios?: boolean | horariosDefaultArgs<ExtArgs>
  }


  export type $salas_horariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "salas_horarios"
    objects: {
      salas: Prisma.$salasPayload<ExtArgs>
      horarios: Prisma.$horariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sala: number
      id_horario: number
    }, ExtArgs["result"]["salas_horarios"]>
    composites: {}
  }


  type salas_horariosGetPayload<S extends boolean | null | undefined | salas_horariosDefaultArgs> = $Result.GetResult<Prisma.$salas_horariosPayload, S>

  type salas_horariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<salas_horariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Salas_horariosCountAggregateInputType | true
    }

  export interface salas_horariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['salas_horarios'], meta: { name: 'salas_horarios' } }
    /**
     * Find zero or one Salas_horarios that matches the filter.
     * @param {salas_horariosFindUniqueArgs} args - Arguments to find a Salas_horarios
     * @example
     * // Get one Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends salas_horariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, salas_horariosFindUniqueArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Salas_horarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {salas_horariosFindUniqueOrThrowArgs} args - Arguments to find a Salas_horarios
     * @example
     * // Get one Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends salas_horariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, salas_horariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Salas_horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salas_horariosFindFirstArgs} args - Arguments to find a Salas_horarios
     * @example
     * // Get one Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends salas_horariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, salas_horariosFindFirstArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Salas_horarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salas_horariosFindFirstOrThrowArgs} args - Arguments to find a Salas_horarios
     * @example
     * // Get one Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends salas_horariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, salas_horariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Salas_horarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salas_horariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.findMany()
     * 
     * // Get first 10 Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.findMany({ take: 10 })
     * 
     * // Only select the `id_sala`
     * const salas_horariosWithId_salaOnly = await prisma.salas_horarios.findMany({ select: { id_sala: true } })
     * 
    **/
    findMany<T extends salas_horariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, salas_horariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Salas_horarios.
     * @param {salas_horariosCreateArgs} args - Arguments to create a Salas_horarios.
     * @example
     * // Create one Salas_horarios
     * const Salas_horarios = await prisma.salas_horarios.create({
     *   data: {
     *     // ... data to create a Salas_horarios
     *   }
     * })
     * 
    **/
    create<T extends salas_horariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, salas_horariosCreateArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Salas_horarios.
     * @param {salas_horariosCreateManyArgs} args - Arguments to create many Salas_horarios.
     * @example
     * // Create many Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends salas_horariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, salas_horariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Salas_horarios.
     * @param {salas_horariosDeleteArgs} args - Arguments to delete one Salas_horarios.
     * @example
     * // Delete one Salas_horarios
     * const Salas_horarios = await prisma.salas_horarios.delete({
     *   where: {
     *     // ... filter to delete one Salas_horarios
     *   }
     * })
     * 
    **/
    delete<T extends salas_horariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, salas_horariosDeleteArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Salas_horarios.
     * @param {salas_horariosUpdateArgs} args - Arguments to update one Salas_horarios.
     * @example
     * // Update one Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends salas_horariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, salas_horariosUpdateArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Salas_horarios.
     * @param {salas_horariosDeleteManyArgs} args - Arguments to filter Salas_horarios to delete.
     * @example
     * // Delete a few Salas_horarios
     * const { count } = await prisma.salas_horarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends salas_horariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, salas_horariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salas_horariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends salas_horariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, salas_horariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Salas_horarios.
     * @param {salas_horariosUpsertArgs} args - Arguments to update or create a Salas_horarios.
     * @example
     * // Update or create a Salas_horarios
     * const salas_horarios = await prisma.salas_horarios.upsert({
     *   create: {
     *     // ... data to create a Salas_horarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Salas_horarios we want to update
     *   }
     * })
    **/
    upsert<T extends salas_horariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, salas_horariosUpsertArgs<ExtArgs>>
    ): Prisma__salas_horariosClient<$Result.GetResult<Prisma.$salas_horariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Salas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salas_horariosCountArgs} args - Arguments to filter Salas_horarios to count.
     * @example
     * // Count the number of Salas_horarios
     * const count = await prisma.salas_horarios.count({
     *   where: {
     *     // ... the filter for the Salas_horarios we want to count
     *   }
     * })
    **/
    count<T extends salas_horariosCountArgs>(
      args?: Subset<T, salas_horariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Salas_horariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Salas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Salas_horariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Salas_horariosAggregateArgs>(args: Subset<T, Salas_horariosAggregateArgs>): Prisma.PrismaPromise<GetSalas_horariosAggregateType<T>>

    /**
     * Group by Salas_horarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salas_horariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends salas_horariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: salas_horariosGroupByArgs['orderBy'] }
        : { orderBy?: salas_horariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, salas_horariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalas_horariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the salas_horarios model
   */
  readonly fields: salas_horariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for salas_horarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__salas_horariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    salas<T extends salasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, salasDefaultArgs<ExtArgs>>): Prisma__salasClient<$Result.GetResult<Prisma.$salasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    horarios<T extends horariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, horariosDefaultArgs<ExtArgs>>): Prisma__horariosClient<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the salas_horarios model
   */ 
  interface salas_horariosFieldRefs {
    readonly id_sala: FieldRef<"salas_horarios", 'Int'>
    readonly id_horario: FieldRef<"salas_horarios", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * salas_horarios findUnique
   */
  export type salas_horariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which salas_horarios to fetch.
     */
    where: salas_horariosWhereUniqueInput
  }

  /**
   * salas_horarios findUniqueOrThrow
   */
  export type salas_horariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which salas_horarios to fetch.
     */
    where: salas_horariosWhereUniqueInput
  }

  /**
   * salas_horarios findFirst
   */
  export type salas_horariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which salas_horarios to fetch.
     */
    where?: salas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas_horarios to fetch.
     */
    orderBy?: salas_horariosOrderByWithRelationInput | salas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas_horarios.
     */
    cursor?: salas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas_horarios.
     */
    distinct?: Salas_horariosScalarFieldEnum | Salas_horariosScalarFieldEnum[]
  }

  /**
   * salas_horarios findFirstOrThrow
   */
  export type salas_horariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which salas_horarios to fetch.
     */
    where?: salas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas_horarios to fetch.
     */
    orderBy?: salas_horariosOrderByWithRelationInput | salas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salas_horarios.
     */
    cursor?: salas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas_horarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salas_horarios.
     */
    distinct?: Salas_horariosScalarFieldEnum | Salas_horariosScalarFieldEnum[]
  }

  /**
   * salas_horarios findMany
   */
  export type salas_horariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * Filter, which salas_horarios to fetch.
     */
    where?: salas_horariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salas_horarios to fetch.
     */
    orderBy?: salas_horariosOrderByWithRelationInput | salas_horariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing salas_horarios.
     */
    cursor?: salas_horariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salas_horarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salas_horarios.
     */
    skip?: number
    distinct?: Salas_horariosScalarFieldEnum | Salas_horariosScalarFieldEnum[]
  }

  /**
   * salas_horarios create
   */
  export type salas_horariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * The data needed to create a salas_horarios.
     */
    data: XOR<salas_horariosCreateInput, salas_horariosUncheckedCreateInput>
  }

  /**
   * salas_horarios createMany
   */
  export type salas_horariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many salas_horarios.
     */
    data: salas_horariosCreateManyInput | salas_horariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * salas_horarios update
   */
  export type salas_horariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * The data needed to update a salas_horarios.
     */
    data: XOR<salas_horariosUpdateInput, salas_horariosUncheckedUpdateInput>
    /**
     * Choose, which salas_horarios to update.
     */
    where: salas_horariosWhereUniqueInput
  }

  /**
   * salas_horarios updateMany
   */
  export type salas_horariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update salas_horarios.
     */
    data: XOR<salas_horariosUpdateManyMutationInput, salas_horariosUncheckedUpdateManyInput>
    /**
     * Filter which salas_horarios to update
     */
    where?: salas_horariosWhereInput
  }

  /**
   * salas_horarios upsert
   */
  export type salas_horariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * The filter to search for the salas_horarios to update in case it exists.
     */
    where: salas_horariosWhereUniqueInput
    /**
     * In case the salas_horarios found by the `where` argument doesn't exist, create a new salas_horarios with this data.
     */
    create: XOR<salas_horariosCreateInput, salas_horariosUncheckedCreateInput>
    /**
     * In case the salas_horarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<salas_horariosUpdateInput, salas_horariosUncheckedUpdateInput>
  }

  /**
   * salas_horarios delete
   */
  export type salas_horariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
    /**
     * Filter which salas_horarios to delete.
     */
    where: salas_horariosWhereUniqueInput
  }

  /**
   * salas_horarios deleteMany
   */
  export type salas_horariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salas_horarios to delete
     */
    where?: salas_horariosWhereInput
  }

  /**
   * salas_horarios without action
   */
  export type salas_horariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salas_horarios
     */
    select?: salas_horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: salas_horariosInclude<ExtArgs> | null
  }


  /**
   * Model semestres
   */

  export type AggregateSemestres = {
    _count: SemestresCountAggregateOutputType | null
    _avg: SemestresAvgAggregateOutputType | null
    _sum: SemestresSumAggregateOutputType | null
    _min: SemestresMinAggregateOutputType | null
    _max: SemestresMaxAggregateOutputType | null
  }

  export type SemestresAvgAggregateOutputType = {
    id_semestre: number | null
  }

  export type SemestresSumAggregateOutputType = {
    id_semestre: number | null
  }

  export type SemestresMinAggregateOutputType = {
    id_semestre: number | null
    Semestre: string | null
  }

  export type SemestresMaxAggregateOutputType = {
    id_semestre: number | null
    Semestre: string | null
  }

  export type SemestresCountAggregateOutputType = {
    id_semestre: number
    Semestre: number
    _all: number
  }


  export type SemestresAvgAggregateInputType = {
    id_semestre?: true
  }

  export type SemestresSumAggregateInputType = {
    id_semestre?: true
  }

  export type SemestresMinAggregateInputType = {
    id_semestre?: true
    Semestre?: true
  }

  export type SemestresMaxAggregateInputType = {
    id_semestre?: true
    Semestre?: true
  }

  export type SemestresCountAggregateInputType = {
    id_semestre?: true
    Semestre?: true
    _all?: true
  }

  export type SemestresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which semestres to aggregate.
     */
    where?: semestresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of semestres to fetch.
     */
    orderBy?: semestresOrderByWithRelationInput | semestresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: semestresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` semestres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` semestres.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned semestres
    **/
    _count?: true | SemestresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SemestresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SemestresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SemestresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SemestresMaxAggregateInputType
  }

  export type GetSemestresAggregateType<T extends SemestresAggregateArgs> = {
        [P in keyof T & keyof AggregateSemestres]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSemestres[P]>
      : GetScalarType<T[P], AggregateSemestres[P]>
  }




  export type semestresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: semestresWhereInput
    orderBy?: semestresOrderByWithAggregationInput | semestresOrderByWithAggregationInput[]
    by: SemestresScalarFieldEnum[] | SemestresScalarFieldEnum
    having?: semestresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SemestresCountAggregateInputType | true
    _avg?: SemestresAvgAggregateInputType
    _sum?: SemestresSumAggregateInputType
    _min?: SemestresMinAggregateInputType
    _max?: SemestresMaxAggregateInputType
  }

  export type SemestresGroupByOutputType = {
    id_semestre: number
    Semestre: string | null
    _count: SemestresCountAggregateOutputType | null
    _avg: SemestresAvgAggregateOutputType | null
    _sum: SemestresSumAggregateOutputType | null
    _min: SemestresMinAggregateOutputType | null
    _max: SemestresMaxAggregateOutputType | null
  }

  type GetSemestresGroupByPayload<T extends semestresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SemestresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SemestresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SemestresGroupByOutputType[P]>
            : GetScalarType<T[P], SemestresGroupByOutputType[P]>
        }
      >
    >


  export type semestresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_semestre?: boolean
    Semestre?: boolean
  }, ExtArgs["result"]["semestres"]>

  export type semestresSelectScalar = {
    id_semestre?: boolean
    Semestre?: boolean
  }



  export type $semestresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "semestres"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_semestre: number
      Semestre: string | null
    }, ExtArgs["result"]["semestres"]>
    composites: {}
  }


  type semestresGetPayload<S extends boolean | null | undefined | semestresDefaultArgs> = $Result.GetResult<Prisma.$semestresPayload, S>

  type semestresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<semestresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SemestresCountAggregateInputType | true
    }

  export interface semestresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['semestres'], meta: { name: 'semestres' } }
    /**
     * Find zero or one Semestres that matches the filter.
     * @param {semestresFindUniqueArgs} args - Arguments to find a Semestres
     * @example
     * // Get one Semestres
     * const semestres = await prisma.semestres.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends semestresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, semestresFindUniqueArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Semestres that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {semestresFindUniqueOrThrowArgs} args - Arguments to find a Semestres
     * @example
     * // Get one Semestres
     * const semestres = await prisma.semestres.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends semestresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, semestresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Semestres that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {semestresFindFirstArgs} args - Arguments to find a Semestres
     * @example
     * // Get one Semestres
     * const semestres = await prisma.semestres.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends semestresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, semestresFindFirstArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Semestres that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {semestresFindFirstOrThrowArgs} args - Arguments to find a Semestres
     * @example
     * // Get one Semestres
     * const semestres = await prisma.semestres.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends semestresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, semestresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Semestres that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {semestresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Semestres
     * const semestres = await prisma.semestres.findMany()
     * 
     * // Get first 10 Semestres
     * const semestres = await prisma.semestres.findMany({ take: 10 })
     * 
     * // Only select the `id_semestre`
     * const semestresWithId_semestreOnly = await prisma.semestres.findMany({ select: { id_semestre: true } })
     * 
    **/
    findMany<T extends semestresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, semestresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Semestres.
     * @param {semestresCreateArgs} args - Arguments to create a Semestres.
     * @example
     * // Create one Semestres
     * const Semestres = await prisma.semestres.create({
     *   data: {
     *     // ... data to create a Semestres
     *   }
     * })
     * 
    **/
    create<T extends semestresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, semestresCreateArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Semestres.
     * @param {semestresCreateManyArgs} args - Arguments to create many Semestres.
     * @example
     * // Create many Semestres
     * const semestres = await prisma.semestres.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends semestresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, semestresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Semestres.
     * @param {semestresDeleteArgs} args - Arguments to delete one Semestres.
     * @example
     * // Delete one Semestres
     * const Semestres = await prisma.semestres.delete({
     *   where: {
     *     // ... filter to delete one Semestres
     *   }
     * })
     * 
    **/
    delete<T extends semestresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, semestresDeleteArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Semestres.
     * @param {semestresUpdateArgs} args - Arguments to update one Semestres.
     * @example
     * // Update one Semestres
     * const semestres = await prisma.semestres.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends semestresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, semestresUpdateArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Semestres.
     * @param {semestresDeleteManyArgs} args - Arguments to filter Semestres to delete.
     * @example
     * // Delete a few Semestres
     * const { count } = await prisma.semestres.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends semestresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, semestresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Semestres.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {semestresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Semestres
     * const semestres = await prisma.semestres.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends semestresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, semestresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Semestres.
     * @param {semestresUpsertArgs} args - Arguments to update or create a Semestres.
     * @example
     * // Update or create a Semestres
     * const semestres = await prisma.semestres.upsert({
     *   create: {
     *     // ... data to create a Semestres
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Semestres we want to update
     *   }
     * })
    **/
    upsert<T extends semestresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, semestresUpsertArgs<ExtArgs>>
    ): Prisma__semestresClient<$Result.GetResult<Prisma.$semestresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Semestres.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {semestresCountArgs} args - Arguments to filter Semestres to count.
     * @example
     * // Count the number of Semestres
     * const count = await prisma.semestres.count({
     *   where: {
     *     // ... the filter for the Semestres we want to count
     *   }
     * })
    **/
    count<T extends semestresCountArgs>(
      args?: Subset<T, semestresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SemestresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Semestres.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SemestresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SemestresAggregateArgs>(args: Subset<T, SemestresAggregateArgs>): Prisma.PrismaPromise<GetSemestresAggregateType<T>>

    /**
     * Group by Semestres.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {semestresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends semestresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: semestresGroupByArgs['orderBy'] }
        : { orderBy?: semestresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, semestresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSemestresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the semestres model
   */
  readonly fields: semestresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for semestres.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__semestresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the semestres model
   */ 
  interface semestresFieldRefs {
    readonly id_semestre: FieldRef<"semestres", 'Int'>
    readonly Semestre: FieldRef<"semestres", 'String'>
  }
    

  // Custom InputTypes
  /**
   * semestres findUnique
   */
  export type semestresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * Filter, which semestres to fetch.
     */
    where: semestresWhereUniqueInput
  }

  /**
   * semestres findUniqueOrThrow
   */
  export type semestresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * Filter, which semestres to fetch.
     */
    where: semestresWhereUniqueInput
  }

  /**
   * semestres findFirst
   */
  export type semestresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * Filter, which semestres to fetch.
     */
    where?: semestresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of semestres to fetch.
     */
    orderBy?: semestresOrderByWithRelationInput | semestresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for semestres.
     */
    cursor?: semestresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` semestres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` semestres.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of semestres.
     */
    distinct?: SemestresScalarFieldEnum | SemestresScalarFieldEnum[]
  }

  /**
   * semestres findFirstOrThrow
   */
  export type semestresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * Filter, which semestres to fetch.
     */
    where?: semestresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of semestres to fetch.
     */
    orderBy?: semestresOrderByWithRelationInput | semestresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for semestres.
     */
    cursor?: semestresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` semestres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` semestres.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of semestres.
     */
    distinct?: SemestresScalarFieldEnum | SemestresScalarFieldEnum[]
  }

  /**
   * semestres findMany
   */
  export type semestresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * Filter, which semestres to fetch.
     */
    where?: semestresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of semestres to fetch.
     */
    orderBy?: semestresOrderByWithRelationInput | semestresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing semestres.
     */
    cursor?: semestresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` semestres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` semestres.
     */
    skip?: number
    distinct?: SemestresScalarFieldEnum | SemestresScalarFieldEnum[]
  }

  /**
   * semestres create
   */
  export type semestresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * The data needed to create a semestres.
     */
    data: XOR<semestresCreateInput, semestresUncheckedCreateInput>
  }

  /**
   * semestres createMany
   */
  export type semestresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many semestres.
     */
    data: semestresCreateManyInput | semestresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * semestres update
   */
  export type semestresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * The data needed to update a semestres.
     */
    data: XOR<semestresUpdateInput, semestresUncheckedUpdateInput>
    /**
     * Choose, which semestres to update.
     */
    where: semestresWhereUniqueInput
  }

  /**
   * semestres updateMany
   */
  export type semestresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update semestres.
     */
    data: XOR<semestresUpdateManyMutationInput, semestresUncheckedUpdateManyInput>
    /**
     * Filter which semestres to update
     */
    where?: semestresWhereInput
  }

  /**
   * semestres upsert
   */
  export type semestresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * The filter to search for the semestres to update in case it exists.
     */
    where: semestresWhereUniqueInput
    /**
     * In case the semestres found by the `where` argument doesn't exist, create a new semestres with this data.
     */
    create: XOR<semestresCreateInput, semestresUncheckedCreateInput>
    /**
     * In case the semestres was found with the provided `where` argument, update it with this data.
     */
    update: XOR<semestresUpdateInput, semestresUncheckedUpdateInput>
  }

  /**
   * semestres delete
   */
  export type semestresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
    /**
     * Filter which semestres to delete.
     */
    where: semestresWhereUniqueInput
  }

  /**
   * semestres deleteMany
   */
  export type semestresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which semestres to delete
     */
    where?: semestresWhereInput
  }

  /**
   * semestres without action
   */
  export type semestresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the semestres
     */
    select?: semestresSelect<ExtArgs> | null
  }


  /**
   * Model utilizadores
   */

  export type AggregateUtilizadores = {
    _count: UtilizadoresCountAggregateOutputType | null
    _avg: UtilizadoresAvgAggregateOutputType | null
    _sum: UtilizadoresSumAggregateOutputType | null
    _min: UtilizadoresMinAggregateOutputType | null
    _max: UtilizadoresMaxAggregateOutputType | null
  }

  export type UtilizadoresAvgAggregateOutputType = {
    id_utilizador: number | null
  }

  export type UtilizadoresSumAggregateOutputType = {
    id_utilizador: number | null
  }

  export type UtilizadoresMinAggregateOutputType = {
    id_utilizador: number | null
    Nome: string | null
    Email: string | null
    Dia_semana: string | null
    Hora_Inicio: Date | null
    Hora_Fim: Date | null
  }

  export type UtilizadoresMaxAggregateOutputType = {
    id_utilizador: number | null
    Nome: string | null
    Email: string | null
    Dia_semana: string | null
    Hora_Inicio: Date | null
    Hora_Fim: Date | null
  }

  export type UtilizadoresCountAggregateOutputType = {
    id_utilizador: number
    Nome: number
    Email: number
    Dia_semana: number
    Hora_Inicio: number
    Hora_Fim: number
    _all: number
  }


  export type UtilizadoresAvgAggregateInputType = {
    id_utilizador?: true
  }

  export type UtilizadoresSumAggregateInputType = {
    id_utilizador?: true
  }

  export type UtilizadoresMinAggregateInputType = {
    id_utilizador?: true
    Nome?: true
    Email?: true
    Dia_semana?: true
    Hora_Inicio?: true
    Hora_Fim?: true
  }

  export type UtilizadoresMaxAggregateInputType = {
    id_utilizador?: true
    Nome?: true
    Email?: true
    Dia_semana?: true
    Hora_Inicio?: true
    Hora_Fim?: true
  }

  export type UtilizadoresCountAggregateInputType = {
    id_utilizador?: true
    Nome?: true
    Email?: true
    Dia_semana?: true
    Hora_Inicio?: true
    Hora_Fim?: true
    _all?: true
  }

  export type UtilizadoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which utilizadores to aggregate.
     */
    where?: utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadores to fetch.
     */
    orderBy?: utilizadoresOrderByWithRelationInput | utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned utilizadores
    **/
    _count?: true | UtilizadoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UtilizadoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UtilizadoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UtilizadoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UtilizadoresMaxAggregateInputType
  }

  export type GetUtilizadoresAggregateType<T extends UtilizadoresAggregateArgs> = {
        [P in keyof T & keyof AggregateUtilizadores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUtilizadores[P]>
      : GetScalarType<T[P], AggregateUtilizadores[P]>
  }




  export type utilizadoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: utilizadoresWhereInput
    orderBy?: utilizadoresOrderByWithAggregationInput | utilizadoresOrderByWithAggregationInput[]
    by: UtilizadoresScalarFieldEnum[] | UtilizadoresScalarFieldEnum
    having?: utilizadoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UtilizadoresCountAggregateInputType | true
    _avg?: UtilizadoresAvgAggregateInputType
    _sum?: UtilizadoresSumAggregateInputType
    _min?: UtilizadoresMinAggregateInputType
    _max?: UtilizadoresMaxAggregateInputType
  }

  export type UtilizadoresGroupByOutputType = {
    id_utilizador: number
    Nome: string | null
    Email: string | null
    Dia_semana: string | null
    Hora_Inicio: Date | null
    Hora_Fim: Date | null
    _count: UtilizadoresCountAggregateOutputType | null
    _avg: UtilizadoresAvgAggregateOutputType | null
    _sum: UtilizadoresSumAggregateOutputType | null
    _min: UtilizadoresMinAggregateOutputType | null
    _max: UtilizadoresMaxAggregateOutputType | null
  }

  type GetUtilizadoresGroupByPayload<T extends utilizadoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UtilizadoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UtilizadoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UtilizadoresGroupByOutputType[P]>
            : GetScalarType<T[P], UtilizadoresGroupByOutputType[P]>
        }
      >
    >


  export type utilizadoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_utilizador?: boolean
    Nome?: boolean
    Email?: boolean
    Dia_semana?: boolean
    Hora_Inicio?: boolean
    Hora_Fim?: boolean
    disciplinas_utilizadores?: boolean | utilizadores$disciplinas_utilizadoresArgs<ExtArgs>
    horarios?: boolean | utilizadores$horariosArgs<ExtArgs>
    _count?: boolean | UtilizadoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["utilizadores"]>

  export type utilizadoresSelectScalar = {
    id_utilizador?: boolean
    Nome?: boolean
    Email?: boolean
    Dia_semana?: boolean
    Hora_Inicio?: boolean
    Hora_Fim?: boolean
  }


  export type utilizadoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    disciplinas_utilizadores?: boolean | utilizadores$disciplinas_utilizadoresArgs<ExtArgs>
    horarios?: boolean | utilizadores$horariosArgs<ExtArgs>
    _count?: boolean | UtilizadoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $utilizadoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "utilizadores"
    objects: {
      disciplinas_utilizadores: Prisma.$disciplinas_utilizadoresPayload<ExtArgs>[]
      horarios: Prisma.$horariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_utilizador: number
      Nome: string | null
      Email: string | null
      Dia_semana: string | null
      Hora_Inicio: Date | null
      Hora_Fim: Date | null
    }, ExtArgs["result"]["utilizadores"]>
    composites: {}
  }


  type utilizadoresGetPayload<S extends boolean | null | undefined | utilizadoresDefaultArgs> = $Result.GetResult<Prisma.$utilizadoresPayload, S>

  type utilizadoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<utilizadoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UtilizadoresCountAggregateInputType | true
    }

  export interface utilizadoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['utilizadores'], meta: { name: 'utilizadores' } }
    /**
     * Find zero or one Utilizadores that matches the filter.
     * @param {utilizadoresFindUniqueArgs} args - Arguments to find a Utilizadores
     * @example
     * // Get one Utilizadores
     * const utilizadores = await prisma.utilizadores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends utilizadoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, utilizadoresFindUniqueArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Utilizadores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {utilizadoresFindUniqueOrThrowArgs} args - Arguments to find a Utilizadores
     * @example
     * // Get one Utilizadores
     * const utilizadores = await prisma.utilizadores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends utilizadoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, utilizadoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Utilizadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadoresFindFirstArgs} args - Arguments to find a Utilizadores
     * @example
     * // Get one Utilizadores
     * const utilizadores = await prisma.utilizadores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends utilizadoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, utilizadoresFindFirstArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Utilizadores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadoresFindFirstOrThrowArgs} args - Arguments to find a Utilizadores
     * @example
     * // Get one Utilizadores
     * const utilizadores = await prisma.utilizadores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends utilizadoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, utilizadoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Utilizadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Utilizadores
     * const utilizadores = await prisma.utilizadores.findMany()
     * 
     * // Get first 10 Utilizadores
     * const utilizadores = await prisma.utilizadores.findMany({ take: 10 })
     * 
     * // Only select the `id_utilizador`
     * const utilizadoresWithId_utilizadorOnly = await prisma.utilizadores.findMany({ select: { id_utilizador: true } })
     * 
    **/
    findMany<T extends utilizadoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, utilizadoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Utilizadores.
     * @param {utilizadoresCreateArgs} args - Arguments to create a Utilizadores.
     * @example
     * // Create one Utilizadores
     * const Utilizadores = await prisma.utilizadores.create({
     *   data: {
     *     // ... data to create a Utilizadores
     *   }
     * })
     * 
    **/
    create<T extends utilizadoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, utilizadoresCreateArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Utilizadores.
     * @param {utilizadoresCreateManyArgs} args - Arguments to create many Utilizadores.
     * @example
     * // Create many Utilizadores
     * const utilizadores = await prisma.utilizadores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends utilizadoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, utilizadoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Utilizadores.
     * @param {utilizadoresDeleteArgs} args - Arguments to delete one Utilizadores.
     * @example
     * // Delete one Utilizadores
     * const Utilizadores = await prisma.utilizadores.delete({
     *   where: {
     *     // ... filter to delete one Utilizadores
     *   }
     * })
     * 
    **/
    delete<T extends utilizadoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, utilizadoresDeleteArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Utilizadores.
     * @param {utilizadoresUpdateArgs} args - Arguments to update one Utilizadores.
     * @example
     * // Update one Utilizadores
     * const utilizadores = await prisma.utilizadores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends utilizadoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, utilizadoresUpdateArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Utilizadores.
     * @param {utilizadoresDeleteManyArgs} args - Arguments to filter Utilizadores to delete.
     * @example
     * // Delete a few Utilizadores
     * const { count } = await prisma.utilizadores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends utilizadoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, utilizadoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Utilizadores
     * const utilizadores = await prisma.utilizadores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends utilizadoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, utilizadoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Utilizadores.
     * @param {utilizadoresUpsertArgs} args - Arguments to update or create a Utilizadores.
     * @example
     * // Update or create a Utilizadores
     * const utilizadores = await prisma.utilizadores.upsert({
     *   create: {
     *     // ... data to create a Utilizadores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Utilizadores we want to update
     *   }
     * })
    **/
    upsert<T extends utilizadoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, utilizadoresUpsertArgs<ExtArgs>>
    ): Prisma__utilizadoresClient<$Result.GetResult<Prisma.$utilizadoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadoresCountArgs} args - Arguments to filter Utilizadores to count.
     * @example
     * // Count the number of Utilizadores
     * const count = await prisma.utilizadores.count({
     *   where: {
     *     // ... the filter for the Utilizadores we want to count
     *   }
     * })
    **/
    count<T extends utilizadoresCountArgs>(
      args?: Subset<T, utilizadoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UtilizadoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UtilizadoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UtilizadoresAggregateArgs>(args: Subset<T, UtilizadoresAggregateArgs>): Prisma.PrismaPromise<GetUtilizadoresAggregateType<T>>

    /**
     * Group by Utilizadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {utilizadoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends utilizadoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: utilizadoresGroupByArgs['orderBy'] }
        : { orderBy?: utilizadoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, utilizadoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUtilizadoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the utilizadores model
   */
  readonly fields: utilizadoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for utilizadores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__utilizadoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    disciplinas_utilizadores<T extends utilizadores$disciplinas_utilizadoresArgs<ExtArgs> = {}>(args?: Subset<T, utilizadores$disciplinas_utilizadoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$disciplinas_utilizadoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    horarios<T extends utilizadores$horariosArgs<ExtArgs> = {}>(args?: Subset<T, utilizadores$horariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$horariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the utilizadores model
   */ 
  interface utilizadoresFieldRefs {
    readonly id_utilizador: FieldRef<"utilizadores", 'Int'>
    readonly Nome: FieldRef<"utilizadores", 'String'>
    readonly Email: FieldRef<"utilizadores", 'String'>
    readonly Dia_semana: FieldRef<"utilizadores", 'String'>
    readonly Hora_Inicio: FieldRef<"utilizadores", 'DateTime'>
    readonly Hora_Fim: FieldRef<"utilizadores", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * utilizadores findUnique
   */
  export type utilizadoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which utilizadores to fetch.
     */
    where: utilizadoresWhereUniqueInput
  }

  /**
   * utilizadores findUniqueOrThrow
   */
  export type utilizadoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which utilizadores to fetch.
     */
    where: utilizadoresWhereUniqueInput
  }

  /**
   * utilizadores findFirst
   */
  export type utilizadoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which utilizadores to fetch.
     */
    where?: utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadores to fetch.
     */
    orderBy?: utilizadoresOrderByWithRelationInput | utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for utilizadores.
     */
    cursor?: utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of utilizadores.
     */
    distinct?: UtilizadoresScalarFieldEnum | UtilizadoresScalarFieldEnum[]
  }

  /**
   * utilizadores findFirstOrThrow
   */
  export type utilizadoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which utilizadores to fetch.
     */
    where?: utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadores to fetch.
     */
    orderBy?: utilizadoresOrderByWithRelationInput | utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for utilizadores.
     */
    cursor?: utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of utilizadores.
     */
    distinct?: UtilizadoresScalarFieldEnum | UtilizadoresScalarFieldEnum[]
  }

  /**
   * utilizadores findMany
   */
  export type utilizadoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * Filter, which utilizadores to fetch.
     */
    where?: utilizadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of utilizadores to fetch.
     */
    orderBy?: utilizadoresOrderByWithRelationInput | utilizadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing utilizadores.
     */
    cursor?: utilizadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` utilizadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` utilizadores.
     */
    skip?: number
    distinct?: UtilizadoresScalarFieldEnum | UtilizadoresScalarFieldEnum[]
  }

  /**
   * utilizadores create
   */
  export type utilizadoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * The data needed to create a utilizadores.
     */
    data?: XOR<utilizadoresCreateInput, utilizadoresUncheckedCreateInput>
  }

  /**
   * utilizadores createMany
   */
  export type utilizadoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many utilizadores.
     */
    data: utilizadoresCreateManyInput | utilizadoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * utilizadores update
   */
  export type utilizadoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * The data needed to update a utilizadores.
     */
    data: XOR<utilizadoresUpdateInput, utilizadoresUncheckedUpdateInput>
    /**
     * Choose, which utilizadores to update.
     */
    where: utilizadoresWhereUniqueInput
  }

  /**
   * utilizadores updateMany
   */
  export type utilizadoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update utilizadores.
     */
    data: XOR<utilizadoresUpdateManyMutationInput, utilizadoresUncheckedUpdateManyInput>
    /**
     * Filter which utilizadores to update
     */
    where?: utilizadoresWhereInput
  }

  /**
   * utilizadores upsert
   */
  export type utilizadoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * The filter to search for the utilizadores to update in case it exists.
     */
    where: utilizadoresWhereUniqueInput
    /**
     * In case the utilizadores found by the `where` argument doesn't exist, create a new utilizadores with this data.
     */
    create: XOR<utilizadoresCreateInput, utilizadoresUncheckedCreateInput>
    /**
     * In case the utilizadores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<utilizadoresUpdateInput, utilizadoresUncheckedUpdateInput>
  }

  /**
   * utilizadores delete
   */
  export type utilizadoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
    /**
     * Filter which utilizadores to delete.
     */
    where: utilizadoresWhereUniqueInput
  }

  /**
   * utilizadores deleteMany
   */
  export type utilizadoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which utilizadores to delete
     */
    where?: utilizadoresWhereInput
  }

  /**
   * utilizadores.disciplinas_utilizadores
   */
  export type utilizadores$disciplinas_utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the disciplinas_utilizadores
     */
    select?: disciplinas_utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: disciplinas_utilizadoresInclude<ExtArgs> | null
    where?: disciplinas_utilizadoresWhereInput
    orderBy?: disciplinas_utilizadoresOrderByWithRelationInput | disciplinas_utilizadoresOrderByWithRelationInput[]
    cursor?: disciplinas_utilizadoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Disciplinas_utilizadoresScalarFieldEnum | Disciplinas_utilizadoresScalarFieldEnum[]
  }

  /**
   * utilizadores.horarios
   */
  export type utilizadores$horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the horarios
     */
    select?: horariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: horariosInclude<ExtArgs> | null
    where?: horariosWhereInput
    orderBy?: horariosOrderByWithRelationInput | horariosOrderByWithRelationInput[]
    cursor?: horariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HorariosScalarFieldEnum | HorariosScalarFieldEnum[]
  }

  /**
   * utilizadores without action
   */
  export type utilizadoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the utilizadores
     */
    select?: utilizadoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: utilizadoresInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const DisciplinasScalarFieldEnum: {
    id_disciplina: 'id_disciplina',
    Nome: 'Nome',
    Numero: 'Numero',
    id_professor: 'id_professor'
  };

  export type DisciplinasScalarFieldEnum = (typeof DisciplinasScalarFieldEnum)[keyof typeof DisciplinasScalarFieldEnum]


  export const Disciplinas_horariosScalarFieldEnum: {
    id_disciplina: 'id_disciplina',
    id_horario: 'id_horario'
  };

  export type Disciplinas_horariosScalarFieldEnum = (typeof Disciplinas_horariosScalarFieldEnum)[keyof typeof Disciplinas_horariosScalarFieldEnum]


  export const Disciplinas_professoresScalarFieldEnum: {
    id_disciplina: 'id_disciplina',
    id_professor: 'id_professor'
  };

  export type Disciplinas_professoresScalarFieldEnum = (typeof Disciplinas_professoresScalarFieldEnum)[keyof typeof Disciplinas_professoresScalarFieldEnum]


  export const Disciplinas_utilizadoresScalarFieldEnum: {
    id_disciplina: 'id_disciplina',
    id_utilizador: 'id_utilizador'
  };

  export type Disciplinas_utilizadoresScalarFieldEnum = (typeof Disciplinas_utilizadoresScalarFieldEnum)[keyof typeof Disciplinas_utilizadoresScalarFieldEnum]


  export const HorariosScalarFieldEnum: {
    id_horario: 'id_horario',
    Data_inicio: 'Data_inicio',
    Data_fim: 'Data_fim',
    id_utilizador: 'id_utilizador',
    id_sala: 'id_sala'
  };

  export type HorariosScalarFieldEnum = (typeof HorariosScalarFieldEnum)[keyof typeof HorariosScalarFieldEnum]


  export const ProfessoresScalarFieldEnum: {
    id_professor: 'id_professor',
    Nome: 'Nome',
    Email: 'Email',
    Carga: 'Carga',
    Descricao: 'Descricao'
  };

  export type ProfessoresScalarFieldEnum = (typeof ProfessoresScalarFieldEnum)[keyof typeof ProfessoresScalarFieldEnum]


  export const SalasScalarFieldEnum: {
    id_sala: 'id_sala',
    Detalhe: 'Detalhe'
  };

  export type SalasScalarFieldEnum = (typeof SalasScalarFieldEnum)[keyof typeof SalasScalarFieldEnum]


  export const Salas_horariosScalarFieldEnum: {
    id_sala: 'id_sala',
    id_horario: 'id_horario'
  };

  export type Salas_horariosScalarFieldEnum = (typeof Salas_horariosScalarFieldEnum)[keyof typeof Salas_horariosScalarFieldEnum]


  export const SemestresScalarFieldEnum: {
    id_semestre: 'id_semestre',
    Semestre: 'Semestre'
  };

  export type SemestresScalarFieldEnum = (typeof SemestresScalarFieldEnum)[keyof typeof SemestresScalarFieldEnum]


  export const UtilizadoresScalarFieldEnum: {
    id_utilizador: 'id_utilizador',
    Nome: 'Nome',
    Email: 'Email',
    Dia_semana: 'Dia_semana',
    Hora_Inicio: 'Hora_Inicio',
    Hora_Fim: 'Hora_Fim'
  };

  export type UtilizadoresScalarFieldEnum = (typeof UtilizadoresScalarFieldEnum)[keyof typeof UtilizadoresScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type disciplinasWhereInput = {
    AND?: disciplinasWhereInput | disciplinasWhereInput[]
    OR?: disciplinasWhereInput[]
    NOT?: disciplinasWhereInput | disciplinasWhereInput[]
    id_disciplina?: IntFilter<"disciplinas"> | number
    Nome?: StringNullableFilter<"disciplinas"> | string | null
    Numero?: IntNullableFilter<"disciplinas"> | number | null
    id_professor?: IntNullableFilter<"disciplinas"> | number | null
    professores?: XOR<ProfessoresNullableRelationFilter, professoresWhereInput> | null
    disciplinas_horarios?: Disciplinas_horariosListRelationFilter
    disciplinas_professores?: Disciplinas_professoresListRelationFilter
    disciplinas_utilizadores?: Disciplinas_utilizadoresListRelationFilter
  }

  export type disciplinasOrderByWithRelationInput = {
    id_disciplina?: SortOrder
    Nome?: SortOrderInput | SortOrder
    Numero?: SortOrderInput | SortOrder
    id_professor?: SortOrderInput | SortOrder
    professores?: professoresOrderByWithRelationInput
    disciplinas_horarios?: disciplinas_horariosOrderByRelationAggregateInput
    disciplinas_professores?: disciplinas_professoresOrderByRelationAggregateInput
    disciplinas_utilizadores?: disciplinas_utilizadoresOrderByRelationAggregateInput
  }

  export type disciplinasWhereUniqueInput = Prisma.AtLeast<{
    id_disciplina?: number
    AND?: disciplinasWhereInput | disciplinasWhereInput[]
    OR?: disciplinasWhereInput[]
    NOT?: disciplinasWhereInput | disciplinasWhereInput[]
    Nome?: StringNullableFilter<"disciplinas"> | string | null
    Numero?: IntNullableFilter<"disciplinas"> | number | null
    id_professor?: IntNullableFilter<"disciplinas"> | number | null
    professores?: XOR<ProfessoresNullableRelationFilter, professoresWhereInput> | null
    disciplinas_horarios?: Disciplinas_horariosListRelationFilter
    disciplinas_professores?: Disciplinas_professoresListRelationFilter
    disciplinas_utilizadores?: Disciplinas_utilizadoresListRelationFilter
  }, "id_disciplina">

  export type disciplinasOrderByWithAggregationInput = {
    id_disciplina?: SortOrder
    Nome?: SortOrderInput | SortOrder
    Numero?: SortOrderInput | SortOrder
    id_professor?: SortOrderInput | SortOrder
    _count?: disciplinasCountOrderByAggregateInput
    _avg?: disciplinasAvgOrderByAggregateInput
    _max?: disciplinasMaxOrderByAggregateInput
    _min?: disciplinasMinOrderByAggregateInput
    _sum?: disciplinasSumOrderByAggregateInput
  }

  export type disciplinasScalarWhereWithAggregatesInput = {
    AND?: disciplinasScalarWhereWithAggregatesInput | disciplinasScalarWhereWithAggregatesInput[]
    OR?: disciplinasScalarWhereWithAggregatesInput[]
    NOT?: disciplinasScalarWhereWithAggregatesInput | disciplinasScalarWhereWithAggregatesInput[]
    id_disciplina?: IntWithAggregatesFilter<"disciplinas"> | number
    Nome?: StringNullableWithAggregatesFilter<"disciplinas"> | string | null
    Numero?: IntNullableWithAggregatesFilter<"disciplinas"> | number | null
    id_professor?: IntNullableWithAggregatesFilter<"disciplinas"> | number | null
  }

  export type disciplinas_horariosWhereInput = {
    AND?: disciplinas_horariosWhereInput | disciplinas_horariosWhereInput[]
    OR?: disciplinas_horariosWhereInput[]
    NOT?: disciplinas_horariosWhereInput | disciplinas_horariosWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_horarios"> | number
    id_horario?: IntFilter<"disciplinas_horarios"> | number
    disciplinas?: XOR<DisciplinasRelationFilter, disciplinasWhereInput>
    horarios?: XOR<HorariosRelationFilter, horariosWhereInput>
  }

  export type disciplinas_horariosOrderByWithRelationInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
    disciplinas?: disciplinasOrderByWithRelationInput
    horarios?: horariosOrderByWithRelationInput
  }

  export type disciplinas_horariosWhereUniqueInput = Prisma.AtLeast<{
    id_disciplina_id_horario?: disciplinas_horariosId_disciplinaId_horarioCompoundUniqueInput
    AND?: disciplinas_horariosWhereInput | disciplinas_horariosWhereInput[]
    OR?: disciplinas_horariosWhereInput[]
    NOT?: disciplinas_horariosWhereInput | disciplinas_horariosWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_horarios"> | number
    id_horario?: IntFilter<"disciplinas_horarios"> | number
    disciplinas?: XOR<DisciplinasRelationFilter, disciplinasWhereInput>
    horarios?: XOR<HorariosRelationFilter, horariosWhereInput>
  }, "id_disciplina_id_horario">

  export type disciplinas_horariosOrderByWithAggregationInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
    _count?: disciplinas_horariosCountOrderByAggregateInput
    _avg?: disciplinas_horariosAvgOrderByAggregateInput
    _max?: disciplinas_horariosMaxOrderByAggregateInput
    _min?: disciplinas_horariosMinOrderByAggregateInput
    _sum?: disciplinas_horariosSumOrderByAggregateInput
  }

  export type disciplinas_horariosScalarWhereWithAggregatesInput = {
    AND?: disciplinas_horariosScalarWhereWithAggregatesInput | disciplinas_horariosScalarWhereWithAggregatesInput[]
    OR?: disciplinas_horariosScalarWhereWithAggregatesInput[]
    NOT?: disciplinas_horariosScalarWhereWithAggregatesInput | disciplinas_horariosScalarWhereWithAggregatesInput[]
    id_disciplina?: IntWithAggregatesFilter<"disciplinas_horarios"> | number
    id_horario?: IntWithAggregatesFilter<"disciplinas_horarios"> | number
  }

  export type disciplinas_professoresWhereInput = {
    AND?: disciplinas_professoresWhereInput | disciplinas_professoresWhereInput[]
    OR?: disciplinas_professoresWhereInput[]
    NOT?: disciplinas_professoresWhereInput | disciplinas_professoresWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_professores"> | number
    id_professor?: IntFilter<"disciplinas_professores"> | number
    disciplinas?: XOR<DisciplinasRelationFilter, disciplinasWhereInput>
    professores?: XOR<ProfessoresRelationFilter, professoresWhereInput>
  }

  export type disciplinas_professoresOrderByWithRelationInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
    disciplinas?: disciplinasOrderByWithRelationInput
    professores?: professoresOrderByWithRelationInput
  }

  export type disciplinas_professoresWhereUniqueInput = Prisma.AtLeast<{
    id_disciplina_id_professor?: disciplinas_professoresId_disciplinaId_professorCompoundUniqueInput
    AND?: disciplinas_professoresWhereInput | disciplinas_professoresWhereInput[]
    OR?: disciplinas_professoresWhereInput[]
    NOT?: disciplinas_professoresWhereInput | disciplinas_professoresWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_professores"> | number
    id_professor?: IntFilter<"disciplinas_professores"> | number
    disciplinas?: XOR<DisciplinasRelationFilter, disciplinasWhereInput>
    professores?: XOR<ProfessoresRelationFilter, professoresWhereInput>
  }, "id_disciplina_id_professor">

  export type disciplinas_professoresOrderByWithAggregationInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
    _count?: disciplinas_professoresCountOrderByAggregateInput
    _avg?: disciplinas_professoresAvgOrderByAggregateInput
    _max?: disciplinas_professoresMaxOrderByAggregateInput
    _min?: disciplinas_professoresMinOrderByAggregateInput
    _sum?: disciplinas_professoresSumOrderByAggregateInput
  }

  export type disciplinas_professoresScalarWhereWithAggregatesInput = {
    AND?: disciplinas_professoresScalarWhereWithAggregatesInput | disciplinas_professoresScalarWhereWithAggregatesInput[]
    OR?: disciplinas_professoresScalarWhereWithAggregatesInput[]
    NOT?: disciplinas_professoresScalarWhereWithAggregatesInput | disciplinas_professoresScalarWhereWithAggregatesInput[]
    id_disciplina?: IntWithAggregatesFilter<"disciplinas_professores"> | number
    id_professor?: IntWithAggregatesFilter<"disciplinas_professores"> | number
  }

  export type disciplinas_utilizadoresWhereInput = {
    AND?: disciplinas_utilizadoresWhereInput | disciplinas_utilizadoresWhereInput[]
    OR?: disciplinas_utilizadoresWhereInput[]
    NOT?: disciplinas_utilizadoresWhereInput | disciplinas_utilizadoresWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_utilizadores"> | number
    id_utilizador?: IntFilter<"disciplinas_utilizadores"> | number
    disciplinas?: XOR<DisciplinasRelationFilter, disciplinasWhereInput>
    utilizadores?: XOR<UtilizadoresRelationFilter, utilizadoresWhereInput>
  }

  export type disciplinas_utilizadoresOrderByWithRelationInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
    disciplinas?: disciplinasOrderByWithRelationInput
    utilizadores?: utilizadoresOrderByWithRelationInput
  }

  export type disciplinas_utilizadoresWhereUniqueInput = Prisma.AtLeast<{
    id_disciplina_id_utilizador?: disciplinas_utilizadoresId_disciplinaId_utilizadorCompoundUniqueInput
    AND?: disciplinas_utilizadoresWhereInput | disciplinas_utilizadoresWhereInput[]
    OR?: disciplinas_utilizadoresWhereInput[]
    NOT?: disciplinas_utilizadoresWhereInput | disciplinas_utilizadoresWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_utilizadores"> | number
    id_utilizador?: IntFilter<"disciplinas_utilizadores"> | number
    disciplinas?: XOR<DisciplinasRelationFilter, disciplinasWhereInput>
    utilizadores?: XOR<UtilizadoresRelationFilter, utilizadoresWhereInput>
  }, "id_disciplina_id_utilizador">

  export type disciplinas_utilizadoresOrderByWithAggregationInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
    _count?: disciplinas_utilizadoresCountOrderByAggregateInput
    _avg?: disciplinas_utilizadoresAvgOrderByAggregateInput
    _max?: disciplinas_utilizadoresMaxOrderByAggregateInput
    _min?: disciplinas_utilizadoresMinOrderByAggregateInput
    _sum?: disciplinas_utilizadoresSumOrderByAggregateInput
  }

  export type disciplinas_utilizadoresScalarWhereWithAggregatesInput = {
    AND?: disciplinas_utilizadoresScalarWhereWithAggregatesInput | disciplinas_utilizadoresScalarWhereWithAggregatesInput[]
    OR?: disciplinas_utilizadoresScalarWhereWithAggregatesInput[]
    NOT?: disciplinas_utilizadoresScalarWhereWithAggregatesInput | disciplinas_utilizadoresScalarWhereWithAggregatesInput[]
    id_disciplina?: IntWithAggregatesFilter<"disciplinas_utilizadores"> | number
    id_utilizador?: IntWithAggregatesFilter<"disciplinas_utilizadores"> | number
  }

  export type horariosWhereInput = {
    AND?: horariosWhereInput | horariosWhereInput[]
    OR?: horariosWhereInput[]
    NOT?: horariosWhereInput | horariosWhereInput[]
    id_horario?: IntFilter<"horarios"> | number
    Data_inicio?: DateTimeNullableFilter<"horarios"> | Date | string | null
    Data_fim?: DateTimeNullableFilter<"horarios"> | Date | string | null
    id_utilizador?: IntNullableFilter<"horarios"> | number | null
    id_sala?: IntNullableFilter<"horarios"> | number | null
    disciplinas_horarios?: Disciplinas_horariosListRelationFilter
    utilizadores?: XOR<UtilizadoresNullableRelationFilter, utilizadoresWhereInput> | null
    salas?: XOR<SalasNullableRelationFilter, salasWhereInput> | null
    salas_horarios?: Salas_horariosListRelationFilter
  }

  export type horariosOrderByWithRelationInput = {
    id_horario?: SortOrder
    Data_inicio?: SortOrderInput | SortOrder
    Data_fim?: SortOrderInput | SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    id_sala?: SortOrderInput | SortOrder
    disciplinas_horarios?: disciplinas_horariosOrderByRelationAggregateInput
    utilizadores?: utilizadoresOrderByWithRelationInput
    salas?: salasOrderByWithRelationInput
    salas_horarios?: salas_horariosOrderByRelationAggregateInput
  }

  export type horariosWhereUniqueInput = Prisma.AtLeast<{
    id_horario?: number
    AND?: horariosWhereInput | horariosWhereInput[]
    OR?: horariosWhereInput[]
    NOT?: horariosWhereInput | horariosWhereInput[]
    Data_inicio?: DateTimeNullableFilter<"horarios"> | Date | string | null
    Data_fim?: DateTimeNullableFilter<"horarios"> | Date | string | null
    id_utilizador?: IntNullableFilter<"horarios"> | number | null
    id_sala?: IntNullableFilter<"horarios"> | number | null
    disciplinas_horarios?: Disciplinas_horariosListRelationFilter
    utilizadores?: XOR<UtilizadoresNullableRelationFilter, utilizadoresWhereInput> | null
    salas?: XOR<SalasNullableRelationFilter, salasWhereInput> | null
    salas_horarios?: Salas_horariosListRelationFilter
  }, "id_horario">

  export type horariosOrderByWithAggregationInput = {
    id_horario?: SortOrder
    Data_inicio?: SortOrderInput | SortOrder
    Data_fim?: SortOrderInput | SortOrder
    id_utilizador?: SortOrderInput | SortOrder
    id_sala?: SortOrderInput | SortOrder
    _count?: horariosCountOrderByAggregateInput
    _avg?: horariosAvgOrderByAggregateInput
    _max?: horariosMaxOrderByAggregateInput
    _min?: horariosMinOrderByAggregateInput
    _sum?: horariosSumOrderByAggregateInput
  }

  export type horariosScalarWhereWithAggregatesInput = {
    AND?: horariosScalarWhereWithAggregatesInput | horariosScalarWhereWithAggregatesInput[]
    OR?: horariosScalarWhereWithAggregatesInput[]
    NOT?: horariosScalarWhereWithAggregatesInput | horariosScalarWhereWithAggregatesInput[]
    id_horario?: IntWithAggregatesFilter<"horarios"> | number
    Data_inicio?: DateTimeNullableWithAggregatesFilter<"horarios"> | Date | string | null
    Data_fim?: DateTimeNullableWithAggregatesFilter<"horarios"> | Date | string | null
    id_utilizador?: IntNullableWithAggregatesFilter<"horarios"> | number | null
    id_sala?: IntNullableWithAggregatesFilter<"horarios"> | number | null
  }

  export type professoresWhereInput = {
    AND?: professoresWhereInput | professoresWhereInput[]
    OR?: professoresWhereInput[]
    NOT?: professoresWhereInput | professoresWhereInput[]
    id_professor?: IntFilter<"professores"> | number
    Nome?: StringNullableFilter<"professores"> | string | null
    Email?: StringNullableFilter<"professores"> | string | null
    Carga?: IntNullableFilter<"professores"> | number | null
    Descricao?: StringNullableFilter<"professores"> | string | null
    disciplinas?: DisciplinasListRelationFilter
    disciplinas_professores?: Disciplinas_professoresListRelationFilter
  }

  export type professoresOrderByWithRelationInput = {
    id_professor?: SortOrder
    Nome?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Carga?: SortOrderInput | SortOrder
    Descricao?: SortOrderInput | SortOrder
    disciplinas?: disciplinasOrderByRelationAggregateInput
    disciplinas_professores?: disciplinas_professoresOrderByRelationAggregateInput
  }

  export type professoresWhereUniqueInput = Prisma.AtLeast<{
    id_professor?: number
    AND?: professoresWhereInput | professoresWhereInput[]
    OR?: professoresWhereInput[]
    NOT?: professoresWhereInput | professoresWhereInput[]
    Nome?: StringNullableFilter<"professores"> | string | null
    Email?: StringNullableFilter<"professores"> | string | null
    Carga?: IntNullableFilter<"professores"> | number | null
    Descricao?: StringNullableFilter<"professores"> | string | null
    disciplinas?: DisciplinasListRelationFilter
    disciplinas_professores?: Disciplinas_professoresListRelationFilter
  }, "id_professor">

  export type professoresOrderByWithAggregationInput = {
    id_professor?: SortOrder
    Nome?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Carga?: SortOrderInput | SortOrder
    Descricao?: SortOrderInput | SortOrder
    _count?: professoresCountOrderByAggregateInput
    _avg?: professoresAvgOrderByAggregateInput
    _max?: professoresMaxOrderByAggregateInput
    _min?: professoresMinOrderByAggregateInput
    _sum?: professoresSumOrderByAggregateInput
  }

  export type professoresScalarWhereWithAggregatesInput = {
    AND?: professoresScalarWhereWithAggregatesInput | professoresScalarWhereWithAggregatesInput[]
    OR?: professoresScalarWhereWithAggregatesInput[]
    NOT?: professoresScalarWhereWithAggregatesInput | professoresScalarWhereWithAggregatesInput[]
    id_professor?: IntWithAggregatesFilter<"professores"> | number
    Nome?: StringNullableWithAggregatesFilter<"professores"> | string | null
    Email?: StringNullableWithAggregatesFilter<"professores"> | string | null
    Carga?: IntNullableWithAggregatesFilter<"professores"> | number | null
    Descricao?: StringNullableWithAggregatesFilter<"professores"> | string | null
  }

  export type salasWhereInput = {
    AND?: salasWhereInput | salasWhereInput[]
    OR?: salasWhereInput[]
    NOT?: salasWhereInput | salasWhereInput[]
    id_sala?: IntFilter<"salas"> | number
    Detalhe?: StringNullableFilter<"salas"> | string | null
    horarios?: HorariosListRelationFilter
    salas_horarios?: Salas_horariosListRelationFilter
  }

  export type salasOrderByWithRelationInput = {
    id_sala?: SortOrder
    Detalhe?: SortOrderInput | SortOrder
    horarios?: horariosOrderByRelationAggregateInput
    salas_horarios?: salas_horariosOrderByRelationAggregateInput
  }

  export type salasWhereUniqueInput = Prisma.AtLeast<{
    id_sala?: number
    AND?: salasWhereInput | salasWhereInput[]
    OR?: salasWhereInput[]
    NOT?: salasWhereInput | salasWhereInput[]
    Detalhe?: StringNullableFilter<"salas"> | string | null
    horarios?: HorariosListRelationFilter
    salas_horarios?: Salas_horariosListRelationFilter
  }, "id_sala">

  export type salasOrderByWithAggregationInput = {
    id_sala?: SortOrder
    Detalhe?: SortOrderInput | SortOrder
    _count?: salasCountOrderByAggregateInput
    _avg?: salasAvgOrderByAggregateInput
    _max?: salasMaxOrderByAggregateInput
    _min?: salasMinOrderByAggregateInput
    _sum?: salasSumOrderByAggregateInput
  }

  export type salasScalarWhereWithAggregatesInput = {
    AND?: salasScalarWhereWithAggregatesInput | salasScalarWhereWithAggregatesInput[]
    OR?: salasScalarWhereWithAggregatesInput[]
    NOT?: salasScalarWhereWithAggregatesInput | salasScalarWhereWithAggregatesInput[]
    id_sala?: IntWithAggregatesFilter<"salas"> | number
    Detalhe?: StringNullableWithAggregatesFilter<"salas"> | string | null
  }

  export type salas_horariosWhereInput = {
    AND?: salas_horariosWhereInput | salas_horariosWhereInput[]
    OR?: salas_horariosWhereInput[]
    NOT?: salas_horariosWhereInput | salas_horariosWhereInput[]
    id_sala?: IntFilter<"salas_horarios"> | number
    id_horario?: IntFilter<"salas_horarios"> | number
    salas?: XOR<SalasRelationFilter, salasWhereInput>
    horarios?: XOR<HorariosRelationFilter, horariosWhereInput>
  }

  export type salas_horariosOrderByWithRelationInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
    salas?: salasOrderByWithRelationInput
    horarios?: horariosOrderByWithRelationInput
  }

  export type salas_horariosWhereUniqueInput = Prisma.AtLeast<{
    id_sala_id_horario?: salas_horariosId_salaId_horarioCompoundUniqueInput
    AND?: salas_horariosWhereInput | salas_horariosWhereInput[]
    OR?: salas_horariosWhereInput[]
    NOT?: salas_horariosWhereInput | salas_horariosWhereInput[]
    id_sala?: IntFilter<"salas_horarios"> | number
    id_horario?: IntFilter<"salas_horarios"> | number
    salas?: XOR<SalasRelationFilter, salasWhereInput>
    horarios?: XOR<HorariosRelationFilter, horariosWhereInput>
  }, "id_sala_id_horario">

  export type salas_horariosOrderByWithAggregationInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
    _count?: salas_horariosCountOrderByAggregateInput
    _avg?: salas_horariosAvgOrderByAggregateInput
    _max?: salas_horariosMaxOrderByAggregateInput
    _min?: salas_horariosMinOrderByAggregateInput
    _sum?: salas_horariosSumOrderByAggregateInput
  }

  export type salas_horariosScalarWhereWithAggregatesInput = {
    AND?: salas_horariosScalarWhereWithAggregatesInput | salas_horariosScalarWhereWithAggregatesInput[]
    OR?: salas_horariosScalarWhereWithAggregatesInput[]
    NOT?: salas_horariosScalarWhereWithAggregatesInput | salas_horariosScalarWhereWithAggregatesInput[]
    id_sala?: IntWithAggregatesFilter<"salas_horarios"> | number
    id_horario?: IntWithAggregatesFilter<"salas_horarios"> | number
  }

  export type semestresWhereInput = {
    AND?: semestresWhereInput | semestresWhereInput[]
    OR?: semestresWhereInput[]
    NOT?: semestresWhereInput | semestresWhereInput[]
    id_semestre?: IntFilter<"semestres"> | number
    Semestre?: StringNullableFilter<"semestres"> | string | null
  }

  export type semestresOrderByWithRelationInput = {
    id_semestre?: SortOrder
    Semestre?: SortOrderInput | SortOrder
  }

  export type semestresWhereUniqueInput = Prisma.AtLeast<{
    id_semestre?: number
    AND?: semestresWhereInput | semestresWhereInput[]
    OR?: semestresWhereInput[]
    NOT?: semestresWhereInput | semestresWhereInput[]
    Semestre?: StringNullableFilter<"semestres"> | string | null
  }, "id_semestre">

  export type semestresOrderByWithAggregationInput = {
    id_semestre?: SortOrder
    Semestre?: SortOrderInput | SortOrder
    _count?: semestresCountOrderByAggregateInput
    _avg?: semestresAvgOrderByAggregateInput
    _max?: semestresMaxOrderByAggregateInput
    _min?: semestresMinOrderByAggregateInput
    _sum?: semestresSumOrderByAggregateInput
  }

  export type semestresScalarWhereWithAggregatesInput = {
    AND?: semestresScalarWhereWithAggregatesInput | semestresScalarWhereWithAggregatesInput[]
    OR?: semestresScalarWhereWithAggregatesInput[]
    NOT?: semestresScalarWhereWithAggregatesInput | semestresScalarWhereWithAggregatesInput[]
    id_semestre?: IntWithAggregatesFilter<"semestres"> | number
    Semestre?: StringNullableWithAggregatesFilter<"semestres"> | string | null
  }

  export type utilizadoresWhereInput = {
    AND?: utilizadoresWhereInput | utilizadoresWhereInput[]
    OR?: utilizadoresWhereInput[]
    NOT?: utilizadoresWhereInput | utilizadoresWhereInput[]
    id_utilizador?: IntFilter<"utilizadores"> | number
    Nome?: StringNullableFilter<"utilizadores"> | string | null
    Email?: StringNullableFilter<"utilizadores"> | string | null
    Dia_semana?: StringNullableFilter<"utilizadores"> | string | null
    Hora_Inicio?: DateTimeNullableFilter<"utilizadores"> | Date | string | null
    Hora_Fim?: DateTimeNullableFilter<"utilizadores"> | Date | string | null
    disciplinas_utilizadores?: Disciplinas_utilizadoresListRelationFilter
    horarios?: HorariosListRelationFilter
  }

  export type utilizadoresOrderByWithRelationInput = {
    id_utilizador?: SortOrder
    Nome?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Dia_semana?: SortOrderInput | SortOrder
    Hora_Inicio?: SortOrderInput | SortOrder
    Hora_Fim?: SortOrderInput | SortOrder
    disciplinas_utilizadores?: disciplinas_utilizadoresOrderByRelationAggregateInput
    horarios?: horariosOrderByRelationAggregateInput
  }

  export type utilizadoresWhereUniqueInput = Prisma.AtLeast<{
    id_utilizador?: number
    AND?: utilizadoresWhereInput | utilizadoresWhereInput[]
    OR?: utilizadoresWhereInput[]
    NOT?: utilizadoresWhereInput | utilizadoresWhereInput[]
    Nome?: StringNullableFilter<"utilizadores"> | string | null
    Email?: StringNullableFilter<"utilizadores"> | string | null
    Dia_semana?: StringNullableFilter<"utilizadores"> | string | null
    Hora_Inicio?: DateTimeNullableFilter<"utilizadores"> | Date | string | null
    Hora_Fim?: DateTimeNullableFilter<"utilizadores"> | Date | string | null
    disciplinas_utilizadores?: Disciplinas_utilizadoresListRelationFilter
    horarios?: HorariosListRelationFilter
  }, "id_utilizador">

  export type utilizadoresOrderByWithAggregationInput = {
    id_utilizador?: SortOrder
    Nome?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Dia_semana?: SortOrderInput | SortOrder
    Hora_Inicio?: SortOrderInput | SortOrder
    Hora_Fim?: SortOrderInput | SortOrder
    _count?: utilizadoresCountOrderByAggregateInput
    _avg?: utilizadoresAvgOrderByAggregateInput
    _max?: utilizadoresMaxOrderByAggregateInput
    _min?: utilizadoresMinOrderByAggregateInput
    _sum?: utilizadoresSumOrderByAggregateInput
  }

  export type utilizadoresScalarWhereWithAggregatesInput = {
    AND?: utilizadoresScalarWhereWithAggregatesInput | utilizadoresScalarWhereWithAggregatesInput[]
    OR?: utilizadoresScalarWhereWithAggregatesInput[]
    NOT?: utilizadoresScalarWhereWithAggregatesInput | utilizadoresScalarWhereWithAggregatesInput[]
    id_utilizador?: IntWithAggregatesFilter<"utilizadores"> | number
    Nome?: StringNullableWithAggregatesFilter<"utilizadores"> | string | null
    Email?: StringNullableWithAggregatesFilter<"utilizadores"> | string | null
    Dia_semana?: StringNullableWithAggregatesFilter<"utilizadores"> | string | null
    Hora_Inicio?: DateTimeNullableWithAggregatesFilter<"utilizadores"> | Date | string | null
    Hora_Fim?: DateTimeNullableWithAggregatesFilter<"utilizadores"> | Date | string | null
  }

  export type disciplinasCreateInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    professores?: professoresCreateNestedOneWithoutDisciplinasInput
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasUncheckedCreateInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    id_professor?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasUpdateInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    professores?: professoresUpdateOneWithoutDisciplinasNestedInput
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasUncheckedUpdateInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    id_professor?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasCreateManyInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    id_professor?: number | null
  }

  export type disciplinasUpdateManyMutationInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type disciplinasUncheckedUpdateManyInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    id_professor?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type disciplinas_horariosCreateInput = {
    disciplinas: disciplinasCreateNestedOneWithoutDisciplinas_horariosInput
    horarios: horariosCreateNestedOneWithoutDisciplinas_horariosInput
  }

  export type disciplinas_horariosUncheckedCreateInput = {
    id_disciplina: number
    id_horario: number
  }

  export type disciplinas_horariosUpdateInput = {
    disciplinas?: disciplinasUpdateOneRequiredWithoutDisciplinas_horariosNestedInput
    horarios?: horariosUpdateOneRequiredWithoutDisciplinas_horariosNestedInput
  }

  export type disciplinas_horariosUncheckedUpdateInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_horariosCreateManyInput = {
    id_disciplina: number
    id_horario: number
  }

  export type disciplinas_horariosUpdateManyMutationInput = {

  }

  export type disciplinas_horariosUncheckedUpdateManyInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_professoresCreateInput = {
    disciplinas: disciplinasCreateNestedOneWithoutDisciplinas_professoresInput
    professores: professoresCreateNestedOneWithoutDisciplinas_professoresInput
  }

  export type disciplinas_professoresUncheckedCreateInput = {
    id_disciplina: number
    id_professor: number
  }

  export type disciplinas_professoresUpdateInput = {
    disciplinas?: disciplinasUpdateOneRequiredWithoutDisciplinas_professoresNestedInput
    professores?: professoresUpdateOneRequiredWithoutDisciplinas_professoresNestedInput
  }

  export type disciplinas_professoresUncheckedUpdateInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    id_professor?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_professoresCreateManyInput = {
    id_disciplina: number
    id_professor: number
  }

  export type disciplinas_professoresUpdateManyMutationInput = {

  }

  export type disciplinas_professoresUncheckedUpdateManyInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    id_professor?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_utilizadoresCreateInput = {
    disciplinas: disciplinasCreateNestedOneWithoutDisciplinas_utilizadoresInput
    utilizadores: utilizadoresCreateNestedOneWithoutDisciplinas_utilizadoresInput
  }

  export type disciplinas_utilizadoresUncheckedCreateInput = {
    id_disciplina: number
    id_utilizador: number
  }

  export type disciplinas_utilizadoresUpdateInput = {
    disciplinas?: disciplinasUpdateOneRequiredWithoutDisciplinas_utilizadoresNestedInput
    utilizadores?: utilizadoresUpdateOneRequiredWithoutDisciplinas_utilizadoresNestedInput
  }

  export type disciplinas_utilizadoresUncheckedUpdateInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_utilizadoresCreateManyInput = {
    id_disciplina: number
    id_utilizador: number
  }

  export type disciplinas_utilizadoresUpdateManyMutationInput = {

  }

  export type disciplinas_utilizadoresUncheckedUpdateManyInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    id_utilizador?: IntFieldUpdateOperationsInput | number
  }

  export type horariosCreateInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutHorariosInput
    utilizadores?: utilizadoresCreateNestedOneWithoutHorariosInput
    salas?: salasCreateNestedOneWithoutHorariosInput
    salas_horarios?: salas_horariosCreateNestedManyWithoutHorariosInput
  }

  export type horariosUncheckedCreateInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_utilizador?: number | null
    id_sala?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutHorariosInput
    salas_horarios?: salas_horariosUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type horariosUpdateInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutHorariosNestedInput
    utilizadores?: utilizadoresUpdateOneWithoutHorariosNestedInput
    salas?: salasUpdateOneWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUpdateManyWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_sala?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type horariosCreateManyInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_utilizador?: number | null
    id_sala?: number | null
  }

  export type horariosUpdateManyMutationInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type horariosUncheckedUpdateManyInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_sala?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type professoresCreateInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
    disciplinas?: disciplinasCreateNestedManyWithoutProfessoresInput
    disciplinas_professores?: disciplinas_professoresCreateNestedManyWithoutProfessoresInput
  }

  export type professoresUncheckedCreateInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
    disciplinas?: disciplinasUncheckedCreateNestedManyWithoutProfessoresInput
    disciplinas_professores?: disciplinas_professoresUncheckedCreateNestedManyWithoutProfessoresInput
  }

  export type professoresUpdateInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
    disciplinas?: disciplinasUpdateManyWithoutProfessoresNestedInput
    disciplinas_professores?: disciplinas_professoresUpdateManyWithoutProfessoresNestedInput
  }

  export type professoresUncheckedUpdateInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
    disciplinas?: disciplinasUncheckedUpdateManyWithoutProfessoresNestedInput
    disciplinas_professores?: disciplinas_professoresUncheckedUpdateManyWithoutProfessoresNestedInput
  }

  export type professoresCreateManyInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
  }

  export type professoresUpdateManyMutationInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type professoresUncheckedUpdateManyInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type salasCreateInput = {
    id_sala: number
    Detalhe?: string | null
    horarios?: horariosCreateNestedManyWithoutSalasInput
    salas_horarios?: salas_horariosCreateNestedManyWithoutSalasInput
  }

  export type salasUncheckedCreateInput = {
    id_sala: number
    Detalhe?: string | null
    horarios?: horariosUncheckedCreateNestedManyWithoutSalasInput
    salas_horarios?: salas_horariosUncheckedCreateNestedManyWithoutSalasInput
  }

  export type salasUpdateInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
    horarios?: horariosUpdateManyWithoutSalasNestedInput
    salas_horarios?: salas_horariosUpdateManyWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
    horarios?: horariosUncheckedUpdateManyWithoutSalasNestedInput
    salas_horarios?: salas_horariosUncheckedUpdateManyWithoutSalasNestedInput
  }

  export type salasCreateManyInput = {
    id_sala: number
    Detalhe?: string | null
  }

  export type salasUpdateManyMutationInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type salasUncheckedUpdateManyInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type salas_horariosCreateInput = {
    salas: salasCreateNestedOneWithoutSalas_horariosInput
    horarios: horariosCreateNestedOneWithoutSalas_horariosInput
  }

  export type salas_horariosUncheckedCreateInput = {
    id_sala: number
    id_horario: number
  }

  export type salas_horariosUpdateInput = {
    salas?: salasUpdateOneRequiredWithoutSalas_horariosNestedInput
    horarios?: horariosUpdateOneRequiredWithoutSalas_horariosNestedInput
  }

  export type salas_horariosUncheckedUpdateInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type salas_horariosCreateManyInput = {
    id_sala: number
    id_horario: number
  }

  export type salas_horariosUpdateManyMutationInput = {

  }

  export type salas_horariosUncheckedUpdateManyInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type semestresCreateInput = {
    id_semestre: number
    Semestre?: string | null
  }

  export type semestresUncheckedCreateInput = {
    id_semestre: number
    Semestre?: string | null
  }

  export type semestresUpdateInput = {
    id_semestre?: IntFieldUpdateOperationsInput | number
    Semestre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type semestresUncheckedUpdateInput = {
    id_semestre?: IntFieldUpdateOperationsInput | number
    Semestre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type semestresCreateManyInput = {
    id_semestre: number
    Semestre?: string | null
  }

  export type semestresUpdateManyMutationInput = {
    id_semestre?: IntFieldUpdateOperationsInput | number
    Semestre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type semestresUncheckedUpdateManyInput = {
    id_semestre?: IntFieldUpdateOperationsInput | number
    Semestre?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type utilizadoresCreateInput = {
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresCreateNestedManyWithoutUtilizadoresInput
    horarios?: horariosCreateNestedManyWithoutUtilizadoresInput
  }

  export type utilizadoresUncheckedCreateInput = {
    id_utilizador?: number
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedCreateNestedManyWithoutUtilizadoresInput
    horarios?: horariosUncheckedCreateNestedManyWithoutUtilizadoresInput
  }

  export type utilizadoresUpdateInput = {
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresUpdateManyWithoutUtilizadoresNestedInput
    horarios?: horariosUpdateManyWithoutUtilizadoresNestedInput
  }

  export type utilizadoresUncheckedUpdateInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedUpdateManyWithoutUtilizadoresNestedInput
    horarios?: horariosUncheckedUpdateManyWithoutUtilizadoresNestedInput
  }

  export type utilizadoresCreateManyInput = {
    id_utilizador?: number
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
  }

  export type utilizadoresUpdateManyMutationInput = {
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type utilizadoresUncheckedUpdateManyInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ProfessoresNullableRelationFilter = {
    is?: professoresWhereInput | null
    isNot?: professoresWhereInput | null
  }

  export type Disciplinas_horariosListRelationFilter = {
    every?: disciplinas_horariosWhereInput
    some?: disciplinas_horariosWhereInput
    none?: disciplinas_horariosWhereInput
  }

  export type Disciplinas_professoresListRelationFilter = {
    every?: disciplinas_professoresWhereInput
    some?: disciplinas_professoresWhereInput
    none?: disciplinas_professoresWhereInput
  }

  export type Disciplinas_utilizadoresListRelationFilter = {
    every?: disciplinas_utilizadoresWhereInput
    some?: disciplinas_utilizadoresWhereInput
    none?: disciplinas_utilizadoresWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type disciplinas_horariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disciplinas_professoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disciplinas_utilizadoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type disciplinasCountOrderByAggregateInput = {
    id_disciplina?: SortOrder
    Nome?: SortOrder
    Numero?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinasAvgOrderByAggregateInput = {
    id_disciplina?: SortOrder
    Numero?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinasMaxOrderByAggregateInput = {
    id_disciplina?: SortOrder
    Nome?: SortOrder
    Numero?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinasMinOrderByAggregateInput = {
    id_disciplina?: SortOrder
    Nome?: SortOrder
    Numero?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinasSumOrderByAggregateInput = {
    id_disciplina?: SortOrder
    Numero?: SortOrder
    id_professor?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DisciplinasRelationFilter = {
    is?: disciplinasWhereInput
    isNot?: disciplinasWhereInput
  }

  export type HorariosRelationFilter = {
    is?: horariosWhereInput
    isNot?: horariosWhereInput
  }

  export type disciplinas_horariosId_disciplinaId_horarioCompoundUniqueInput = {
    id_disciplina: number
    id_horario: number
  }

  export type disciplinas_horariosCountOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
  }

  export type disciplinas_horariosAvgOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
  }

  export type disciplinas_horariosMaxOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
  }

  export type disciplinas_horariosMinOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
  }

  export type disciplinas_horariosSumOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_horario?: SortOrder
  }

  export type ProfessoresRelationFilter = {
    is?: professoresWhereInput
    isNot?: professoresWhereInput
  }

  export type disciplinas_professoresId_disciplinaId_professorCompoundUniqueInput = {
    id_disciplina: number
    id_professor: number
  }

  export type disciplinas_professoresCountOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinas_professoresAvgOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinas_professoresMaxOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinas_professoresMinOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
  }

  export type disciplinas_professoresSumOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_professor?: SortOrder
  }

  export type UtilizadoresRelationFilter = {
    is?: utilizadoresWhereInput
    isNot?: utilizadoresWhereInput
  }

  export type disciplinas_utilizadoresId_disciplinaId_utilizadorCompoundUniqueInput = {
    id_disciplina: number
    id_utilizador: number
  }

  export type disciplinas_utilizadoresCountOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type disciplinas_utilizadoresAvgOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type disciplinas_utilizadoresMaxOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type disciplinas_utilizadoresMinOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type disciplinas_utilizadoresSumOrderByAggregateInput = {
    id_disciplina?: SortOrder
    id_utilizador?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UtilizadoresNullableRelationFilter = {
    is?: utilizadoresWhereInput | null
    isNot?: utilizadoresWhereInput | null
  }

  export type SalasNullableRelationFilter = {
    is?: salasWhereInput | null
    isNot?: salasWhereInput | null
  }

  export type Salas_horariosListRelationFilter = {
    every?: salas_horariosWhereInput
    some?: salas_horariosWhereInput
    none?: salas_horariosWhereInput
  }

  export type salas_horariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type horariosCountOrderByAggregateInput = {
    id_horario?: SortOrder
    Data_inicio?: SortOrder
    Data_fim?: SortOrder
    id_utilizador?: SortOrder
    id_sala?: SortOrder
  }

  export type horariosAvgOrderByAggregateInput = {
    id_horario?: SortOrder
    id_utilizador?: SortOrder
    id_sala?: SortOrder
  }

  export type horariosMaxOrderByAggregateInput = {
    id_horario?: SortOrder
    Data_inicio?: SortOrder
    Data_fim?: SortOrder
    id_utilizador?: SortOrder
    id_sala?: SortOrder
  }

  export type horariosMinOrderByAggregateInput = {
    id_horario?: SortOrder
    Data_inicio?: SortOrder
    Data_fim?: SortOrder
    id_utilizador?: SortOrder
    id_sala?: SortOrder
  }

  export type horariosSumOrderByAggregateInput = {
    id_horario?: SortOrder
    id_utilizador?: SortOrder
    id_sala?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DisciplinasListRelationFilter = {
    every?: disciplinasWhereInput
    some?: disciplinasWhereInput
    none?: disciplinasWhereInput
  }

  export type disciplinasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type professoresCountOrderByAggregateInput = {
    id_professor?: SortOrder
    Nome?: SortOrder
    Email?: SortOrder
    Carga?: SortOrder
    Descricao?: SortOrder
  }

  export type professoresAvgOrderByAggregateInput = {
    id_professor?: SortOrder
    Carga?: SortOrder
  }

  export type professoresMaxOrderByAggregateInput = {
    id_professor?: SortOrder
    Nome?: SortOrder
    Email?: SortOrder
    Carga?: SortOrder
    Descricao?: SortOrder
  }

  export type professoresMinOrderByAggregateInput = {
    id_professor?: SortOrder
    Nome?: SortOrder
    Email?: SortOrder
    Carga?: SortOrder
    Descricao?: SortOrder
  }

  export type professoresSumOrderByAggregateInput = {
    id_professor?: SortOrder
    Carga?: SortOrder
  }

  export type HorariosListRelationFilter = {
    every?: horariosWhereInput
    some?: horariosWhereInput
    none?: horariosWhereInput
  }

  export type horariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type salasCountOrderByAggregateInput = {
    id_sala?: SortOrder
    Detalhe?: SortOrder
  }

  export type salasAvgOrderByAggregateInput = {
    id_sala?: SortOrder
  }

  export type salasMaxOrderByAggregateInput = {
    id_sala?: SortOrder
    Detalhe?: SortOrder
  }

  export type salasMinOrderByAggregateInput = {
    id_sala?: SortOrder
    Detalhe?: SortOrder
  }

  export type salasSumOrderByAggregateInput = {
    id_sala?: SortOrder
  }

  export type SalasRelationFilter = {
    is?: salasWhereInput
    isNot?: salasWhereInput
  }

  export type salas_horariosId_salaId_horarioCompoundUniqueInput = {
    id_sala: number
    id_horario: number
  }

  export type salas_horariosCountOrderByAggregateInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
  }

  export type salas_horariosAvgOrderByAggregateInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
  }

  export type salas_horariosMaxOrderByAggregateInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
  }

  export type salas_horariosMinOrderByAggregateInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
  }

  export type salas_horariosSumOrderByAggregateInput = {
    id_sala?: SortOrder
    id_horario?: SortOrder
  }

  export type semestresCountOrderByAggregateInput = {
    id_semestre?: SortOrder
    Semestre?: SortOrder
  }

  export type semestresAvgOrderByAggregateInput = {
    id_semestre?: SortOrder
  }

  export type semestresMaxOrderByAggregateInput = {
    id_semestre?: SortOrder
    Semestre?: SortOrder
  }

  export type semestresMinOrderByAggregateInput = {
    id_semestre?: SortOrder
    Semestre?: SortOrder
  }

  export type semestresSumOrderByAggregateInput = {
    id_semestre?: SortOrder
  }

  export type utilizadoresCountOrderByAggregateInput = {
    id_utilizador?: SortOrder
    Nome?: SortOrder
    Email?: SortOrder
    Dia_semana?: SortOrder
    Hora_Inicio?: SortOrder
    Hora_Fim?: SortOrder
  }

  export type utilizadoresAvgOrderByAggregateInput = {
    id_utilizador?: SortOrder
  }

  export type utilizadoresMaxOrderByAggregateInput = {
    id_utilizador?: SortOrder
    Nome?: SortOrder
    Email?: SortOrder
    Dia_semana?: SortOrder
    Hora_Inicio?: SortOrder
    Hora_Fim?: SortOrder
  }

  export type utilizadoresMinOrderByAggregateInput = {
    id_utilizador?: SortOrder
    Nome?: SortOrder
    Email?: SortOrder
    Dia_semana?: SortOrder
    Hora_Inicio?: SortOrder
    Hora_Fim?: SortOrder
  }

  export type utilizadoresSumOrderByAggregateInput = {
    id_utilizador?: SortOrder
  }

  export type professoresCreateNestedOneWithoutDisciplinasInput = {
    create?: XOR<professoresCreateWithoutDisciplinasInput, professoresUncheckedCreateWithoutDisciplinasInput>
    connectOrCreate?: professoresCreateOrConnectWithoutDisciplinasInput
    connect?: professoresWhereUniqueInput
  }

  export type disciplinas_horariosCreateNestedManyWithoutDisciplinasInput = {
    create?: XOR<disciplinas_horariosCreateWithoutDisciplinasInput, disciplinas_horariosUncheckedCreateWithoutDisciplinasInput> | disciplinas_horariosCreateWithoutDisciplinasInput[] | disciplinas_horariosUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutDisciplinasInput | disciplinas_horariosCreateOrConnectWithoutDisciplinasInput[]
    createMany?: disciplinas_horariosCreateManyDisciplinasInputEnvelope
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
  }

  export type disciplinas_professoresCreateNestedManyWithoutDisciplinasInput = {
    create?: XOR<disciplinas_professoresCreateWithoutDisciplinasInput, disciplinas_professoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_professoresCreateWithoutDisciplinasInput[] | disciplinas_professoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutDisciplinasInput | disciplinas_professoresCreateOrConnectWithoutDisciplinasInput[]
    createMany?: disciplinas_professoresCreateManyDisciplinasInputEnvelope
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
  }

  export type disciplinas_utilizadoresCreateNestedManyWithoutDisciplinasInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_utilizadoresCreateWithoutDisciplinasInput[] | disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput | disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput[]
    createMany?: disciplinas_utilizadoresCreateManyDisciplinasInputEnvelope
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
  }

  export type disciplinas_horariosUncheckedCreateNestedManyWithoutDisciplinasInput = {
    create?: XOR<disciplinas_horariosCreateWithoutDisciplinasInput, disciplinas_horariosUncheckedCreateWithoutDisciplinasInput> | disciplinas_horariosCreateWithoutDisciplinasInput[] | disciplinas_horariosUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutDisciplinasInput | disciplinas_horariosCreateOrConnectWithoutDisciplinasInput[]
    createMany?: disciplinas_horariosCreateManyDisciplinasInputEnvelope
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
  }

  export type disciplinas_professoresUncheckedCreateNestedManyWithoutDisciplinasInput = {
    create?: XOR<disciplinas_professoresCreateWithoutDisciplinasInput, disciplinas_professoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_professoresCreateWithoutDisciplinasInput[] | disciplinas_professoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutDisciplinasInput | disciplinas_professoresCreateOrConnectWithoutDisciplinasInput[]
    createMany?: disciplinas_professoresCreateManyDisciplinasInputEnvelope
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
  }

  export type disciplinas_utilizadoresUncheckedCreateNestedManyWithoutDisciplinasInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_utilizadoresCreateWithoutDisciplinasInput[] | disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput | disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput[]
    createMany?: disciplinas_utilizadoresCreateManyDisciplinasInputEnvelope
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type professoresUpdateOneWithoutDisciplinasNestedInput = {
    create?: XOR<professoresCreateWithoutDisciplinasInput, professoresUncheckedCreateWithoutDisciplinasInput>
    connectOrCreate?: professoresCreateOrConnectWithoutDisciplinasInput
    upsert?: professoresUpsertWithoutDisciplinasInput
    disconnect?: professoresWhereInput | boolean
    delete?: professoresWhereInput | boolean
    connect?: professoresWhereUniqueInput
    update?: XOR<XOR<professoresUpdateToOneWithWhereWithoutDisciplinasInput, professoresUpdateWithoutDisciplinasInput>, professoresUncheckedUpdateWithoutDisciplinasInput>
  }

  export type disciplinas_horariosUpdateManyWithoutDisciplinasNestedInput = {
    create?: XOR<disciplinas_horariosCreateWithoutDisciplinasInput, disciplinas_horariosUncheckedCreateWithoutDisciplinasInput> | disciplinas_horariosCreateWithoutDisciplinasInput[] | disciplinas_horariosUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutDisciplinasInput | disciplinas_horariosCreateOrConnectWithoutDisciplinasInput[]
    upsert?: disciplinas_horariosUpsertWithWhereUniqueWithoutDisciplinasInput | disciplinas_horariosUpsertWithWhereUniqueWithoutDisciplinasInput[]
    createMany?: disciplinas_horariosCreateManyDisciplinasInputEnvelope
    set?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    disconnect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    delete?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    update?: disciplinas_horariosUpdateWithWhereUniqueWithoutDisciplinasInput | disciplinas_horariosUpdateWithWhereUniqueWithoutDisciplinasInput[]
    updateMany?: disciplinas_horariosUpdateManyWithWhereWithoutDisciplinasInput | disciplinas_horariosUpdateManyWithWhereWithoutDisciplinasInput[]
    deleteMany?: disciplinas_horariosScalarWhereInput | disciplinas_horariosScalarWhereInput[]
  }

  export type disciplinas_professoresUpdateManyWithoutDisciplinasNestedInput = {
    create?: XOR<disciplinas_professoresCreateWithoutDisciplinasInput, disciplinas_professoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_professoresCreateWithoutDisciplinasInput[] | disciplinas_professoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutDisciplinasInput | disciplinas_professoresCreateOrConnectWithoutDisciplinasInput[]
    upsert?: disciplinas_professoresUpsertWithWhereUniqueWithoutDisciplinasInput | disciplinas_professoresUpsertWithWhereUniqueWithoutDisciplinasInput[]
    createMany?: disciplinas_professoresCreateManyDisciplinasInputEnvelope
    set?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    disconnect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    delete?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    update?: disciplinas_professoresUpdateWithWhereUniqueWithoutDisciplinasInput | disciplinas_professoresUpdateWithWhereUniqueWithoutDisciplinasInput[]
    updateMany?: disciplinas_professoresUpdateManyWithWhereWithoutDisciplinasInput | disciplinas_professoresUpdateManyWithWhereWithoutDisciplinasInput[]
    deleteMany?: disciplinas_professoresScalarWhereInput | disciplinas_professoresScalarWhereInput[]
  }

  export type disciplinas_utilizadoresUpdateManyWithoutDisciplinasNestedInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_utilizadoresCreateWithoutDisciplinasInput[] | disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput | disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput[]
    upsert?: disciplinas_utilizadoresUpsertWithWhereUniqueWithoutDisciplinasInput | disciplinas_utilizadoresUpsertWithWhereUniqueWithoutDisciplinasInput[]
    createMany?: disciplinas_utilizadoresCreateManyDisciplinasInputEnvelope
    set?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    disconnect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    delete?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    update?: disciplinas_utilizadoresUpdateWithWhereUniqueWithoutDisciplinasInput | disciplinas_utilizadoresUpdateWithWhereUniqueWithoutDisciplinasInput[]
    updateMany?: disciplinas_utilizadoresUpdateManyWithWhereWithoutDisciplinasInput | disciplinas_utilizadoresUpdateManyWithWhereWithoutDisciplinasInput[]
    deleteMany?: disciplinas_utilizadoresScalarWhereInput | disciplinas_utilizadoresScalarWhereInput[]
  }

  export type disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasNestedInput = {
    create?: XOR<disciplinas_horariosCreateWithoutDisciplinasInput, disciplinas_horariosUncheckedCreateWithoutDisciplinasInput> | disciplinas_horariosCreateWithoutDisciplinasInput[] | disciplinas_horariosUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutDisciplinasInput | disciplinas_horariosCreateOrConnectWithoutDisciplinasInput[]
    upsert?: disciplinas_horariosUpsertWithWhereUniqueWithoutDisciplinasInput | disciplinas_horariosUpsertWithWhereUniqueWithoutDisciplinasInput[]
    createMany?: disciplinas_horariosCreateManyDisciplinasInputEnvelope
    set?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    disconnect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    delete?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    update?: disciplinas_horariosUpdateWithWhereUniqueWithoutDisciplinasInput | disciplinas_horariosUpdateWithWhereUniqueWithoutDisciplinasInput[]
    updateMany?: disciplinas_horariosUpdateManyWithWhereWithoutDisciplinasInput | disciplinas_horariosUpdateManyWithWhereWithoutDisciplinasInput[]
    deleteMany?: disciplinas_horariosScalarWhereInput | disciplinas_horariosScalarWhereInput[]
  }

  export type disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasNestedInput = {
    create?: XOR<disciplinas_professoresCreateWithoutDisciplinasInput, disciplinas_professoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_professoresCreateWithoutDisciplinasInput[] | disciplinas_professoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutDisciplinasInput | disciplinas_professoresCreateOrConnectWithoutDisciplinasInput[]
    upsert?: disciplinas_professoresUpsertWithWhereUniqueWithoutDisciplinasInput | disciplinas_professoresUpsertWithWhereUniqueWithoutDisciplinasInput[]
    createMany?: disciplinas_professoresCreateManyDisciplinasInputEnvelope
    set?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    disconnect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    delete?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    update?: disciplinas_professoresUpdateWithWhereUniqueWithoutDisciplinasInput | disciplinas_professoresUpdateWithWhereUniqueWithoutDisciplinasInput[]
    updateMany?: disciplinas_professoresUpdateManyWithWhereWithoutDisciplinasInput | disciplinas_professoresUpdateManyWithWhereWithoutDisciplinasInput[]
    deleteMany?: disciplinas_professoresScalarWhereInput | disciplinas_professoresScalarWhereInput[]
  }

  export type disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasNestedInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput> | disciplinas_utilizadoresCreateWithoutDisciplinasInput[] | disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput | disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput[]
    upsert?: disciplinas_utilizadoresUpsertWithWhereUniqueWithoutDisciplinasInput | disciplinas_utilizadoresUpsertWithWhereUniqueWithoutDisciplinasInput[]
    createMany?: disciplinas_utilizadoresCreateManyDisciplinasInputEnvelope
    set?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    disconnect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    delete?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    update?: disciplinas_utilizadoresUpdateWithWhereUniqueWithoutDisciplinasInput | disciplinas_utilizadoresUpdateWithWhereUniqueWithoutDisciplinasInput[]
    updateMany?: disciplinas_utilizadoresUpdateManyWithWhereWithoutDisciplinasInput | disciplinas_utilizadoresUpdateManyWithWhereWithoutDisciplinasInput[]
    deleteMany?: disciplinas_utilizadoresScalarWhereInput | disciplinas_utilizadoresScalarWhereInput[]
  }

  export type disciplinasCreateNestedOneWithoutDisciplinas_horariosInput = {
    create?: XOR<disciplinasCreateWithoutDisciplinas_horariosInput, disciplinasUncheckedCreateWithoutDisciplinas_horariosInput>
    connectOrCreate?: disciplinasCreateOrConnectWithoutDisciplinas_horariosInput
    connect?: disciplinasWhereUniqueInput
  }

  export type horariosCreateNestedOneWithoutDisciplinas_horariosInput = {
    create?: XOR<horariosCreateWithoutDisciplinas_horariosInput, horariosUncheckedCreateWithoutDisciplinas_horariosInput>
    connectOrCreate?: horariosCreateOrConnectWithoutDisciplinas_horariosInput
    connect?: horariosWhereUniqueInput
  }

  export type disciplinasUpdateOneRequiredWithoutDisciplinas_horariosNestedInput = {
    create?: XOR<disciplinasCreateWithoutDisciplinas_horariosInput, disciplinasUncheckedCreateWithoutDisciplinas_horariosInput>
    connectOrCreate?: disciplinasCreateOrConnectWithoutDisciplinas_horariosInput
    upsert?: disciplinasUpsertWithoutDisciplinas_horariosInput
    connect?: disciplinasWhereUniqueInput
    update?: XOR<XOR<disciplinasUpdateToOneWithWhereWithoutDisciplinas_horariosInput, disciplinasUpdateWithoutDisciplinas_horariosInput>, disciplinasUncheckedUpdateWithoutDisciplinas_horariosInput>
  }

  export type horariosUpdateOneRequiredWithoutDisciplinas_horariosNestedInput = {
    create?: XOR<horariosCreateWithoutDisciplinas_horariosInput, horariosUncheckedCreateWithoutDisciplinas_horariosInput>
    connectOrCreate?: horariosCreateOrConnectWithoutDisciplinas_horariosInput
    upsert?: horariosUpsertWithoutDisciplinas_horariosInput
    connect?: horariosWhereUniqueInput
    update?: XOR<XOR<horariosUpdateToOneWithWhereWithoutDisciplinas_horariosInput, horariosUpdateWithoutDisciplinas_horariosInput>, horariosUncheckedUpdateWithoutDisciplinas_horariosInput>
  }

  export type disciplinasCreateNestedOneWithoutDisciplinas_professoresInput = {
    create?: XOR<disciplinasCreateWithoutDisciplinas_professoresInput, disciplinasUncheckedCreateWithoutDisciplinas_professoresInput>
    connectOrCreate?: disciplinasCreateOrConnectWithoutDisciplinas_professoresInput
    connect?: disciplinasWhereUniqueInput
  }

  export type professoresCreateNestedOneWithoutDisciplinas_professoresInput = {
    create?: XOR<professoresCreateWithoutDisciplinas_professoresInput, professoresUncheckedCreateWithoutDisciplinas_professoresInput>
    connectOrCreate?: professoresCreateOrConnectWithoutDisciplinas_professoresInput
    connect?: professoresWhereUniqueInput
  }

  export type disciplinasUpdateOneRequiredWithoutDisciplinas_professoresNestedInput = {
    create?: XOR<disciplinasCreateWithoutDisciplinas_professoresInput, disciplinasUncheckedCreateWithoutDisciplinas_professoresInput>
    connectOrCreate?: disciplinasCreateOrConnectWithoutDisciplinas_professoresInput
    upsert?: disciplinasUpsertWithoutDisciplinas_professoresInput
    connect?: disciplinasWhereUniqueInput
    update?: XOR<XOR<disciplinasUpdateToOneWithWhereWithoutDisciplinas_professoresInput, disciplinasUpdateWithoutDisciplinas_professoresInput>, disciplinasUncheckedUpdateWithoutDisciplinas_professoresInput>
  }

  export type professoresUpdateOneRequiredWithoutDisciplinas_professoresNestedInput = {
    create?: XOR<professoresCreateWithoutDisciplinas_professoresInput, professoresUncheckedCreateWithoutDisciplinas_professoresInput>
    connectOrCreate?: professoresCreateOrConnectWithoutDisciplinas_professoresInput
    upsert?: professoresUpsertWithoutDisciplinas_professoresInput
    connect?: professoresWhereUniqueInput
    update?: XOR<XOR<professoresUpdateToOneWithWhereWithoutDisciplinas_professoresInput, professoresUpdateWithoutDisciplinas_professoresInput>, professoresUncheckedUpdateWithoutDisciplinas_professoresInput>
  }

  export type disciplinasCreateNestedOneWithoutDisciplinas_utilizadoresInput = {
    create?: XOR<disciplinasCreateWithoutDisciplinas_utilizadoresInput, disciplinasUncheckedCreateWithoutDisciplinas_utilizadoresInput>
    connectOrCreate?: disciplinasCreateOrConnectWithoutDisciplinas_utilizadoresInput
    connect?: disciplinasWhereUniqueInput
  }

  export type utilizadoresCreateNestedOneWithoutDisciplinas_utilizadoresInput = {
    create?: XOR<utilizadoresCreateWithoutDisciplinas_utilizadoresInput, utilizadoresUncheckedCreateWithoutDisciplinas_utilizadoresInput>
    connectOrCreate?: utilizadoresCreateOrConnectWithoutDisciplinas_utilizadoresInput
    connect?: utilizadoresWhereUniqueInput
  }

  export type disciplinasUpdateOneRequiredWithoutDisciplinas_utilizadoresNestedInput = {
    create?: XOR<disciplinasCreateWithoutDisciplinas_utilizadoresInput, disciplinasUncheckedCreateWithoutDisciplinas_utilizadoresInput>
    connectOrCreate?: disciplinasCreateOrConnectWithoutDisciplinas_utilizadoresInput
    upsert?: disciplinasUpsertWithoutDisciplinas_utilizadoresInput
    connect?: disciplinasWhereUniqueInput
    update?: XOR<XOR<disciplinasUpdateToOneWithWhereWithoutDisciplinas_utilizadoresInput, disciplinasUpdateWithoutDisciplinas_utilizadoresInput>, disciplinasUncheckedUpdateWithoutDisciplinas_utilizadoresInput>
  }

  export type utilizadoresUpdateOneRequiredWithoutDisciplinas_utilizadoresNestedInput = {
    create?: XOR<utilizadoresCreateWithoutDisciplinas_utilizadoresInput, utilizadoresUncheckedCreateWithoutDisciplinas_utilizadoresInput>
    connectOrCreate?: utilizadoresCreateOrConnectWithoutDisciplinas_utilizadoresInput
    upsert?: utilizadoresUpsertWithoutDisciplinas_utilizadoresInput
    connect?: utilizadoresWhereUniqueInput
    update?: XOR<XOR<utilizadoresUpdateToOneWithWhereWithoutDisciplinas_utilizadoresInput, utilizadoresUpdateWithoutDisciplinas_utilizadoresInput>, utilizadoresUncheckedUpdateWithoutDisciplinas_utilizadoresInput>
  }

  export type disciplinas_horariosCreateNestedManyWithoutHorariosInput = {
    create?: XOR<disciplinas_horariosCreateWithoutHorariosInput, disciplinas_horariosUncheckedCreateWithoutHorariosInput> | disciplinas_horariosCreateWithoutHorariosInput[] | disciplinas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutHorariosInput | disciplinas_horariosCreateOrConnectWithoutHorariosInput[]
    createMany?: disciplinas_horariosCreateManyHorariosInputEnvelope
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
  }

  export type utilizadoresCreateNestedOneWithoutHorariosInput = {
    create?: XOR<utilizadoresCreateWithoutHorariosInput, utilizadoresUncheckedCreateWithoutHorariosInput>
    connectOrCreate?: utilizadoresCreateOrConnectWithoutHorariosInput
    connect?: utilizadoresWhereUniqueInput
  }

  export type salasCreateNestedOneWithoutHorariosInput = {
    create?: XOR<salasCreateWithoutHorariosInput, salasUncheckedCreateWithoutHorariosInput>
    connectOrCreate?: salasCreateOrConnectWithoutHorariosInput
    connect?: salasWhereUniqueInput
  }

  export type salas_horariosCreateNestedManyWithoutHorariosInput = {
    create?: XOR<salas_horariosCreateWithoutHorariosInput, salas_horariosUncheckedCreateWithoutHorariosInput> | salas_horariosCreateWithoutHorariosInput[] | salas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutHorariosInput | salas_horariosCreateOrConnectWithoutHorariosInput[]
    createMany?: salas_horariosCreateManyHorariosInputEnvelope
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
  }

  export type disciplinas_horariosUncheckedCreateNestedManyWithoutHorariosInput = {
    create?: XOR<disciplinas_horariosCreateWithoutHorariosInput, disciplinas_horariosUncheckedCreateWithoutHorariosInput> | disciplinas_horariosCreateWithoutHorariosInput[] | disciplinas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutHorariosInput | disciplinas_horariosCreateOrConnectWithoutHorariosInput[]
    createMany?: disciplinas_horariosCreateManyHorariosInputEnvelope
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
  }

  export type salas_horariosUncheckedCreateNestedManyWithoutHorariosInput = {
    create?: XOR<salas_horariosCreateWithoutHorariosInput, salas_horariosUncheckedCreateWithoutHorariosInput> | salas_horariosCreateWithoutHorariosInput[] | salas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutHorariosInput | salas_horariosCreateOrConnectWithoutHorariosInput[]
    createMany?: salas_horariosCreateManyHorariosInputEnvelope
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type disciplinas_horariosUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<disciplinas_horariosCreateWithoutHorariosInput, disciplinas_horariosUncheckedCreateWithoutHorariosInput> | disciplinas_horariosCreateWithoutHorariosInput[] | disciplinas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutHorariosInput | disciplinas_horariosCreateOrConnectWithoutHorariosInput[]
    upsert?: disciplinas_horariosUpsertWithWhereUniqueWithoutHorariosInput | disciplinas_horariosUpsertWithWhereUniqueWithoutHorariosInput[]
    createMany?: disciplinas_horariosCreateManyHorariosInputEnvelope
    set?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    disconnect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    delete?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    update?: disciplinas_horariosUpdateWithWhereUniqueWithoutHorariosInput | disciplinas_horariosUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: disciplinas_horariosUpdateManyWithWhereWithoutHorariosInput | disciplinas_horariosUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: disciplinas_horariosScalarWhereInput | disciplinas_horariosScalarWhereInput[]
  }

  export type utilizadoresUpdateOneWithoutHorariosNestedInput = {
    create?: XOR<utilizadoresCreateWithoutHorariosInput, utilizadoresUncheckedCreateWithoutHorariosInput>
    connectOrCreate?: utilizadoresCreateOrConnectWithoutHorariosInput
    upsert?: utilizadoresUpsertWithoutHorariosInput
    disconnect?: utilizadoresWhereInput | boolean
    delete?: utilizadoresWhereInput | boolean
    connect?: utilizadoresWhereUniqueInput
    update?: XOR<XOR<utilizadoresUpdateToOneWithWhereWithoutHorariosInput, utilizadoresUpdateWithoutHorariosInput>, utilizadoresUncheckedUpdateWithoutHorariosInput>
  }

  export type salasUpdateOneWithoutHorariosNestedInput = {
    create?: XOR<salasCreateWithoutHorariosInput, salasUncheckedCreateWithoutHorariosInput>
    connectOrCreate?: salasCreateOrConnectWithoutHorariosInput
    upsert?: salasUpsertWithoutHorariosInput
    disconnect?: salasWhereInput | boolean
    delete?: salasWhereInput | boolean
    connect?: salasWhereUniqueInput
    update?: XOR<XOR<salasUpdateToOneWithWhereWithoutHorariosInput, salasUpdateWithoutHorariosInput>, salasUncheckedUpdateWithoutHorariosInput>
  }

  export type salas_horariosUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<salas_horariosCreateWithoutHorariosInput, salas_horariosUncheckedCreateWithoutHorariosInput> | salas_horariosCreateWithoutHorariosInput[] | salas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutHorariosInput | salas_horariosCreateOrConnectWithoutHorariosInput[]
    upsert?: salas_horariosUpsertWithWhereUniqueWithoutHorariosInput | salas_horariosUpsertWithWhereUniqueWithoutHorariosInput[]
    createMany?: salas_horariosCreateManyHorariosInputEnvelope
    set?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    disconnect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    delete?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    update?: salas_horariosUpdateWithWhereUniqueWithoutHorariosInput | salas_horariosUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: salas_horariosUpdateManyWithWhereWithoutHorariosInput | salas_horariosUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: salas_horariosScalarWhereInput | salas_horariosScalarWhereInput[]
  }

  export type disciplinas_horariosUncheckedUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<disciplinas_horariosCreateWithoutHorariosInput, disciplinas_horariosUncheckedCreateWithoutHorariosInput> | disciplinas_horariosCreateWithoutHorariosInput[] | disciplinas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: disciplinas_horariosCreateOrConnectWithoutHorariosInput | disciplinas_horariosCreateOrConnectWithoutHorariosInput[]
    upsert?: disciplinas_horariosUpsertWithWhereUniqueWithoutHorariosInput | disciplinas_horariosUpsertWithWhereUniqueWithoutHorariosInput[]
    createMany?: disciplinas_horariosCreateManyHorariosInputEnvelope
    set?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    disconnect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    delete?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    connect?: disciplinas_horariosWhereUniqueInput | disciplinas_horariosWhereUniqueInput[]
    update?: disciplinas_horariosUpdateWithWhereUniqueWithoutHorariosInput | disciplinas_horariosUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: disciplinas_horariosUpdateManyWithWhereWithoutHorariosInput | disciplinas_horariosUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: disciplinas_horariosScalarWhereInput | disciplinas_horariosScalarWhereInput[]
  }

  export type salas_horariosUncheckedUpdateManyWithoutHorariosNestedInput = {
    create?: XOR<salas_horariosCreateWithoutHorariosInput, salas_horariosUncheckedCreateWithoutHorariosInput> | salas_horariosCreateWithoutHorariosInput[] | salas_horariosUncheckedCreateWithoutHorariosInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutHorariosInput | salas_horariosCreateOrConnectWithoutHorariosInput[]
    upsert?: salas_horariosUpsertWithWhereUniqueWithoutHorariosInput | salas_horariosUpsertWithWhereUniqueWithoutHorariosInput[]
    createMany?: salas_horariosCreateManyHorariosInputEnvelope
    set?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    disconnect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    delete?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    update?: salas_horariosUpdateWithWhereUniqueWithoutHorariosInput | salas_horariosUpdateWithWhereUniqueWithoutHorariosInput[]
    updateMany?: salas_horariosUpdateManyWithWhereWithoutHorariosInput | salas_horariosUpdateManyWithWhereWithoutHorariosInput[]
    deleteMany?: salas_horariosScalarWhereInput | salas_horariosScalarWhereInput[]
  }

  export type disciplinasCreateNestedManyWithoutProfessoresInput = {
    create?: XOR<disciplinasCreateWithoutProfessoresInput, disciplinasUncheckedCreateWithoutProfessoresInput> | disciplinasCreateWithoutProfessoresInput[] | disciplinasUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinasCreateOrConnectWithoutProfessoresInput | disciplinasCreateOrConnectWithoutProfessoresInput[]
    createMany?: disciplinasCreateManyProfessoresInputEnvelope
    connect?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
  }

  export type disciplinas_professoresCreateNestedManyWithoutProfessoresInput = {
    create?: XOR<disciplinas_professoresCreateWithoutProfessoresInput, disciplinas_professoresUncheckedCreateWithoutProfessoresInput> | disciplinas_professoresCreateWithoutProfessoresInput[] | disciplinas_professoresUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutProfessoresInput | disciplinas_professoresCreateOrConnectWithoutProfessoresInput[]
    createMany?: disciplinas_professoresCreateManyProfessoresInputEnvelope
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
  }

  export type disciplinasUncheckedCreateNestedManyWithoutProfessoresInput = {
    create?: XOR<disciplinasCreateWithoutProfessoresInput, disciplinasUncheckedCreateWithoutProfessoresInput> | disciplinasCreateWithoutProfessoresInput[] | disciplinasUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinasCreateOrConnectWithoutProfessoresInput | disciplinasCreateOrConnectWithoutProfessoresInput[]
    createMany?: disciplinasCreateManyProfessoresInputEnvelope
    connect?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
  }

  export type disciplinas_professoresUncheckedCreateNestedManyWithoutProfessoresInput = {
    create?: XOR<disciplinas_professoresCreateWithoutProfessoresInput, disciplinas_professoresUncheckedCreateWithoutProfessoresInput> | disciplinas_professoresCreateWithoutProfessoresInput[] | disciplinas_professoresUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutProfessoresInput | disciplinas_professoresCreateOrConnectWithoutProfessoresInput[]
    createMany?: disciplinas_professoresCreateManyProfessoresInputEnvelope
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
  }

  export type disciplinasUpdateManyWithoutProfessoresNestedInput = {
    create?: XOR<disciplinasCreateWithoutProfessoresInput, disciplinasUncheckedCreateWithoutProfessoresInput> | disciplinasCreateWithoutProfessoresInput[] | disciplinasUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinasCreateOrConnectWithoutProfessoresInput | disciplinasCreateOrConnectWithoutProfessoresInput[]
    upsert?: disciplinasUpsertWithWhereUniqueWithoutProfessoresInput | disciplinasUpsertWithWhereUniqueWithoutProfessoresInput[]
    createMany?: disciplinasCreateManyProfessoresInputEnvelope
    set?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    disconnect?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    delete?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    connect?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    update?: disciplinasUpdateWithWhereUniqueWithoutProfessoresInput | disciplinasUpdateWithWhereUniqueWithoutProfessoresInput[]
    updateMany?: disciplinasUpdateManyWithWhereWithoutProfessoresInput | disciplinasUpdateManyWithWhereWithoutProfessoresInput[]
    deleteMany?: disciplinasScalarWhereInput | disciplinasScalarWhereInput[]
  }

  export type disciplinas_professoresUpdateManyWithoutProfessoresNestedInput = {
    create?: XOR<disciplinas_professoresCreateWithoutProfessoresInput, disciplinas_professoresUncheckedCreateWithoutProfessoresInput> | disciplinas_professoresCreateWithoutProfessoresInput[] | disciplinas_professoresUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutProfessoresInput | disciplinas_professoresCreateOrConnectWithoutProfessoresInput[]
    upsert?: disciplinas_professoresUpsertWithWhereUniqueWithoutProfessoresInput | disciplinas_professoresUpsertWithWhereUniqueWithoutProfessoresInput[]
    createMany?: disciplinas_professoresCreateManyProfessoresInputEnvelope
    set?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    disconnect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    delete?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    update?: disciplinas_professoresUpdateWithWhereUniqueWithoutProfessoresInput | disciplinas_professoresUpdateWithWhereUniqueWithoutProfessoresInput[]
    updateMany?: disciplinas_professoresUpdateManyWithWhereWithoutProfessoresInput | disciplinas_professoresUpdateManyWithWhereWithoutProfessoresInput[]
    deleteMany?: disciplinas_professoresScalarWhereInput | disciplinas_professoresScalarWhereInput[]
  }

  export type disciplinasUncheckedUpdateManyWithoutProfessoresNestedInput = {
    create?: XOR<disciplinasCreateWithoutProfessoresInput, disciplinasUncheckedCreateWithoutProfessoresInput> | disciplinasCreateWithoutProfessoresInput[] | disciplinasUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinasCreateOrConnectWithoutProfessoresInput | disciplinasCreateOrConnectWithoutProfessoresInput[]
    upsert?: disciplinasUpsertWithWhereUniqueWithoutProfessoresInput | disciplinasUpsertWithWhereUniqueWithoutProfessoresInput[]
    createMany?: disciplinasCreateManyProfessoresInputEnvelope
    set?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    disconnect?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    delete?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    connect?: disciplinasWhereUniqueInput | disciplinasWhereUniqueInput[]
    update?: disciplinasUpdateWithWhereUniqueWithoutProfessoresInput | disciplinasUpdateWithWhereUniqueWithoutProfessoresInput[]
    updateMany?: disciplinasUpdateManyWithWhereWithoutProfessoresInput | disciplinasUpdateManyWithWhereWithoutProfessoresInput[]
    deleteMany?: disciplinasScalarWhereInput | disciplinasScalarWhereInput[]
  }

  export type disciplinas_professoresUncheckedUpdateManyWithoutProfessoresNestedInput = {
    create?: XOR<disciplinas_professoresCreateWithoutProfessoresInput, disciplinas_professoresUncheckedCreateWithoutProfessoresInput> | disciplinas_professoresCreateWithoutProfessoresInput[] | disciplinas_professoresUncheckedCreateWithoutProfessoresInput[]
    connectOrCreate?: disciplinas_professoresCreateOrConnectWithoutProfessoresInput | disciplinas_professoresCreateOrConnectWithoutProfessoresInput[]
    upsert?: disciplinas_professoresUpsertWithWhereUniqueWithoutProfessoresInput | disciplinas_professoresUpsertWithWhereUniqueWithoutProfessoresInput[]
    createMany?: disciplinas_professoresCreateManyProfessoresInputEnvelope
    set?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    disconnect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    delete?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    connect?: disciplinas_professoresWhereUniqueInput | disciplinas_professoresWhereUniqueInput[]
    update?: disciplinas_professoresUpdateWithWhereUniqueWithoutProfessoresInput | disciplinas_professoresUpdateWithWhereUniqueWithoutProfessoresInput[]
    updateMany?: disciplinas_professoresUpdateManyWithWhereWithoutProfessoresInput | disciplinas_professoresUpdateManyWithWhereWithoutProfessoresInput[]
    deleteMany?: disciplinas_professoresScalarWhereInput | disciplinas_professoresScalarWhereInput[]
  }

  export type horariosCreateNestedManyWithoutSalasInput = {
    create?: XOR<horariosCreateWithoutSalasInput, horariosUncheckedCreateWithoutSalasInput> | horariosCreateWithoutSalasInput[] | horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutSalasInput | horariosCreateOrConnectWithoutSalasInput[]
    createMany?: horariosCreateManySalasInputEnvelope
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
  }

  export type salas_horariosCreateNestedManyWithoutSalasInput = {
    create?: XOR<salas_horariosCreateWithoutSalasInput, salas_horariosUncheckedCreateWithoutSalasInput> | salas_horariosCreateWithoutSalasInput[] | salas_horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutSalasInput | salas_horariosCreateOrConnectWithoutSalasInput[]
    createMany?: salas_horariosCreateManySalasInputEnvelope
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
  }

  export type horariosUncheckedCreateNestedManyWithoutSalasInput = {
    create?: XOR<horariosCreateWithoutSalasInput, horariosUncheckedCreateWithoutSalasInput> | horariosCreateWithoutSalasInput[] | horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutSalasInput | horariosCreateOrConnectWithoutSalasInput[]
    createMany?: horariosCreateManySalasInputEnvelope
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
  }

  export type salas_horariosUncheckedCreateNestedManyWithoutSalasInput = {
    create?: XOR<salas_horariosCreateWithoutSalasInput, salas_horariosUncheckedCreateWithoutSalasInput> | salas_horariosCreateWithoutSalasInput[] | salas_horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutSalasInput | salas_horariosCreateOrConnectWithoutSalasInput[]
    createMany?: salas_horariosCreateManySalasInputEnvelope
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
  }

  export type horariosUpdateManyWithoutSalasNestedInput = {
    create?: XOR<horariosCreateWithoutSalasInput, horariosUncheckedCreateWithoutSalasInput> | horariosCreateWithoutSalasInput[] | horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutSalasInput | horariosCreateOrConnectWithoutSalasInput[]
    upsert?: horariosUpsertWithWhereUniqueWithoutSalasInput | horariosUpsertWithWhereUniqueWithoutSalasInput[]
    createMany?: horariosCreateManySalasInputEnvelope
    set?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    disconnect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    delete?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    update?: horariosUpdateWithWhereUniqueWithoutSalasInput | horariosUpdateWithWhereUniqueWithoutSalasInput[]
    updateMany?: horariosUpdateManyWithWhereWithoutSalasInput | horariosUpdateManyWithWhereWithoutSalasInput[]
    deleteMany?: horariosScalarWhereInput | horariosScalarWhereInput[]
  }

  export type salas_horariosUpdateManyWithoutSalasNestedInput = {
    create?: XOR<salas_horariosCreateWithoutSalasInput, salas_horariosUncheckedCreateWithoutSalasInput> | salas_horariosCreateWithoutSalasInput[] | salas_horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutSalasInput | salas_horariosCreateOrConnectWithoutSalasInput[]
    upsert?: salas_horariosUpsertWithWhereUniqueWithoutSalasInput | salas_horariosUpsertWithWhereUniqueWithoutSalasInput[]
    createMany?: salas_horariosCreateManySalasInputEnvelope
    set?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    disconnect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    delete?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    update?: salas_horariosUpdateWithWhereUniqueWithoutSalasInput | salas_horariosUpdateWithWhereUniqueWithoutSalasInput[]
    updateMany?: salas_horariosUpdateManyWithWhereWithoutSalasInput | salas_horariosUpdateManyWithWhereWithoutSalasInput[]
    deleteMany?: salas_horariosScalarWhereInput | salas_horariosScalarWhereInput[]
  }

  export type horariosUncheckedUpdateManyWithoutSalasNestedInput = {
    create?: XOR<horariosCreateWithoutSalasInput, horariosUncheckedCreateWithoutSalasInput> | horariosCreateWithoutSalasInput[] | horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutSalasInput | horariosCreateOrConnectWithoutSalasInput[]
    upsert?: horariosUpsertWithWhereUniqueWithoutSalasInput | horariosUpsertWithWhereUniqueWithoutSalasInput[]
    createMany?: horariosCreateManySalasInputEnvelope
    set?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    disconnect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    delete?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    update?: horariosUpdateWithWhereUniqueWithoutSalasInput | horariosUpdateWithWhereUniqueWithoutSalasInput[]
    updateMany?: horariosUpdateManyWithWhereWithoutSalasInput | horariosUpdateManyWithWhereWithoutSalasInput[]
    deleteMany?: horariosScalarWhereInput | horariosScalarWhereInput[]
  }

  export type salas_horariosUncheckedUpdateManyWithoutSalasNestedInput = {
    create?: XOR<salas_horariosCreateWithoutSalasInput, salas_horariosUncheckedCreateWithoutSalasInput> | salas_horariosCreateWithoutSalasInput[] | salas_horariosUncheckedCreateWithoutSalasInput[]
    connectOrCreate?: salas_horariosCreateOrConnectWithoutSalasInput | salas_horariosCreateOrConnectWithoutSalasInput[]
    upsert?: salas_horariosUpsertWithWhereUniqueWithoutSalasInput | salas_horariosUpsertWithWhereUniqueWithoutSalasInput[]
    createMany?: salas_horariosCreateManySalasInputEnvelope
    set?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    disconnect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    delete?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    connect?: salas_horariosWhereUniqueInput | salas_horariosWhereUniqueInput[]
    update?: salas_horariosUpdateWithWhereUniqueWithoutSalasInput | salas_horariosUpdateWithWhereUniqueWithoutSalasInput[]
    updateMany?: salas_horariosUpdateManyWithWhereWithoutSalasInput | salas_horariosUpdateManyWithWhereWithoutSalasInput[]
    deleteMany?: salas_horariosScalarWhereInput | salas_horariosScalarWhereInput[]
  }

  export type salasCreateNestedOneWithoutSalas_horariosInput = {
    create?: XOR<salasCreateWithoutSalas_horariosInput, salasUncheckedCreateWithoutSalas_horariosInput>
    connectOrCreate?: salasCreateOrConnectWithoutSalas_horariosInput
    connect?: salasWhereUniqueInput
  }

  export type horariosCreateNestedOneWithoutSalas_horariosInput = {
    create?: XOR<horariosCreateWithoutSalas_horariosInput, horariosUncheckedCreateWithoutSalas_horariosInput>
    connectOrCreate?: horariosCreateOrConnectWithoutSalas_horariosInput
    connect?: horariosWhereUniqueInput
  }

  export type salasUpdateOneRequiredWithoutSalas_horariosNestedInput = {
    create?: XOR<salasCreateWithoutSalas_horariosInput, salasUncheckedCreateWithoutSalas_horariosInput>
    connectOrCreate?: salasCreateOrConnectWithoutSalas_horariosInput
    upsert?: salasUpsertWithoutSalas_horariosInput
    connect?: salasWhereUniqueInput
    update?: XOR<XOR<salasUpdateToOneWithWhereWithoutSalas_horariosInput, salasUpdateWithoutSalas_horariosInput>, salasUncheckedUpdateWithoutSalas_horariosInput>
  }

  export type horariosUpdateOneRequiredWithoutSalas_horariosNestedInput = {
    create?: XOR<horariosCreateWithoutSalas_horariosInput, horariosUncheckedCreateWithoutSalas_horariosInput>
    connectOrCreate?: horariosCreateOrConnectWithoutSalas_horariosInput
    upsert?: horariosUpsertWithoutSalas_horariosInput
    connect?: horariosWhereUniqueInput
    update?: XOR<XOR<horariosUpdateToOneWithWhereWithoutSalas_horariosInput, horariosUpdateWithoutSalas_horariosInput>, horariosUncheckedUpdateWithoutSalas_horariosInput>
  }

  export type disciplinas_utilizadoresCreateNestedManyWithoutUtilizadoresInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput> | disciplinas_utilizadoresCreateWithoutUtilizadoresInput[] | disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput | disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput[]
    createMany?: disciplinas_utilizadoresCreateManyUtilizadoresInputEnvelope
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
  }

  export type horariosCreateNestedManyWithoutUtilizadoresInput = {
    create?: XOR<horariosCreateWithoutUtilizadoresInput, horariosUncheckedCreateWithoutUtilizadoresInput> | horariosCreateWithoutUtilizadoresInput[] | horariosUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutUtilizadoresInput | horariosCreateOrConnectWithoutUtilizadoresInput[]
    createMany?: horariosCreateManyUtilizadoresInputEnvelope
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
  }

  export type disciplinas_utilizadoresUncheckedCreateNestedManyWithoutUtilizadoresInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput> | disciplinas_utilizadoresCreateWithoutUtilizadoresInput[] | disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput | disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput[]
    createMany?: disciplinas_utilizadoresCreateManyUtilizadoresInputEnvelope
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
  }

  export type horariosUncheckedCreateNestedManyWithoutUtilizadoresInput = {
    create?: XOR<horariosCreateWithoutUtilizadoresInput, horariosUncheckedCreateWithoutUtilizadoresInput> | horariosCreateWithoutUtilizadoresInput[] | horariosUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutUtilizadoresInput | horariosCreateOrConnectWithoutUtilizadoresInput[]
    createMany?: horariosCreateManyUtilizadoresInputEnvelope
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
  }

  export type disciplinas_utilizadoresUpdateManyWithoutUtilizadoresNestedInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput> | disciplinas_utilizadoresCreateWithoutUtilizadoresInput[] | disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput | disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput[]
    upsert?: disciplinas_utilizadoresUpsertWithWhereUniqueWithoutUtilizadoresInput | disciplinas_utilizadoresUpsertWithWhereUniqueWithoutUtilizadoresInput[]
    createMany?: disciplinas_utilizadoresCreateManyUtilizadoresInputEnvelope
    set?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    disconnect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    delete?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    update?: disciplinas_utilizadoresUpdateWithWhereUniqueWithoutUtilizadoresInput | disciplinas_utilizadoresUpdateWithWhereUniqueWithoutUtilizadoresInput[]
    updateMany?: disciplinas_utilizadoresUpdateManyWithWhereWithoutUtilizadoresInput | disciplinas_utilizadoresUpdateManyWithWhereWithoutUtilizadoresInput[]
    deleteMany?: disciplinas_utilizadoresScalarWhereInput | disciplinas_utilizadoresScalarWhereInput[]
  }

  export type horariosUpdateManyWithoutUtilizadoresNestedInput = {
    create?: XOR<horariosCreateWithoutUtilizadoresInput, horariosUncheckedCreateWithoutUtilizadoresInput> | horariosCreateWithoutUtilizadoresInput[] | horariosUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutUtilizadoresInput | horariosCreateOrConnectWithoutUtilizadoresInput[]
    upsert?: horariosUpsertWithWhereUniqueWithoutUtilizadoresInput | horariosUpsertWithWhereUniqueWithoutUtilizadoresInput[]
    createMany?: horariosCreateManyUtilizadoresInputEnvelope
    set?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    disconnect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    delete?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    update?: horariosUpdateWithWhereUniqueWithoutUtilizadoresInput | horariosUpdateWithWhereUniqueWithoutUtilizadoresInput[]
    updateMany?: horariosUpdateManyWithWhereWithoutUtilizadoresInput | horariosUpdateManyWithWhereWithoutUtilizadoresInput[]
    deleteMany?: horariosScalarWhereInput | horariosScalarWhereInput[]
  }

  export type disciplinas_utilizadoresUncheckedUpdateManyWithoutUtilizadoresNestedInput = {
    create?: XOR<disciplinas_utilizadoresCreateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput> | disciplinas_utilizadoresCreateWithoutUtilizadoresInput[] | disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput | disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput[]
    upsert?: disciplinas_utilizadoresUpsertWithWhereUniqueWithoutUtilizadoresInput | disciplinas_utilizadoresUpsertWithWhereUniqueWithoutUtilizadoresInput[]
    createMany?: disciplinas_utilizadoresCreateManyUtilizadoresInputEnvelope
    set?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    disconnect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    delete?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    connect?: disciplinas_utilizadoresWhereUniqueInput | disciplinas_utilizadoresWhereUniqueInput[]
    update?: disciplinas_utilizadoresUpdateWithWhereUniqueWithoutUtilizadoresInput | disciplinas_utilizadoresUpdateWithWhereUniqueWithoutUtilizadoresInput[]
    updateMany?: disciplinas_utilizadoresUpdateManyWithWhereWithoutUtilizadoresInput | disciplinas_utilizadoresUpdateManyWithWhereWithoutUtilizadoresInput[]
    deleteMany?: disciplinas_utilizadoresScalarWhereInput | disciplinas_utilizadoresScalarWhereInput[]
  }

  export type horariosUncheckedUpdateManyWithoutUtilizadoresNestedInput = {
    create?: XOR<horariosCreateWithoutUtilizadoresInput, horariosUncheckedCreateWithoutUtilizadoresInput> | horariosCreateWithoutUtilizadoresInput[] | horariosUncheckedCreateWithoutUtilizadoresInput[]
    connectOrCreate?: horariosCreateOrConnectWithoutUtilizadoresInput | horariosCreateOrConnectWithoutUtilizadoresInput[]
    upsert?: horariosUpsertWithWhereUniqueWithoutUtilizadoresInput | horariosUpsertWithWhereUniqueWithoutUtilizadoresInput[]
    createMany?: horariosCreateManyUtilizadoresInputEnvelope
    set?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    disconnect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    delete?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    connect?: horariosWhereUniqueInput | horariosWhereUniqueInput[]
    update?: horariosUpdateWithWhereUniqueWithoutUtilizadoresInput | horariosUpdateWithWhereUniqueWithoutUtilizadoresInput[]
    updateMany?: horariosUpdateManyWithWhereWithoutUtilizadoresInput | horariosUpdateManyWithWhereWithoutUtilizadoresInput[]
    deleteMany?: horariosScalarWhereInput | horariosScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type professoresCreateWithoutDisciplinasInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
    disciplinas_professores?: disciplinas_professoresCreateNestedManyWithoutProfessoresInput
  }

  export type professoresUncheckedCreateWithoutDisciplinasInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
    disciplinas_professores?: disciplinas_professoresUncheckedCreateNestedManyWithoutProfessoresInput
  }

  export type professoresCreateOrConnectWithoutDisciplinasInput = {
    where: professoresWhereUniqueInput
    create: XOR<professoresCreateWithoutDisciplinasInput, professoresUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_horariosCreateWithoutDisciplinasInput = {
    horarios: horariosCreateNestedOneWithoutDisciplinas_horariosInput
  }

  export type disciplinas_horariosUncheckedCreateWithoutDisciplinasInput = {
    id_horario: number
  }

  export type disciplinas_horariosCreateOrConnectWithoutDisciplinasInput = {
    where: disciplinas_horariosWhereUniqueInput
    create: XOR<disciplinas_horariosCreateWithoutDisciplinasInput, disciplinas_horariosUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_horariosCreateManyDisciplinasInputEnvelope = {
    data: disciplinas_horariosCreateManyDisciplinasInput | disciplinas_horariosCreateManyDisciplinasInput[]
    skipDuplicates?: boolean
  }

  export type disciplinas_professoresCreateWithoutDisciplinasInput = {
    professores: professoresCreateNestedOneWithoutDisciplinas_professoresInput
  }

  export type disciplinas_professoresUncheckedCreateWithoutDisciplinasInput = {
    id_professor: number
  }

  export type disciplinas_professoresCreateOrConnectWithoutDisciplinasInput = {
    where: disciplinas_professoresWhereUniqueInput
    create: XOR<disciplinas_professoresCreateWithoutDisciplinasInput, disciplinas_professoresUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_professoresCreateManyDisciplinasInputEnvelope = {
    data: disciplinas_professoresCreateManyDisciplinasInput | disciplinas_professoresCreateManyDisciplinasInput[]
    skipDuplicates?: boolean
  }

  export type disciplinas_utilizadoresCreateWithoutDisciplinasInput = {
    utilizadores: utilizadoresCreateNestedOneWithoutDisciplinas_utilizadoresInput
  }

  export type disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput = {
    id_utilizador: number
  }

  export type disciplinas_utilizadoresCreateOrConnectWithoutDisciplinasInput = {
    where: disciplinas_utilizadoresWhereUniqueInput
    create: XOR<disciplinas_utilizadoresCreateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_utilizadoresCreateManyDisciplinasInputEnvelope = {
    data: disciplinas_utilizadoresCreateManyDisciplinasInput | disciplinas_utilizadoresCreateManyDisciplinasInput[]
    skipDuplicates?: boolean
  }

  export type professoresUpsertWithoutDisciplinasInput = {
    update: XOR<professoresUpdateWithoutDisciplinasInput, professoresUncheckedUpdateWithoutDisciplinasInput>
    create: XOR<professoresCreateWithoutDisciplinasInput, professoresUncheckedCreateWithoutDisciplinasInput>
    where?: professoresWhereInput
  }

  export type professoresUpdateToOneWithWhereWithoutDisciplinasInput = {
    where?: professoresWhereInput
    data: XOR<professoresUpdateWithoutDisciplinasInput, professoresUncheckedUpdateWithoutDisciplinasInput>
  }

  export type professoresUpdateWithoutDisciplinasInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
    disciplinas_professores?: disciplinas_professoresUpdateManyWithoutProfessoresNestedInput
  }

  export type professoresUncheckedUpdateWithoutDisciplinasInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
    disciplinas_professores?: disciplinas_professoresUncheckedUpdateManyWithoutProfessoresNestedInput
  }

  export type disciplinas_horariosUpsertWithWhereUniqueWithoutDisciplinasInput = {
    where: disciplinas_horariosWhereUniqueInput
    update: XOR<disciplinas_horariosUpdateWithoutDisciplinasInput, disciplinas_horariosUncheckedUpdateWithoutDisciplinasInput>
    create: XOR<disciplinas_horariosCreateWithoutDisciplinasInput, disciplinas_horariosUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_horariosUpdateWithWhereUniqueWithoutDisciplinasInput = {
    where: disciplinas_horariosWhereUniqueInput
    data: XOR<disciplinas_horariosUpdateWithoutDisciplinasInput, disciplinas_horariosUncheckedUpdateWithoutDisciplinasInput>
  }

  export type disciplinas_horariosUpdateManyWithWhereWithoutDisciplinasInput = {
    where: disciplinas_horariosScalarWhereInput
    data: XOR<disciplinas_horariosUpdateManyMutationInput, disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasInput>
  }

  export type disciplinas_horariosScalarWhereInput = {
    AND?: disciplinas_horariosScalarWhereInput | disciplinas_horariosScalarWhereInput[]
    OR?: disciplinas_horariosScalarWhereInput[]
    NOT?: disciplinas_horariosScalarWhereInput | disciplinas_horariosScalarWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_horarios"> | number
    id_horario?: IntFilter<"disciplinas_horarios"> | number
  }

  export type disciplinas_professoresUpsertWithWhereUniqueWithoutDisciplinasInput = {
    where: disciplinas_professoresWhereUniqueInput
    update: XOR<disciplinas_professoresUpdateWithoutDisciplinasInput, disciplinas_professoresUncheckedUpdateWithoutDisciplinasInput>
    create: XOR<disciplinas_professoresCreateWithoutDisciplinasInput, disciplinas_professoresUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_professoresUpdateWithWhereUniqueWithoutDisciplinasInput = {
    where: disciplinas_professoresWhereUniqueInput
    data: XOR<disciplinas_professoresUpdateWithoutDisciplinasInput, disciplinas_professoresUncheckedUpdateWithoutDisciplinasInput>
  }

  export type disciplinas_professoresUpdateManyWithWhereWithoutDisciplinasInput = {
    where: disciplinas_professoresScalarWhereInput
    data: XOR<disciplinas_professoresUpdateManyMutationInput, disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasInput>
  }

  export type disciplinas_professoresScalarWhereInput = {
    AND?: disciplinas_professoresScalarWhereInput | disciplinas_professoresScalarWhereInput[]
    OR?: disciplinas_professoresScalarWhereInput[]
    NOT?: disciplinas_professoresScalarWhereInput | disciplinas_professoresScalarWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_professores"> | number
    id_professor?: IntFilter<"disciplinas_professores"> | number
  }

  export type disciplinas_utilizadoresUpsertWithWhereUniqueWithoutDisciplinasInput = {
    where: disciplinas_utilizadoresWhereUniqueInput
    update: XOR<disciplinas_utilizadoresUpdateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedUpdateWithoutDisciplinasInput>
    create: XOR<disciplinas_utilizadoresCreateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedCreateWithoutDisciplinasInput>
  }

  export type disciplinas_utilizadoresUpdateWithWhereUniqueWithoutDisciplinasInput = {
    where: disciplinas_utilizadoresWhereUniqueInput
    data: XOR<disciplinas_utilizadoresUpdateWithoutDisciplinasInput, disciplinas_utilizadoresUncheckedUpdateWithoutDisciplinasInput>
  }

  export type disciplinas_utilizadoresUpdateManyWithWhereWithoutDisciplinasInput = {
    where: disciplinas_utilizadoresScalarWhereInput
    data: XOR<disciplinas_utilizadoresUpdateManyMutationInput, disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasInput>
  }

  export type disciplinas_utilizadoresScalarWhereInput = {
    AND?: disciplinas_utilizadoresScalarWhereInput | disciplinas_utilizadoresScalarWhereInput[]
    OR?: disciplinas_utilizadoresScalarWhereInput[]
    NOT?: disciplinas_utilizadoresScalarWhereInput | disciplinas_utilizadoresScalarWhereInput[]
    id_disciplina?: IntFilter<"disciplinas_utilizadores"> | number
    id_utilizador?: IntFilter<"disciplinas_utilizadores"> | number
  }

  export type disciplinasCreateWithoutDisciplinas_horariosInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    professores?: professoresCreateNestedOneWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasUncheckedCreateWithoutDisciplinas_horariosInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    id_professor?: number | null
    disciplinas_professores?: disciplinas_professoresUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasCreateOrConnectWithoutDisciplinas_horariosInput = {
    where: disciplinasWhereUniqueInput
    create: XOR<disciplinasCreateWithoutDisciplinas_horariosInput, disciplinasUncheckedCreateWithoutDisciplinas_horariosInput>
  }

  export type horariosCreateWithoutDisciplinas_horariosInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    utilizadores?: utilizadoresCreateNestedOneWithoutHorariosInput
    salas?: salasCreateNestedOneWithoutHorariosInput
    salas_horarios?: salas_horariosCreateNestedManyWithoutHorariosInput
  }

  export type horariosUncheckedCreateWithoutDisciplinas_horariosInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_utilizador?: number | null
    id_sala?: number | null
    salas_horarios?: salas_horariosUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type horariosCreateOrConnectWithoutDisciplinas_horariosInput = {
    where: horariosWhereUniqueInput
    create: XOR<horariosCreateWithoutDisciplinas_horariosInput, horariosUncheckedCreateWithoutDisciplinas_horariosInput>
  }

  export type disciplinasUpsertWithoutDisciplinas_horariosInput = {
    update: XOR<disciplinasUpdateWithoutDisciplinas_horariosInput, disciplinasUncheckedUpdateWithoutDisciplinas_horariosInput>
    create: XOR<disciplinasCreateWithoutDisciplinas_horariosInput, disciplinasUncheckedCreateWithoutDisciplinas_horariosInput>
    where?: disciplinasWhereInput
  }

  export type disciplinasUpdateToOneWithWhereWithoutDisciplinas_horariosInput = {
    where?: disciplinasWhereInput
    data: XOR<disciplinasUpdateWithoutDisciplinas_horariosInput, disciplinasUncheckedUpdateWithoutDisciplinas_horariosInput>
  }

  export type disciplinasUpdateWithoutDisciplinas_horariosInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    professores?: professoresUpdateOneWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasUncheckedUpdateWithoutDisciplinas_horariosInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    id_professor?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_professores?: disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasNestedInput
  }

  export type horariosUpsertWithoutDisciplinas_horariosInput = {
    update: XOR<horariosUpdateWithoutDisciplinas_horariosInput, horariosUncheckedUpdateWithoutDisciplinas_horariosInput>
    create: XOR<horariosCreateWithoutDisciplinas_horariosInput, horariosUncheckedCreateWithoutDisciplinas_horariosInput>
    where?: horariosWhereInput
  }

  export type horariosUpdateToOneWithWhereWithoutDisciplinas_horariosInput = {
    where?: horariosWhereInput
    data: XOR<horariosUpdateWithoutDisciplinas_horariosInput, horariosUncheckedUpdateWithoutDisciplinas_horariosInput>
  }

  export type horariosUpdateWithoutDisciplinas_horariosInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    utilizadores?: utilizadoresUpdateOneWithoutHorariosNestedInput
    salas?: salasUpdateOneWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUpdateManyWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateWithoutDisciplinas_horariosInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_sala?: NullableIntFieldUpdateOperationsInput | number | null
    salas_horarios?: salas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type disciplinasCreateWithoutDisciplinas_professoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    professores?: professoresCreateNestedOneWithoutDisciplinasInput
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasUncheckedCreateWithoutDisciplinas_professoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    id_professor?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasCreateOrConnectWithoutDisciplinas_professoresInput = {
    where: disciplinasWhereUniqueInput
    create: XOR<disciplinasCreateWithoutDisciplinas_professoresInput, disciplinasUncheckedCreateWithoutDisciplinas_professoresInput>
  }

  export type professoresCreateWithoutDisciplinas_professoresInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
    disciplinas?: disciplinasCreateNestedManyWithoutProfessoresInput
  }

  export type professoresUncheckedCreateWithoutDisciplinas_professoresInput = {
    id_professor: number
    Nome?: string | null
    Email?: string | null
    Carga?: number | null
    Descricao?: string | null
    disciplinas?: disciplinasUncheckedCreateNestedManyWithoutProfessoresInput
  }

  export type professoresCreateOrConnectWithoutDisciplinas_professoresInput = {
    where: professoresWhereUniqueInput
    create: XOR<professoresCreateWithoutDisciplinas_professoresInput, professoresUncheckedCreateWithoutDisciplinas_professoresInput>
  }

  export type disciplinasUpsertWithoutDisciplinas_professoresInput = {
    update: XOR<disciplinasUpdateWithoutDisciplinas_professoresInput, disciplinasUncheckedUpdateWithoutDisciplinas_professoresInput>
    create: XOR<disciplinasCreateWithoutDisciplinas_professoresInput, disciplinasUncheckedCreateWithoutDisciplinas_professoresInput>
    where?: disciplinasWhereInput
  }

  export type disciplinasUpdateToOneWithWhereWithoutDisciplinas_professoresInput = {
    where?: disciplinasWhereInput
    data: XOR<disciplinasUpdateWithoutDisciplinas_professoresInput, disciplinasUncheckedUpdateWithoutDisciplinas_professoresInput>
  }

  export type disciplinasUpdateWithoutDisciplinas_professoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    professores?: professoresUpdateOneWithoutDisciplinasNestedInput
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasUncheckedUpdateWithoutDisciplinas_professoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    id_professor?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasNestedInput
  }

  export type professoresUpsertWithoutDisciplinas_professoresInput = {
    update: XOR<professoresUpdateWithoutDisciplinas_professoresInput, professoresUncheckedUpdateWithoutDisciplinas_professoresInput>
    create: XOR<professoresCreateWithoutDisciplinas_professoresInput, professoresUncheckedCreateWithoutDisciplinas_professoresInput>
    where?: professoresWhereInput
  }

  export type professoresUpdateToOneWithWhereWithoutDisciplinas_professoresInput = {
    where?: professoresWhereInput
    data: XOR<professoresUpdateWithoutDisciplinas_professoresInput, professoresUncheckedUpdateWithoutDisciplinas_professoresInput>
  }

  export type professoresUpdateWithoutDisciplinas_professoresInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
    disciplinas?: disciplinasUpdateManyWithoutProfessoresNestedInput
  }

  export type professoresUncheckedUpdateWithoutDisciplinas_professoresInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Carga?: NullableIntFieldUpdateOperationsInput | number | null
    Descricao?: NullableStringFieldUpdateOperationsInput | string | null
    disciplinas?: disciplinasUncheckedUpdateManyWithoutProfessoresNestedInput
  }

  export type disciplinasCreateWithoutDisciplinas_utilizadoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    professores?: professoresCreateNestedOneWithoutDisciplinasInput
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasUncheckedCreateWithoutDisciplinas_utilizadoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    id_professor?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresUncheckedCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasCreateOrConnectWithoutDisciplinas_utilizadoresInput = {
    where: disciplinasWhereUniqueInput
    create: XOR<disciplinasCreateWithoutDisciplinas_utilizadoresInput, disciplinasUncheckedCreateWithoutDisciplinas_utilizadoresInput>
  }

  export type utilizadoresCreateWithoutDisciplinas_utilizadoresInput = {
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
    horarios?: horariosCreateNestedManyWithoutUtilizadoresInput
  }

  export type utilizadoresUncheckedCreateWithoutDisciplinas_utilizadoresInput = {
    id_utilizador?: number
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
    horarios?: horariosUncheckedCreateNestedManyWithoutUtilizadoresInput
  }

  export type utilizadoresCreateOrConnectWithoutDisciplinas_utilizadoresInput = {
    where: utilizadoresWhereUniqueInput
    create: XOR<utilizadoresCreateWithoutDisciplinas_utilizadoresInput, utilizadoresUncheckedCreateWithoutDisciplinas_utilizadoresInput>
  }

  export type disciplinasUpsertWithoutDisciplinas_utilizadoresInput = {
    update: XOR<disciplinasUpdateWithoutDisciplinas_utilizadoresInput, disciplinasUncheckedUpdateWithoutDisciplinas_utilizadoresInput>
    create: XOR<disciplinasCreateWithoutDisciplinas_utilizadoresInput, disciplinasUncheckedCreateWithoutDisciplinas_utilizadoresInput>
    where?: disciplinasWhereInput
  }

  export type disciplinasUpdateToOneWithWhereWithoutDisciplinas_utilizadoresInput = {
    where?: disciplinasWhereInput
    data: XOR<disciplinasUpdateWithoutDisciplinas_utilizadoresInput, disciplinasUncheckedUpdateWithoutDisciplinas_utilizadoresInput>
  }

  export type disciplinasUpdateWithoutDisciplinas_utilizadoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    professores?: professoresUpdateOneWithoutDisciplinasNestedInput
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasUncheckedUpdateWithoutDisciplinas_utilizadoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    id_professor?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasNestedInput
  }

  export type utilizadoresUpsertWithoutDisciplinas_utilizadoresInput = {
    update: XOR<utilizadoresUpdateWithoutDisciplinas_utilizadoresInput, utilizadoresUncheckedUpdateWithoutDisciplinas_utilizadoresInput>
    create: XOR<utilizadoresCreateWithoutDisciplinas_utilizadoresInput, utilizadoresUncheckedCreateWithoutDisciplinas_utilizadoresInput>
    where?: utilizadoresWhereInput
  }

  export type utilizadoresUpdateToOneWithWhereWithoutDisciplinas_utilizadoresInput = {
    where?: utilizadoresWhereInput
    data: XOR<utilizadoresUpdateWithoutDisciplinas_utilizadoresInput, utilizadoresUncheckedUpdateWithoutDisciplinas_utilizadoresInput>
  }

  export type utilizadoresUpdateWithoutDisciplinas_utilizadoresInput = {
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horarios?: horariosUpdateManyWithoutUtilizadoresNestedInput
  }

  export type utilizadoresUncheckedUpdateWithoutDisciplinas_utilizadoresInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    horarios?: horariosUncheckedUpdateManyWithoutUtilizadoresNestedInput
  }

  export type disciplinas_horariosCreateWithoutHorariosInput = {
    disciplinas: disciplinasCreateNestedOneWithoutDisciplinas_horariosInput
  }

  export type disciplinas_horariosUncheckedCreateWithoutHorariosInput = {
    id_disciplina: number
  }

  export type disciplinas_horariosCreateOrConnectWithoutHorariosInput = {
    where: disciplinas_horariosWhereUniqueInput
    create: XOR<disciplinas_horariosCreateWithoutHorariosInput, disciplinas_horariosUncheckedCreateWithoutHorariosInput>
  }

  export type disciplinas_horariosCreateManyHorariosInputEnvelope = {
    data: disciplinas_horariosCreateManyHorariosInput | disciplinas_horariosCreateManyHorariosInput[]
    skipDuplicates?: boolean
  }

  export type utilizadoresCreateWithoutHorariosInput = {
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresCreateNestedManyWithoutUtilizadoresInput
  }

  export type utilizadoresUncheckedCreateWithoutHorariosInput = {
    id_utilizador?: number
    Nome?: string | null
    Email?: string | null
    Dia_semana?: string | null
    Hora_Inicio?: Date | string | null
    Hora_Fim?: Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedCreateNestedManyWithoutUtilizadoresInput
  }

  export type utilizadoresCreateOrConnectWithoutHorariosInput = {
    where: utilizadoresWhereUniqueInput
    create: XOR<utilizadoresCreateWithoutHorariosInput, utilizadoresUncheckedCreateWithoutHorariosInput>
  }

  export type salasCreateWithoutHorariosInput = {
    id_sala: number
    Detalhe?: string | null
    salas_horarios?: salas_horariosCreateNestedManyWithoutSalasInput
  }

  export type salasUncheckedCreateWithoutHorariosInput = {
    id_sala: number
    Detalhe?: string | null
    salas_horarios?: salas_horariosUncheckedCreateNestedManyWithoutSalasInput
  }

  export type salasCreateOrConnectWithoutHorariosInput = {
    where: salasWhereUniqueInput
    create: XOR<salasCreateWithoutHorariosInput, salasUncheckedCreateWithoutHorariosInput>
  }

  export type salas_horariosCreateWithoutHorariosInput = {
    salas: salasCreateNestedOneWithoutSalas_horariosInput
  }

  export type salas_horariosUncheckedCreateWithoutHorariosInput = {
    id_sala: number
  }

  export type salas_horariosCreateOrConnectWithoutHorariosInput = {
    where: salas_horariosWhereUniqueInput
    create: XOR<salas_horariosCreateWithoutHorariosInput, salas_horariosUncheckedCreateWithoutHorariosInput>
  }

  export type salas_horariosCreateManyHorariosInputEnvelope = {
    data: salas_horariosCreateManyHorariosInput | salas_horariosCreateManyHorariosInput[]
    skipDuplicates?: boolean
  }

  export type disciplinas_horariosUpsertWithWhereUniqueWithoutHorariosInput = {
    where: disciplinas_horariosWhereUniqueInput
    update: XOR<disciplinas_horariosUpdateWithoutHorariosInput, disciplinas_horariosUncheckedUpdateWithoutHorariosInput>
    create: XOR<disciplinas_horariosCreateWithoutHorariosInput, disciplinas_horariosUncheckedCreateWithoutHorariosInput>
  }

  export type disciplinas_horariosUpdateWithWhereUniqueWithoutHorariosInput = {
    where: disciplinas_horariosWhereUniqueInput
    data: XOR<disciplinas_horariosUpdateWithoutHorariosInput, disciplinas_horariosUncheckedUpdateWithoutHorariosInput>
  }

  export type disciplinas_horariosUpdateManyWithWhereWithoutHorariosInput = {
    where: disciplinas_horariosScalarWhereInput
    data: XOR<disciplinas_horariosUpdateManyMutationInput, disciplinas_horariosUncheckedUpdateManyWithoutHorariosInput>
  }

  export type utilizadoresUpsertWithoutHorariosInput = {
    update: XOR<utilizadoresUpdateWithoutHorariosInput, utilizadoresUncheckedUpdateWithoutHorariosInput>
    create: XOR<utilizadoresCreateWithoutHorariosInput, utilizadoresUncheckedCreateWithoutHorariosInput>
    where?: utilizadoresWhereInput
  }

  export type utilizadoresUpdateToOneWithWhereWithoutHorariosInput = {
    where?: utilizadoresWhereInput
    data: XOR<utilizadoresUpdateWithoutHorariosInput, utilizadoresUncheckedUpdateWithoutHorariosInput>
  }

  export type utilizadoresUpdateWithoutHorariosInput = {
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresUpdateManyWithoutUtilizadoresNestedInput
  }

  export type utilizadoresUncheckedUpdateWithoutHorariosInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dia_semana?: NullableStringFieldUpdateOperationsInput | string | null
    Hora_Inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hora_Fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedUpdateManyWithoutUtilizadoresNestedInput
  }

  export type salasUpsertWithoutHorariosInput = {
    update: XOR<salasUpdateWithoutHorariosInput, salasUncheckedUpdateWithoutHorariosInput>
    create: XOR<salasCreateWithoutHorariosInput, salasUncheckedCreateWithoutHorariosInput>
    where?: salasWhereInput
  }

  export type salasUpdateToOneWithWhereWithoutHorariosInput = {
    where?: salasWhereInput
    data: XOR<salasUpdateWithoutHorariosInput, salasUncheckedUpdateWithoutHorariosInput>
  }

  export type salasUpdateWithoutHorariosInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
    salas_horarios?: salas_horariosUpdateManyWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateWithoutHorariosInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
    salas_horarios?: salas_horariosUncheckedUpdateManyWithoutSalasNestedInput
  }

  export type salas_horariosUpsertWithWhereUniqueWithoutHorariosInput = {
    where: salas_horariosWhereUniqueInput
    update: XOR<salas_horariosUpdateWithoutHorariosInput, salas_horariosUncheckedUpdateWithoutHorariosInput>
    create: XOR<salas_horariosCreateWithoutHorariosInput, salas_horariosUncheckedCreateWithoutHorariosInput>
  }

  export type salas_horariosUpdateWithWhereUniqueWithoutHorariosInput = {
    where: salas_horariosWhereUniqueInput
    data: XOR<salas_horariosUpdateWithoutHorariosInput, salas_horariosUncheckedUpdateWithoutHorariosInput>
  }

  export type salas_horariosUpdateManyWithWhereWithoutHorariosInput = {
    where: salas_horariosScalarWhereInput
    data: XOR<salas_horariosUpdateManyMutationInput, salas_horariosUncheckedUpdateManyWithoutHorariosInput>
  }

  export type salas_horariosScalarWhereInput = {
    AND?: salas_horariosScalarWhereInput | salas_horariosScalarWhereInput[]
    OR?: salas_horariosScalarWhereInput[]
    NOT?: salas_horariosScalarWhereInput | salas_horariosScalarWhereInput[]
    id_sala?: IntFilter<"salas_horarios"> | number
    id_horario?: IntFilter<"salas_horarios"> | number
  }

  export type disciplinasCreateWithoutProfessoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasUncheckedCreateWithoutProfessoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_professores?: disciplinas_professoresUncheckedCreateNestedManyWithoutDisciplinasInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedCreateNestedManyWithoutDisciplinasInput
  }

  export type disciplinasCreateOrConnectWithoutProfessoresInput = {
    where: disciplinasWhereUniqueInput
    create: XOR<disciplinasCreateWithoutProfessoresInput, disciplinasUncheckedCreateWithoutProfessoresInput>
  }

  export type disciplinasCreateManyProfessoresInputEnvelope = {
    data: disciplinasCreateManyProfessoresInput | disciplinasCreateManyProfessoresInput[]
    skipDuplicates?: boolean
  }

  export type disciplinas_professoresCreateWithoutProfessoresInput = {
    disciplinas: disciplinasCreateNestedOneWithoutDisciplinas_professoresInput
  }

  export type disciplinas_professoresUncheckedCreateWithoutProfessoresInput = {
    id_disciplina: number
  }

  export type disciplinas_professoresCreateOrConnectWithoutProfessoresInput = {
    where: disciplinas_professoresWhereUniqueInput
    create: XOR<disciplinas_professoresCreateWithoutProfessoresInput, disciplinas_professoresUncheckedCreateWithoutProfessoresInput>
  }

  export type disciplinas_professoresCreateManyProfessoresInputEnvelope = {
    data: disciplinas_professoresCreateManyProfessoresInput | disciplinas_professoresCreateManyProfessoresInput[]
    skipDuplicates?: boolean
  }

  export type disciplinasUpsertWithWhereUniqueWithoutProfessoresInput = {
    where: disciplinasWhereUniqueInput
    update: XOR<disciplinasUpdateWithoutProfessoresInput, disciplinasUncheckedUpdateWithoutProfessoresInput>
    create: XOR<disciplinasCreateWithoutProfessoresInput, disciplinasUncheckedCreateWithoutProfessoresInput>
  }

  export type disciplinasUpdateWithWhereUniqueWithoutProfessoresInput = {
    where: disciplinasWhereUniqueInput
    data: XOR<disciplinasUpdateWithoutProfessoresInput, disciplinasUncheckedUpdateWithoutProfessoresInput>
  }

  export type disciplinasUpdateManyWithWhereWithoutProfessoresInput = {
    where: disciplinasScalarWhereInput
    data: XOR<disciplinasUpdateManyMutationInput, disciplinasUncheckedUpdateManyWithoutProfessoresInput>
  }

  export type disciplinasScalarWhereInput = {
    AND?: disciplinasScalarWhereInput | disciplinasScalarWhereInput[]
    OR?: disciplinasScalarWhereInput[]
    NOT?: disciplinasScalarWhereInput | disciplinasScalarWhereInput[]
    id_disciplina?: IntFilter<"disciplinas"> | number
    Nome?: StringNullableFilter<"disciplinas"> | string | null
    Numero?: IntNullableFilter<"disciplinas"> | number | null
    id_professor?: IntNullableFilter<"disciplinas"> | number | null
  }

  export type disciplinas_professoresUpsertWithWhereUniqueWithoutProfessoresInput = {
    where: disciplinas_professoresWhereUniqueInput
    update: XOR<disciplinas_professoresUpdateWithoutProfessoresInput, disciplinas_professoresUncheckedUpdateWithoutProfessoresInput>
    create: XOR<disciplinas_professoresCreateWithoutProfessoresInput, disciplinas_professoresUncheckedCreateWithoutProfessoresInput>
  }

  export type disciplinas_professoresUpdateWithWhereUniqueWithoutProfessoresInput = {
    where: disciplinas_professoresWhereUniqueInput
    data: XOR<disciplinas_professoresUpdateWithoutProfessoresInput, disciplinas_professoresUncheckedUpdateWithoutProfessoresInput>
  }

  export type disciplinas_professoresUpdateManyWithWhereWithoutProfessoresInput = {
    where: disciplinas_professoresScalarWhereInput
    data: XOR<disciplinas_professoresUpdateManyMutationInput, disciplinas_professoresUncheckedUpdateManyWithoutProfessoresInput>
  }

  export type horariosCreateWithoutSalasInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutHorariosInput
    utilizadores?: utilizadoresCreateNestedOneWithoutHorariosInput
    salas_horarios?: salas_horariosCreateNestedManyWithoutHorariosInput
  }

  export type horariosUncheckedCreateWithoutSalasInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_utilizador?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutHorariosInput
    salas_horarios?: salas_horariosUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type horariosCreateOrConnectWithoutSalasInput = {
    where: horariosWhereUniqueInput
    create: XOR<horariosCreateWithoutSalasInput, horariosUncheckedCreateWithoutSalasInput>
  }

  export type horariosCreateManySalasInputEnvelope = {
    data: horariosCreateManySalasInput | horariosCreateManySalasInput[]
    skipDuplicates?: boolean
  }

  export type salas_horariosCreateWithoutSalasInput = {
    horarios: horariosCreateNestedOneWithoutSalas_horariosInput
  }

  export type salas_horariosUncheckedCreateWithoutSalasInput = {
    id_horario: number
  }

  export type salas_horariosCreateOrConnectWithoutSalasInput = {
    where: salas_horariosWhereUniqueInput
    create: XOR<salas_horariosCreateWithoutSalasInput, salas_horariosUncheckedCreateWithoutSalasInput>
  }

  export type salas_horariosCreateManySalasInputEnvelope = {
    data: salas_horariosCreateManySalasInput | salas_horariosCreateManySalasInput[]
    skipDuplicates?: boolean
  }

  export type horariosUpsertWithWhereUniqueWithoutSalasInput = {
    where: horariosWhereUniqueInput
    update: XOR<horariosUpdateWithoutSalasInput, horariosUncheckedUpdateWithoutSalasInput>
    create: XOR<horariosCreateWithoutSalasInput, horariosUncheckedCreateWithoutSalasInput>
  }

  export type horariosUpdateWithWhereUniqueWithoutSalasInput = {
    where: horariosWhereUniqueInput
    data: XOR<horariosUpdateWithoutSalasInput, horariosUncheckedUpdateWithoutSalasInput>
  }

  export type horariosUpdateManyWithWhereWithoutSalasInput = {
    where: horariosScalarWhereInput
    data: XOR<horariosUpdateManyMutationInput, horariosUncheckedUpdateManyWithoutSalasInput>
  }

  export type horariosScalarWhereInput = {
    AND?: horariosScalarWhereInput | horariosScalarWhereInput[]
    OR?: horariosScalarWhereInput[]
    NOT?: horariosScalarWhereInput | horariosScalarWhereInput[]
    id_horario?: IntFilter<"horarios"> | number
    Data_inicio?: DateTimeNullableFilter<"horarios"> | Date | string | null
    Data_fim?: DateTimeNullableFilter<"horarios"> | Date | string | null
    id_utilizador?: IntNullableFilter<"horarios"> | number | null
    id_sala?: IntNullableFilter<"horarios"> | number | null
  }

  export type salas_horariosUpsertWithWhereUniqueWithoutSalasInput = {
    where: salas_horariosWhereUniqueInput
    update: XOR<salas_horariosUpdateWithoutSalasInput, salas_horariosUncheckedUpdateWithoutSalasInput>
    create: XOR<salas_horariosCreateWithoutSalasInput, salas_horariosUncheckedCreateWithoutSalasInput>
  }

  export type salas_horariosUpdateWithWhereUniqueWithoutSalasInput = {
    where: salas_horariosWhereUniqueInput
    data: XOR<salas_horariosUpdateWithoutSalasInput, salas_horariosUncheckedUpdateWithoutSalasInput>
  }

  export type salas_horariosUpdateManyWithWhereWithoutSalasInput = {
    where: salas_horariosScalarWhereInput
    data: XOR<salas_horariosUpdateManyMutationInput, salas_horariosUncheckedUpdateManyWithoutSalasInput>
  }

  export type salasCreateWithoutSalas_horariosInput = {
    id_sala: number
    Detalhe?: string | null
    horarios?: horariosCreateNestedManyWithoutSalasInput
  }

  export type salasUncheckedCreateWithoutSalas_horariosInput = {
    id_sala: number
    Detalhe?: string | null
    horarios?: horariosUncheckedCreateNestedManyWithoutSalasInput
  }

  export type salasCreateOrConnectWithoutSalas_horariosInput = {
    where: salasWhereUniqueInput
    create: XOR<salasCreateWithoutSalas_horariosInput, salasUncheckedCreateWithoutSalas_horariosInput>
  }

  export type horariosCreateWithoutSalas_horariosInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutHorariosInput
    utilizadores?: utilizadoresCreateNestedOneWithoutHorariosInput
    salas?: salasCreateNestedOneWithoutHorariosInput
  }

  export type horariosUncheckedCreateWithoutSalas_horariosInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_utilizador?: number | null
    id_sala?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type horariosCreateOrConnectWithoutSalas_horariosInput = {
    where: horariosWhereUniqueInput
    create: XOR<horariosCreateWithoutSalas_horariosInput, horariosUncheckedCreateWithoutSalas_horariosInput>
  }

  export type salasUpsertWithoutSalas_horariosInput = {
    update: XOR<salasUpdateWithoutSalas_horariosInput, salasUncheckedUpdateWithoutSalas_horariosInput>
    create: XOR<salasCreateWithoutSalas_horariosInput, salasUncheckedCreateWithoutSalas_horariosInput>
    where?: salasWhereInput
  }

  export type salasUpdateToOneWithWhereWithoutSalas_horariosInput = {
    where?: salasWhereInput
    data: XOR<salasUpdateWithoutSalas_horariosInput, salasUncheckedUpdateWithoutSalas_horariosInput>
  }

  export type salasUpdateWithoutSalas_horariosInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
    horarios?: horariosUpdateManyWithoutSalasNestedInput
  }

  export type salasUncheckedUpdateWithoutSalas_horariosInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
    Detalhe?: NullableStringFieldUpdateOperationsInput | string | null
    horarios?: horariosUncheckedUpdateManyWithoutSalasNestedInput
  }

  export type horariosUpsertWithoutSalas_horariosInput = {
    update: XOR<horariosUpdateWithoutSalas_horariosInput, horariosUncheckedUpdateWithoutSalas_horariosInput>
    create: XOR<horariosCreateWithoutSalas_horariosInput, horariosUncheckedCreateWithoutSalas_horariosInput>
    where?: horariosWhereInput
  }

  export type horariosUpdateToOneWithWhereWithoutSalas_horariosInput = {
    where?: horariosWhereInput
    data: XOR<horariosUpdateWithoutSalas_horariosInput, horariosUncheckedUpdateWithoutSalas_horariosInput>
  }

  export type horariosUpdateWithoutSalas_horariosInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutHorariosNestedInput
    utilizadores?: utilizadoresUpdateOneWithoutHorariosNestedInput
    salas?: salasUpdateOneWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateWithoutSalas_horariosInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    id_sala?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type disciplinas_utilizadoresCreateWithoutUtilizadoresInput = {
    disciplinas: disciplinasCreateNestedOneWithoutDisciplinas_utilizadoresInput
  }

  export type disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput = {
    id_disciplina: number
  }

  export type disciplinas_utilizadoresCreateOrConnectWithoutUtilizadoresInput = {
    where: disciplinas_utilizadoresWhereUniqueInput
    create: XOR<disciplinas_utilizadoresCreateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput>
  }

  export type disciplinas_utilizadoresCreateManyUtilizadoresInputEnvelope = {
    data: disciplinas_utilizadoresCreateManyUtilizadoresInput | disciplinas_utilizadoresCreateManyUtilizadoresInput[]
    skipDuplicates?: boolean
  }

  export type horariosCreateWithoutUtilizadoresInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    disciplinas_horarios?: disciplinas_horariosCreateNestedManyWithoutHorariosInput
    salas?: salasCreateNestedOneWithoutHorariosInput
    salas_horarios?: salas_horariosCreateNestedManyWithoutHorariosInput
  }

  export type horariosUncheckedCreateWithoutUtilizadoresInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_sala?: number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedCreateNestedManyWithoutHorariosInput
    salas_horarios?: salas_horariosUncheckedCreateNestedManyWithoutHorariosInput
  }

  export type horariosCreateOrConnectWithoutUtilizadoresInput = {
    where: horariosWhereUniqueInput
    create: XOR<horariosCreateWithoutUtilizadoresInput, horariosUncheckedCreateWithoutUtilizadoresInput>
  }

  export type horariosCreateManyUtilizadoresInputEnvelope = {
    data: horariosCreateManyUtilizadoresInput | horariosCreateManyUtilizadoresInput[]
    skipDuplicates?: boolean
  }

  export type disciplinas_utilizadoresUpsertWithWhereUniqueWithoutUtilizadoresInput = {
    where: disciplinas_utilizadoresWhereUniqueInput
    update: XOR<disciplinas_utilizadoresUpdateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedUpdateWithoutUtilizadoresInput>
    create: XOR<disciplinas_utilizadoresCreateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedCreateWithoutUtilizadoresInput>
  }

  export type disciplinas_utilizadoresUpdateWithWhereUniqueWithoutUtilizadoresInput = {
    where: disciplinas_utilizadoresWhereUniqueInput
    data: XOR<disciplinas_utilizadoresUpdateWithoutUtilizadoresInput, disciplinas_utilizadoresUncheckedUpdateWithoutUtilizadoresInput>
  }

  export type disciplinas_utilizadoresUpdateManyWithWhereWithoutUtilizadoresInput = {
    where: disciplinas_utilizadoresScalarWhereInput
    data: XOR<disciplinas_utilizadoresUpdateManyMutationInput, disciplinas_utilizadoresUncheckedUpdateManyWithoutUtilizadoresInput>
  }

  export type horariosUpsertWithWhereUniqueWithoutUtilizadoresInput = {
    where: horariosWhereUniqueInput
    update: XOR<horariosUpdateWithoutUtilizadoresInput, horariosUncheckedUpdateWithoutUtilizadoresInput>
    create: XOR<horariosCreateWithoutUtilizadoresInput, horariosUncheckedCreateWithoutUtilizadoresInput>
  }

  export type horariosUpdateWithWhereUniqueWithoutUtilizadoresInput = {
    where: horariosWhereUniqueInput
    data: XOR<horariosUpdateWithoutUtilizadoresInput, horariosUncheckedUpdateWithoutUtilizadoresInput>
  }

  export type horariosUpdateManyWithWhereWithoutUtilizadoresInput = {
    where: horariosScalarWhereInput
    data: XOR<horariosUpdateManyMutationInput, horariosUncheckedUpdateManyWithoutUtilizadoresInput>
  }

  export type disciplinas_horariosCreateManyDisciplinasInput = {
    id_horario: number
  }

  export type disciplinas_professoresCreateManyDisciplinasInput = {
    id_professor: number
  }

  export type disciplinas_utilizadoresCreateManyDisciplinasInput = {
    id_utilizador: number
  }

  export type disciplinas_horariosUpdateWithoutDisciplinasInput = {
    horarios?: horariosUpdateOneRequiredWithoutDisciplinas_horariosNestedInput
  }

  export type disciplinas_horariosUncheckedUpdateWithoutDisciplinasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_professoresUpdateWithoutDisciplinasInput = {
    professores?: professoresUpdateOneRequiredWithoutDisciplinas_professoresNestedInput
  }

  export type disciplinas_professoresUncheckedUpdateWithoutDisciplinasInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasInput = {
    id_professor?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_utilizadoresUpdateWithoutDisciplinasInput = {
    utilizadores?: utilizadoresUpdateOneRequiredWithoutDisciplinas_utilizadoresNestedInput
  }

  export type disciplinas_utilizadoresUncheckedUpdateWithoutDisciplinasInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasInput = {
    id_utilizador?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_horariosCreateManyHorariosInput = {
    id_disciplina: number
  }

  export type salas_horariosCreateManyHorariosInput = {
    id_sala: number
  }

  export type disciplinas_horariosUpdateWithoutHorariosInput = {
    disciplinas?: disciplinasUpdateOneRequiredWithoutDisciplinas_horariosNestedInput
  }

  export type disciplinas_horariosUncheckedUpdateWithoutHorariosInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_horariosUncheckedUpdateManyWithoutHorariosInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
  }

  export type salas_horariosUpdateWithoutHorariosInput = {
    salas?: salasUpdateOneRequiredWithoutSalas_horariosNestedInput
  }

  export type salas_horariosUncheckedUpdateWithoutHorariosInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
  }

  export type salas_horariosUncheckedUpdateManyWithoutHorariosInput = {
    id_sala?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinasCreateManyProfessoresInput = {
    id_disciplina: number
    Nome?: string | null
    Numero?: number | null
  }

  export type disciplinas_professoresCreateManyProfessoresInput = {
    id_disciplina: number
  }

  export type disciplinasUpdateWithoutProfessoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasUncheckedUpdateWithoutProfessoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_professores?: disciplinas_professoresUncheckedUpdateManyWithoutDisciplinasNestedInput
    disciplinas_utilizadores?: disciplinas_utilizadoresUncheckedUpdateManyWithoutDisciplinasNestedInput
  }

  export type disciplinasUncheckedUpdateManyWithoutProfessoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
    Nome?: NullableStringFieldUpdateOperationsInput | string | null
    Numero?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type disciplinas_professoresUpdateWithoutProfessoresInput = {
    disciplinas?: disciplinasUpdateOneRequiredWithoutDisciplinas_professoresNestedInput
  }

  export type disciplinas_professoresUncheckedUpdateWithoutProfessoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_professoresUncheckedUpdateManyWithoutProfessoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
  }

  export type horariosCreateManySalasInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_utilizador?: number | null
  }

  export type salas_horariosCreateManySalasInput = {
    id_horario: number
  }

  export type horariosUpdateWithoutSalasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutHorariosNestedInput
    utilizadores?: utilizadoresUpdateOneWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUpdateManyWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateWithoutSalasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateManyWithoutSalasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_utilizador?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type salas_horariosUpdateWithoutSalasInput = {
    horarios?: horariosUpdateOneRequiredWithoutSalas_horariosNestedInput
  }

  export type salas_horariosUncheckedUpdateWithoutSalasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type salas_horariosUncheckedUpdateManyWithoutSalasInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_utilizadoresCreateManyUtilizadoresInput = {
    id_disciplina: number
  }

  export type horariosCreateManyUtilizadoresInput = {
    id_horario: number
    Data_inicio?: Date | string | null
    Data_fim?: Date | string | null
    id_sala?: number | null
  }

  export type disciplinas_utilizadoresUpdateWithoutUtilizadoresInput = {
    disciplinas?: disciplinasUpdateOneRequiredWithoutDisciplinas_utilizadoresNestedInput
  }

  export type disciplinas_utilizadoresUncheckedUpdateWithoutUtilizadoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
  }

  export type disciplinas_utilizadoresUncheckedUpdateManyWithoutUtilizadoresInput = {
    id_disciplina?: IntFieldUpdateOperationsInput | number
  }

  export type horariosUpdateWithoutUtilizadoresInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    disciplinas_horarios?: disciplinas_horariosUpdateManyWithoutHorariosNestedInput
    salas?: salasUpdateOneWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUpdateManyWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateWithoutUtilizadoresInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sala?: NullableIntFieldUpdateOperationsInput | number | null
    disciplinas_horarios?: disciplinas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
    salas_horarios?: salas_horariosUncheckedUpdateManyWithoutHorariosNestedInput
  }

  export type horariosUncheckedUpdateManyWithoutUtilizadoresInput = {
    id_horario?: IntFieldUpdateOperationsInput | number
    Data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Data_fim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sala?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use DisciplinasCountOutputTypeDefaultArgs instead
     */
    export type DisciplinasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DisciplinasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HorariosCountOutputTypeDefaultArgs instead
     */
    export type HorariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HorariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProfessoresCountOutputTypeDefaultArgs instead
     */
    export type ProfessoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProfessoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SalasCountOutputTypeDefaultArgs instead
     */
    export type SalasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SalasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UtilizadoresCountOutputTypeDefaultArgs instead
     */
    export type UtilizadoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UtilizadoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use disciplinasDefaultArgs instead
     */
    export type disciplinasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = disciplinasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use disciplinas_horariosDefaultArgs instead
     */
    export type disciplinas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = disciplinas_horariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use disciplinas_professoresDefaultArgs instead
     */
    export type disciplinas_professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = disciplinas_professoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use disciplinas_utilizadoresDefaultArgs instead
     */
    export type disciplinas_utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = disciplinas_utilizadoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use horariosDefaultArgs instead
     */
    export type horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = horariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use professoresDefaultArgs instead
     */
    export type professoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = professoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use salasDefaultArgs instead
     */
    export type salasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = salasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use salas_horariosDefaultArgs instead
     */
    export type salas_horariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = salas_horariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use semestresDefaultArgs instead
     */
    export type semestresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = semestresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use utilizadoresDefaultArgs instead
     */
    export type utilizadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = utilizadoresDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}